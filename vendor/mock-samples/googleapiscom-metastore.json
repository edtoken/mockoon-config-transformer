{
  "uuid": "fa604f77-461f-4282-9aeb-b48507182f3a",
  "lastMigration": 24,
  "name": "Dataproc Metastore API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "8ea98aa0-8b3c-46a5-99e9-099f21b3f772",
      "documentation": "Deletes a single backup.",
      "method": "delete",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "c82567df-2a40-420f-aebd-5f24a395aee0",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66fcefd7-2405-4b5b-b230-91c7c561179e",
      "documentation": "Gets details of a single import.",
      "method": "get",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "2af8e7a5-2bb8-48a9-a817-06bed4878876",
          "body": "{\n  \"createTime\": \"\",\n  \"databaseDump\": {\n    \"databaseType\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'MYSQL')}}\",\n    \"gcsUri\": \"\",\n    \"sourceDatabase\": \"\",\n    \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'MYSQL' 'AVRO')}}\"\n  },\n  \"description\": \"\",\n  \"endTime\": \"\",\n  \"name\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'RUNNING' 'SUCCEEDED' 'UPDATING' 'FAILED')}}\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb23a7cd-02bd-4c41-b1f5-7a4478992a8e",
      "documentation": "Updates a single import. Only the description field of MetadataImport is supported to be updated.",
      "method": "patch",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "4db3d59f-20c1-40c3-9021-23319291d5af",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95895744-8ce8-4c0d-8179-5e77940a7e1a",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta/:name/locations",
      "responses": [
        {
          "uuid": "5e8be364-5082-4b0e-b326-c641cfe1782b",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8dd7b4db-32d4-487e-9119-55b727f48edc",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1beta/:name/operations",
      "responses": [
        {
          "uuid": "f294d6e4-88cf-435c-93a3-ec80ae94fde6",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'datatype.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96382c89-60d7-49d4-80d4-7c295a59883b",
      "documentation": "Lists backups in a service.",
      "method": "get",
      "endpoint": "v1beta/:parent/backups",
      "responses": [
        {
          "uuid": "9c63e1ff-3cdb-4b68-b65f-417c68d98330",
          "body": "{\n  \"backups\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"endTime\": \"\",\n      \"name\": \"\",\n      \"restoringServices\": [\n        \"\"\n      ],\n      \"serviceRevision\": {\n        \"artifactGcsUri\": \"\",\n        \"createTime\": \"\",\n        \"databaseType\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'MYSQL' 'SPANNER')}}\",\n        \"encryptionConfig\": {\n          \"kmsKey\": \"\"\n        },\n        \"endpointUri\": \"\",\n        \"hiveMetastoreConfig\": {\n          \"auxiliaryVersions\": {},\n          \"configOverrides\": {},\n          \"endpointProtocol\": \"{{oneOf (array 'ENDPOINT_PROTOCOL_UNSPECIFIED' 'THRIFT' 'GRPC')}}\",\n          \"kerberosConfig\": {\n            \"keytab\": {\n              \"cloudSecret\": \"\"\n            },\n            \"krb5ConfigGcsUri\": \"\",\n            \"principal\": \"\"\n          },\n          \"version\": \"\"\n        },\n        \"labels\": {},\n        \"maintenanceWindow\": {\n          \"dayOfWeek\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n          \"hourOfDay\": {{faker 'datatype.number'}}\n        },\n        \"metadataIntegration\": {\n          \"dataCatalogConfig\": {\n            \"enabled\": {{faker 'datatype.boolean'}}\n          },\n          \"dataplexConfig\": {\n            \"lakeResources\": {}\n          }\n        },\n        \"metadataManagementActivity\": {\n          \"metadataExports\": [\n            {\n              \"databaseDumpType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'MYSQL' 'AVRO')}}\",\n              \"destinationGcsUri\": \"\",\n              \"endTime\": \"\",\n              \"startTime\": \"\",\n              \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\"\n            }\n          ],\n          \"restores\": [\n            {\n              \"backup\": \"\",\n              \"details\": \"\",\n              \"endTime\": \"\",\n              \"startTime\": \"\",\n              \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n              \"type\": \"{{oneOf (array 'RESTORE_TYPE_UNSPECIFIED' 'FULL' 'METADATA_ONLY')}}\"\n            }\n          ]\n        },\n        \"name\": \"\",\n        \"network\": \"\",\n        \"networkConfig\": {\n          \"consumers\": [\n            {\n              \"endpointUri\": \"\",\n              \"subnetwork\": \"\"\n            }\n          ]\n        },\n        \"port\": {{faker 'datatype.number'}},\n        \"releaseChannel\": \"{{oneOf (array 'RELEASE_CHANNEL_UNSPECIFIED' 'CANARY' 'STABLE')}}\",\n        \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'ACTIVE' 'SUSPENDING' 'SUSPENDED' 'UPDATING' 'DELETING' 'ERROR')}}\",\n        \"stateMessage\": \"\",\n        \"telemetryConfig\": {\n          \"logFormat\": \"{{oneOf (array 'LOG_FORMAT_UNSPECIFIED' 'LEGACY' 'JSON')}}\"\n        },\n        \"tier\": \"{{oneOf (array 'TIER_UNSPECIFIED' 'DEVELOPER' 'ENTERPRISE')}}\",\n        \"uid\": \"\",\n        \"updateTime\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'DELETING' 'ACTIVE' 'FAILED' 'RESTORING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03987496-4439-42c5-8d95-e48d04ed80cb",
      "documentation": "Creates a new backup in a given project and location.",
      "method": "post",
      "endpoint": "v1beta/:parent/backups",
      "responses": [
        {
          "uuid": "66f846ed-68e6-42b9-a958-8d4a87da4eb1",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "be29f520-bacf-4702-b794-06b537015b1f",
      "documentation": "Lists federations in a project and location.",
      "method": "get",
      "endpoint": "v1beta/:parent/federations",
      "responses": [
        {
          "uuid": "4310fab2-a746-4fd3-b11f-d5782bb1c416",
          "body": "{\n  \"federations\": [\n    {\n      \"backendMetastores\": {},\n      \"createTime\": \"\",\n      \"endpointUri\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'ACTIVE' 'UPDATING' 'DELETING' 'ERROR')}}\",\n      \"stateMessage\": \"\",\n      \"uid\": \"\",\n      \"updateTime\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0653bf3a-8f4c-461f-8d8d-48ea1a54b0e8",
      "documentation": "Creates a metastore federation in a project and location.",
      "method": "post",
      "endpoint": "v1beta/:parent/federations",
      "responses": [
        {
          "uuid": "a7748a1c-a0a8-4f1f-94c0-2f97a755f079",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ed63bda-ae74-4243-88d6-bbf3e6ebace0",
      "documentation": "Lists imports in a service.",
      "method": "get",
      "endpoint": "v1beta/:parent/metadataImports",
      "responses": [
        {
          "uuid": "d28d2733-aa1a-4c12-a117-e940d7764a1b",
          "body": "{\n  \"metadataImports\": [\n    {\n      \"createTime\": \"\",\n      \"databaseDump\": {\n        \"databaseType\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'MYSQL')}}\",\n        \"gcsUri\": \"\",\n        \"sourceDatabase\": \"\",\n        \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'MYSQL' 'AVRO')}}\"\n      },\n      \"description\": \"\",\n      \"endTime\": \"\",\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'RUNNING' 'SUCCEEDED' 'UPDATING' 'FAILED')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8565a60c-4ff7-464e-aa97-7c9bb81eb206",
      "documentation": "Creates a new MetadataImport in a given project and location.",
      "method": "post",
      "endpoint": "v1beta/:parent/metadataImports",
      "responses": [
        {
          "uuid": "b565dc4c-6fee-4296-9c9c-15b67a65a7e2",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4619ed23-87aa-47a2-afc3-c96c2ca24516",
      "documentation": "Lists services in a project and location.",
      "method": "get",
      "endpoint": "v1beta/:parent/services",
      "responses": [
        {
          "uuid": "19ca173b-160d-48ff-b0eb-d8fc64a10e34",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"services\": [\n    {\n      \"artifactGcsUri\": \"\",\n      \"createTime\": \"\",\n      \"databaseType\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'MYSQL' 'SPANNER')}}\",\n      \"encryptionConfig\": {\n        \"kmsKey\": \"\"\n      },\n      \"endpointUri\": \"\",\n      \"hiveMetastoreConfig\": {\n        \"auxiliaryVersions\": {},\n        \"configOverrides\": {},\n        \"endpointProtocol\": \"{{oneOf (array 'ENDPOINT_PROTOCOL_UNSPECIFIED' 'THRIFT' 'GRPC')}}\",\n        \"kerberosConfig\": {\n          \"keytab\": {\n            \"cloudSecret\": \"\"\n          },\n          \"krb5ConfigGcsUri\": \"\",\n          \"principal\": \"\"\n        },\n        \"version\": \"\"\n      },\n      \"labels\": {},\n      \"maintenanceWindow\": {\n        \"dayOfWeek\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n        \"hourOfDay\": {{faker 'datatype.number'}}\n      },\n      \"metadataIntegration\": {\n        \"dataCatalogConfig\": {\n          \"enabled\": {{faker 'datatype.boolean'}}\n        },\n        \"dataplexConfig\": {\n          \"lakeResources\": {}\n        }\n      },\n      \"metadataManagementActivity\": {\n        \"metadataExports\": [\n          {\n            \"databaseDumpType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'MYSQL' 'AVRO')}}\",\n            \"destinationGcsUri\": \"\",\n            \"endTime\": \"\",\n            \"startTime\": \"\",\n            \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\"\n          }\n        ],\n        \"restores\": [\n          {\n            \"backup\": \"\",\n            \"details\": \"\",\n            \"endTime\": \"\",\n            \"startTime\": \"\",\n            \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n            \"type\": \"{{oneOf (array 'RESTORE_TYPE_UNSPECIFIED' 'FULL' 'METADATA_ONLY')}}\"\n          }\n        ]\n      },\n      \"name\": \"\",\n      \"network\": \"\",\n      \"networkConfig\": {\n        \"consumers\": [\n          {\n            \"endpointUri\": \"\",\n            \"subnetwork\": \"\"\n          }\n        ]\n      },\n      \"port\": {{faker 'datatype.number'}},\n      \"releaseChannel\": \"{{oneOf (array 'RELEASE_CHANNEL_UNSPECIFIED' 'CANARY' 'STABLE')}}\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'ACTIVE' 'SUSPENDING' 'SUSPENDED' 'UPDATING' 'DELETING' 'ERROR')}}\",\n      \"stateMessage\": \"\",\n      \"telemetryConfig\": {\n        \"logFormat\": \"{{oneOf (array 'LOG_FORMAT_UNSPECIFIED' 'LEGACY' 'JSON')}}\"\n      },\n      \"tier\": \"{{oneOf (array 'TIER_UNSPECIFIED' 'DEVELOPER' 'ENTERPRISE')}}\",\n      \"uid\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d46c2d5-16ed-4528-94f4-771c3a35ae71",
      "documentation": "Creates a metastore service in a project and location.",
      "method": "post",
      "endpoint": "v1beta/:parent/services",
      "responses": [
        {
          "uuid": "8117169f-a860-40be-9592-1af199c2e941",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37ca701e-82b5-4777-822f-7396e42f0c0d",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "94fd57bc-6060-46aa-821b-cb4da4468308",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "36e35605-093a-4b3c-829d-a551c96c424a",
      "documentation": "Removes the attached IAM policies for a resource",
      "method": "post",
      "endpoint": "v1beta/:resource:removeIamPolicy",
      "responses": [
        {
          "uuid": "c553c6e8-38fe-411a-bb4f-f0ec642da9be",
          "body": "{\n  \"success\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "858448d5-1251-4a02-8ae3-6e670773b184",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
      "method": "post",
      "endpoint": "v1beta/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "6049d7c7-8349-4963-b0c7-8707404799e9",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0aef9791-8f58-45c1-9f61-02079c8c33ee",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "c41b919a-3742-454e-bde3-88d6cc93df99",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1afacf38-7b3b-4f28-ab8c-3807dfd29225",
      "documentation": "Exports metadata from a service.",
      "method": "post",
      "endpoint": "v1beta/:service:exportMetadata",
      "responses": [
        {
          "uuid": "bec85573-f9ef-4ef7-b7fc-39be29e58b37",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0a6e5d07-9a91-4d86-b66e-05894f9f1221",
      "documentation": "Restores a service from a backup.",
      "method": "post",
      "endpoint": "v1beta/:service:restore",
      "responses": [
        {
          "uuid": "840bd8e5-2acb-4a7f-99b6-9b538d026386",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}