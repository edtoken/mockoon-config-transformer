{
  "uuid": "accbf7a5-c1a6-403b-aa3d-d190fedbd9e0",
  "lastMigration": 24,
  "name": "Cloud Natural Language API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "cd93cd27-ccf7-437e-94e7-3b50316fae59",
      "documentation": "Finds named entities (currently proper names and common nouns) in the text along with entity types, salience, mentions for each entity, and other properties.",
      "method": "post",
      "endpoint": "v1beta2/documents:analyzeEntities",
      "responses": [
        {
          "uuid": "42dba796-46b3-4fad-9ff1-0c1fd12ff75a",
          "body": "{\n  \"entities\": [\n    {\n      \"mentions\": [\n        {\n          \"sentiment\": {\n            \"magnitude\": {{faker 'datatype.float'}},\n            \"score\": {{faker 'datatype.float'}}\n          },\n          \"text\": {\n            \"beginOffset\": {{faker 'datatype.number'}},\n            \"content\": \"\"\n          },\n          \"type\": \"{{oneOf (array 'TYPE_UNKNOWN' 'PROPER' 'COMMON')}}\"\n        }\n      ],\n      \"metadata\": {},\n      \"name\": \"\",\n      \"salience\": {{faker 'datatype.float'}},\n      \"sentiment\": {\n        \"magnitude\": {{faker 'datatype.float'}},\n        \"score\": {{faker 'datatype.float'}}\n      },\n      \"type\": \"{{oneOf (array 'UNKNOWN' 'PERSON' 'LOCATION' 'ORGANIZATION' 'EVENT' 'WORK_OF_ART' 'CONSUMER_GOOD' 'OTHER' 'PHONE_NUMBER' 'ADDRESS' 'DATE' 'NUMBER' 'PRICE')}}\"\n    }\n  ],\n  \"language\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f792e665-0139-4c77-812a-ebf7f046f727",
      "documentation": "Finds entities, similar to AnalyzeEntities in the text and analyzes sentiment associated with each entity and its mentions.",
      "method": "post",
      "endpoint": "v1beta2/documents:analyzeEntitySentiment",
      "responses": [
        {
          "uuid": "e8633dad-ee00-4053-a120-b5979ddb3526",
          "body": "{\n  \"entities\": [\n    {\n      \"mentions\": [\n        {\n          \"sentiment\": {\n            \"magnitude\": {{faker 'datatype.float'}},\n            \"score\": {{faker 'datatype.float'}}\n          },\n          \"text\": {\n            \"beginOffset\": {{faker 'datatype.number'}},\n            \"content\": \"\"\n          },\n          \"type\": \"{{oneOf (array 'TYPE_UNKNOWN' 'PROPER' 'COMMON')}}\"\n        }\n      ],\n      \"metadata\": {},\n      \"name\": \"\",\n      \"salience\": {{faker 'datatype.float'}},\n      \"sentiment\": {\n        \"magnitude\": {{faker 'datatype.float'}},\n        \"score\": {{faker 'datatype.float'}}\n      },\n      \"type\": \"{{oneOf (array 'UNKNOWN' 'PERSON' 'LOCATION' 'ORGANIZATION' 'EVENT' 'WORK_OF_ART' 'CONSUMER_GOOD' 'OTHER' 'PHONE_NUMBER' 'ADDRESS' 'DATE' 'NUMBER' 'PRICE')}}\"\n    }\n  ],\n  \"language\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd6ff830-e0d4-473f-b52d-2ec8105d8c28",
      "documentation": "Analyzes the sentiment of the provided text.",
      "method": "post",
      "endpoint": "v1beta2/documents:analyzeSentiment",
      "responses": [
        {
          "uuid": "43670789-22f3-4f9d-97f3-931cdb171970",
          "body": "{\n  \"documentSentiment\": {\n    \"magnitude\": {{faker 'datatype.float'}},\n    \"score\": {{faker 'datatype.float'}}\n  },\n  \"language\": \"\",\n  \"sentences\": [\n    {\n      \"sentiment\": {\n        \"magnitude\": {{faker 'datatype.float'}},\n        \"score\": {{faker 'datatype.float'}}\n      },\n      \"text\": {\n        \"beginOffset\": {{faker 'datatype.number'}},\n        \"content\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4816e34e-5972-4cb9-a44b-666a44fb48dd",
      "documentation": "Analyzes the syntax of the text and provides sentence boundaries and tokenization along with part of speech tags, dependency trees, and other properties.",
      "method": "post",
      "endpoint": "v1beta2/documents:analyzeSyntax",
      "responses": [
        {
          "uuid": "9a02f60f-b663-4ccf-838b-2a053734ca78",
          "body": "{\n  \"language\": \"\",\n  \"sentences\": [\n    {\n      \"sentiment\": {\n        \"magnitude\": {{faker 'datatype.float'}},\n        \"score\": {{faker 'datatype.float'}}\n      },\n      \"text\": {\n        \"beginOffset\": {{faker 'datatype.number'}},\n        \"content\": \"\"\n      }\n    }\n  ],\n  \"tokens\": [\n    {\n      \"dependencyEdge\": {\n        \"headTokenIndex\": {{faker 'datatype.number'}},\n        \"label\": \"{{oneOf (array 'UNKNOWN' 'ABBREV' 'ACOMP' 'ADVCL' 'ADVMOD' 'AMOD' 'APPOS' 'ATTR' 'AUX' 'AUXPASS' 'CC' 'CCOMP' 'CONJ' 'CSUBJ' 'CSUBJPASS' 'DEP' 'DET' 'DISCOURSE' 'DOBJ' 'EXPL' 'GOESWITH' 'IOBJ' 'MARK' 'MWE' 'MWV' 'NEG' 'NN' 'NPADVMOD' 'NSUBJ' 'NSUBJPASS' 'NUM' 'NUMBER' 'P' 'PARATAXIS' 'PARTMOD' 'PCOMP' 'POBJ' 'POSS' 'POSTNEG' 'PRECOMP' 'PRECONJ' 'PREDET' 'PREF' 'PREP' 'PRONL' 'PRT' 'PS' 'QUANTMOD' 'RCMOD' 'RCMODREL' 'RDROP' 'REF' 'REMNANT' 'REPARANDUM' 'ROOT' 'SNUM' 'SUFF' 'TMOD' 'TOPIC' 'VMOD' 'VOCATIVE' 'XCOMP' 'SUFFIX' 'TITLE' 'ADVPHMOD' 'AUXCAUS' 'AUXVV' 'DTMOD' 'FOREIGN' 'KW' 'LIST' 'NOMC' 'NOMCSUBJ' 'NOMCSUBJPASS' 'NUMC' 'COP' 'DISLOCATED' 'ASP' 'GMOD' 'GOBJ' 'INFMOD' 'MES' 'NCOMP')}}\"\n      },\n      \"lemma\": \"\",\n      \"partOfSpeech\": {\n        \"aspect\": \"{{oneOf (array 'ASPECT_UNKNOWN' 'PERFECTIVE' 'IMPERFECTIVE' 'PROGRESSIVE')}}\",\n        \"case\": \"{{oneOf (array 'CASE_UNKNOWN' 'ACCUSATIVE' 'ADVERBIAL' 'COMPLEMENTIVE' 'DATIVE' 'GENITIVE' 'INSTRUMENTAL' 'LOCATIVE' 'NOMINATIVE' 'OBLIQUE' 'PARTITIVE' 'PREPOSITIONAL' 'REFLEXIVE_CASE' 'RELATIVE_CASE' 'VOCATIVE')}}\",\n        \"form\": \"{{oneOf (array 'FORM_UNKNOWN' 'ADNOMIAL' 'AUXILIARY' 'COMPLEMENTIZER' 'FINAL_ENDING' 'GERUND' 'REALIS' 'IRREALIS' 'SHORT' 'LONG' 'ORDER' 'SPECIFIC')}}\",\n        \"gender\": \"{{oneOf (array 'GENDER_UNKNOWN' 'FEMININE' 'MASCULINE' 'NEUTER')}}\",\n        \"mood\": \"{{oneOf (array 'MOOD_UNKNOWN' 'CONDITIONAL_MOOD' 'IMPERATIVE' 'INDICATIVE' 'INTERROGATIVE' 'JUSSIVE' 'SUBJUNCTIVE')}}\",\n        \"number\": \"{{oneOf (array 'NUMBER_UNKNOWN' 'SINGULAR' 'PLURAL' 'DUAL')}}\",\n        \"person\": \"{{oneOf (array 'PERSON_UNKNOWN' 'FIRST' 'SECOND' 'THIRD' 'REFLEXIVE_PERSON')}}\",\n        \"proper\": \"{{oneOf (array 'PROPER_UNKNOWN' 'PROPER' 'NOT_PROPER')}}\",\n        \"reciprocity\": \"{{oneOf (array 'RECIPROCITY_UNKNOWN' 'RECIPROCAL' 'NON_RECIPROCAL')}}\",\n        \"tag\": \"{{oneOf (array 'UNKNOWN' 'ADJ' 'ADP' 'ADV' 'CONJ' 'DET' 'NOUN' 'NUM' 'PRON' 'PRT' 'PUNCT' 'VERB' 'X' 'AFFIX')}}\",\n        \"tense\": \"{{oneOf (array 'TENSE_UNKNOWN' 'CONDITIONAL_TENSE' 'FUTURE' 'PAST' 'PRESENT' 'IMPERFECT' 'PLUPERFECT')}}\",\n        \"voice\": \"{{oneOf (array 'VOICE_UNKNOWN' 'ACTIVE' 'CAUSATIVE' 'PASSIVE')}}\"\n      },\n      \"text\": {\n        \"beginOffset\": {{faker 'datatype.number'}},\n        \"content\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8abb3ba-5775-4403-b376-f44299cb77a2",
      "documentation": "A convenience method that provides all syntax, sentiment, entity, and classification features in one call.",
      "method": "post",
      "endpoint": "v1beta2/documents:annotateText",
      "responses": [
        {
          "uuid": "3ab9c6d3-d028-4619-9e3d-a60dc0bed12b",
          "body": "{\n  \"categories\": [\n    {\n      \"confidence\": {{faker 'datatype.float'}},\n      \"name\": \"\"\n    }\n  ],\n  \"documentSentiment\": {\n    \"magnitude\": {{faker 'datatype.float'}},\n    \"score\": {{faker 'datatype.float'}}\n  },\n  \"entities\": [\n    {\n      \"mentions\": [\n        {\n          \"sentiment\": {\n            \"magnitude\": {{faker 'datatype.float'}},\n            \"score\": {{faker 'datatype.float'}}\n          },\n          \"text\": {\n            \"beginOffset\": {{faker 'datatype.number'}},\n            \"content\": \"\"\n          },\n          \"type\": \"{{oneOf (array 'TYPE_UNKNOWN' 'PROPER' 'COMMON')}}\"\n        }\n      ],\n      \"metadata\": {},\n      \"name\": \"\",\n      \"salience\": {{faker 'datatype.float'}},\n      \"sentiment\": {\n        \"magnitude\": {{faker 'datatype.float'}},\n        \"score\": {{faker 'datatype.float'}}\n      },\n      \"type\": \"{{oneOf (array 'UNKNOWN' 'PERSON' 'LOCATION' 'ORGANIZATION' 'EVENT' 'WORK_OF_ART' 'CONSUMER_GOOD' 'OTHER' 'PHONE_NUMBER' 'ADDRESS' 'DATE' 'NUMBER' 'PRICE')}}\"\n    }\n  ],\n  \"language\": \"\",\n  \"sentences\": [\n    {\n      \"sentiment\": {\n        \"magnitude\": {{faker 'datatype.float'}},\n        \"score\": {{faker 'datatype.float'}}\n      },\n      \"text\": {\n        \"beginOffset\": {{faker 'datatype.number'}},\n        \"content\": \"\"\n      }\n    }\n  ],\n  \"tokens\": [\n    {\n      \"dependencyEdge\": {\n        \"headTokenIndex\": {{faker 'datatype.number'}},\n        \"label\": \"{{oneOf (array 'UNKNOWN' 'ABBREV' 'ACOMP' 'ADVCL' 'ADVMOD' 'AMOD' 'APPOS' 'ATTR' 'AUX' 'AUXPASS' 'CC' 'CCOMP' 'CONJ' 'CSUBJ' 'CSUBJPASS' 'DEP' 'DET' 'DISCOURSE' 'DOBJ' 'EXPL' 'GOESWITH' 'IOBJ' 'MARK' 'MWE' 'MWV' 'NEG' 'NN' 'NPADVMOD' 'NSUBJ' 'NSUBJPASS' 'NUM' 'NUMBER' 'P' 'PARATAXIS' 'PARTMOD' 'PCOMP' 'POBJ' 'POSS' 'POSTNEG' 'PRECOMP' 'PRECONJ' 'PREDET' 'PREF' 'PREP' 'PRONL' 'PRT' 'PS' 'QUANTMOD' 'RCMOD' 'RCMODREL' 'RDROP' 'REF' 'REMNANT' 'REPARANDUM' 'ROOT' 'SNUM' 'SUFF' 'TMOD' 'TOPIC' 'VMOD' 'VOCATIVE' 'XCOMP' 'SUFFIX' 'TITLE' 'ADVPHMOD' 'AUXCAUS' 'AUXVV' 'DTMOD' 'FOREIGN' 'KW' 'LIST' 'NOMC' 'NOMCSUBJ' 'NOMCSUBJPASS' 'NUMC' 'COP' 'DISLOCATED' 'ASP' 'GMOD' 'GOBJ' 'INFMOD' 'MES' 'NCOMP')}}\"\n      },\n      \"lemma\": \"\",\n      \"partOfSpeech\": {\n        \"aspect\": \"{{oneOf (array 'ASPECT_UNKNOWN' 'PERFECTIVE' 'IMPERFECTIVE' 'PROGRESSIVE')}}\",\n        \"case\": \"{{oneOf (array 'CASE_UNKNOWN' 'ACCUSATIVE' 'ADVERBIAL' 'COMPLEMENTIVE' 'DATIVE' 'GENITIVE' 'INSTRUMENTAL' 'LOCATIVE' 'NOMINATIVE' 'OBLIQUE' 'PARTITIVE' 'PREPOSITIONAL' 'REFLEXIVE_CASE' 'RELATIVE_CASE' 'VOCATIVE')}}\",\n        \"form\": \"{{oneOf (array 'FORM_UNKNOWN' 'ADNOMIAL' 'AUXILIARY' 'COMPLEMENTIZER' 'FINAL_ENDING' 'GERUND' 'REALIS' 'IRREALIS' 'SHORT' 'LONG' 'ORDER' 'SPECIFIC')}}\",\n        \"gender\": \"{{oneOf (array 'GENDER_UNKNOWN' 'FEMININE' 'MASCULINE' 'NEUTER')}}\",\n        \"mood\": \"{{oneOf (array 'MOOD_UNKNOWN' 'CONDITIONAL_MOOD' 'IMPERATIVE' 'INDICATIVE' 'INTERROGATIVE' 'JUSSIVE' 'SUBJUNCTIVE')}}\",\n        \"number\": \"{{oneOf (array 'NUMBER_UNKNOWN' 'SINGULAR' 'PLURAL' 'DUAL')}}\",\n        \"person\": \"{{oneOf (array 'PERSON_UNKNOWN' 'FIRST' 'SECOND' 'THIRD' 'REFLEXIVE_PERSON')}}\",\n        \"proper\": \"{{oneOf (array 'PROPER_UNKNOWN' 'PROPER' 'NOT_PROPER')}}\",\n        \"reciprocity\": \"{{oneOf (array 'RECIPROCITY_UNKNOWN' 'RECIPROCAL' 'NON_RECIPROCAL')}}\",\n        \"tag\": \"{{oneOf (array 'UNKNOWN' 'ADJ' 'ADP' 'ADV' 'CONJ' 'DET' 'NOUN' 'NUM' 'PRON' 'PRT' 'PUNCT' 'VERB' 'X' 'AFFIX')}}\",\n        \"tense\": \"{{oneOf (array 'TENSE_UNKNOWN' 'CONDITIONAL_TENSE' 'FUTURE' 'PAST' 'PRESENT' 'IMPERFECT' 'PLUPERFECT')}}\",\n        \"voice\": \"{{oneOf (array 'VOICE_UNKNOWN' 'ACTIVE' 'CAUSATIVE' 'PASSIVE')}}\"\n      },\n      \"text\": {\n        \"beginOffset\": {{faker 'datatype.number'}},\n        \"content\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de1c72d6-59d1-488a-b5fd-7993fd8589a5",
      "documentation": "Classifies a document into categories.",
      "method": "post",
      "endpoint": "v1beta2/documents:classifyText",
      "responses": [
        {
          "uuid": "ce574f00-274c-4efe-9ff7-ccdd013b2697",
          "body": "{\n  \"categories\": [\n    {\n      \"confidence\": {{faker 'datatype.float'}},\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}