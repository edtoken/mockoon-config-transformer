{
  "uuid": "5f5d7cff-c0bd-4265-b5f2-e8e31d4690eb",
  "lastMigration": 24,
  "name": "Cloud Composer API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "515415c2-5245-4f1e-b295-48082d77b5e4",
      "documentation": "Check if an upgrade operation on the environment will succeed. In case of problems detailed info can be found in the returned Operation.",
      "method": "post",
      "endpoint": "v1beta1/:environment:checkUpgrade",
      "responses": [
        {
          "uuid": "4c26482a-0aa5-472d-a391-82369940cd08",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "82d0cbdd-facf-4f48-bc7c-17b39470f8dd",
      "documentation": "Loads a snapshot of a Cloud Composer environment. As a result of this operation, a snapshot of environment's specified in LoadSnapshotRequest is loaded into the environment.",
      "method": "post",
      "endpoint": "v1beta1/:environment:loadSnapshot",
      "responses": [
        {
          "uuid": "99e051e8-9404-4f56-92df-50463d022352",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6deca1cd-3ae6-4a2a-98a6-17d72dc66fb3",
      "documentation": "Creates a snapshots of a Cloud Composer environment. As a result of this operation, snapshot of environment's state is stored in a location specified in the SaveSnapshotRequest.",
      "method": "post",
      "endpoint": "v1beta1/:environment:saveSnapshot",
      "responses": [
        {
          "uuid": "9e89b301-8f36-4029-8dac-ed2a227edbb2",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a51280b9-919a-477b-a4f0-d44c5e7a48aa",
      "documentation": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "2c22fb27-5626-4803-bc8f-9624871d01be",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a090f1e-6345-4c2c-af04-9b846b4a6985",
      "documentation": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "bb6c9e5a-d6a1-47cf-94b1-6315cbbe4bf5",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3961737d-43b2-4dbe-8f1c-cabab039dc75",
      "documentation": "Update an environment.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "53cdc74d-a53c-41d1-a128-f48ea896d244",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4461fba3-bd87-426d-8d8a-0d6b0ffc8c97",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1beta1/:name/operations",
      "responses": [
        {
          "uuid": "3ddb9f9d-972c-43ce-97df-de88ef32fe95",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'datatype.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "caec7506-b591-47ae-ad22-c22dc22ca63e",
      "documentation": "Restart Airflow web server.",
      "method": "post",
      "endpoint": "v1beta1/:name:restartWebServer",
      "responses": [
        {
          "uuid": "6b810d6f-921a-4020-8bdf-bcf998723295",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4aa12849-15d5-471a-93a9-829467b0c20e",
      "documentation": "List environments.",
      "method": "get",
      "endpoint": "v1beta1/:parent/environments",
      "responses": [
        {
          "uuid": "543f3f88-41b3-4bfd-ba2f-f114fa4f862e",
          "body": "{\n  \"environments\": [\n    {\n      \"config\": {\n        \"airflowUri\": \"\",\n        \"dagGcsPrefix\": \"\",\n        \"databaseConfig\": {\n          \"machineType\": \"\"\n        },\n        \"encryptionConfig\": {\n          \"kmsKeyName\": \"\"\n        },\n        \"environmentSize\": \"{{oneOf (array 'ENVIRONMENT_SIZE_UNSPECIFIED' 'ENVIRONMENT_SIZE_SMALL' 'ENVIRONMENT_SIZE_MEDIUM' 'ENVIRONMENT_SIZE_LARGE')}}\",\n        \"gkeCluster\": \"\",\n        \"maintenanceWindow\": {\n          \"endTime\": \"\",\n          \"recurrence\": \"\",\n          \"startTime\": \"\"\n        },\n        \"masterAuthorizedNetworksConfig\": {\n          \"cidrBlocks\": [\n            {\n              \"cidrBlock\": \"\",\n              \"displayName\": \"\"\n            }\n          ],\n          \"enabled\": {{faker 'datatype.boolean'}}\n        },\n        \"nodeConfig\": {\n          \"diskSizeGb\": {{faker 'datatype.number'}},\n          \"enableIpMasqAgent\": {{faker 'datatype.boolean'}},\n          \"ipAllocationPolicy\": {\n            \"clusterIpv4CidrBlock\": \"\",\n            \"clusterSecondaryRangeName\": \"\",\n            \"servicesIpv4CidrBlock\": \"\",\n            \"servicesSecondaryRangeName\": \"\",\n            \"useIpAliases\": {{faker 'datatype.boolean'}}\n          },\n          \"location\": \"\",\n          \"machineType\": \"\",\n          \"maxPodsPerNode\": {{faker 'datatype.number'}},\n          \"network\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"serviceAccount\": \"\",\n          \"subnetwork\": \"\",\n          \"tags\": [\n            \"\"\n          ]\n        },\n        \"nodeCount\": {{faker 'datatype.number'}},\n        \"privateEnvironmentConfig\": {\n          \"cloudComposerConnectionSubnetwork\": \"\",\n          \"cloudComposerNetworkIpv4CidrBlock\": \"\",\n          \"cloudComposerNetworkIpv4ReservedRange\": \"\",\n          \"cloudSqlIpv4CidrBlock\": \"\",\n          \"enablePrivateEnvironment\": {{faker 'datatype.boolean'}},\n          \"enablePrivatelyUsedPublicIps\": {{faker 'datatype.boolean'}},\n          \"networkingConfig\": {\n            \"connectionType\": \"{{oneOf (array 'CONNECTION_TYPE_UNSPECIFIED' 'VPC_PEERING' 'PRIVATE_SERVICE_CONNECT')}}\"\n          },\n          \"privateClusterConfig\": {\n            \"enablePrivateEndpoint\": {{faker 'datatype.boolean'}},\n            \"masterIpv4CidrBlock\": \"\",\n            \"masterIpv4ReservedRange\": \"\"\n          },\n          \"webServerIpv4CidrBlock\": \"\",\n          \"webServerIpv4ReservedRange\": \"\"\n        },\n        \"softwareConfig\": {\n          \"airflowConfigOverrides\": {},\n          \"envVariables\": {},\n          \"imageVersion\": \"\",\n          \"pypiPackages\": {},\n          \"pythonVersion\": \"\",\n          \"schedulerCount\": {{faker 'datatype.number'}}\n        },\n        \"webServerConfig\": {\n          \"machineType\": \"\"\n        },\n        \"webServerNetworkAccessControl\": {\n          \"allowedIpRanges\": [\n            {\n              \"description\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        \"workloadsConfig\": {\n          \"scheduler\": {\n            \"count\": {{faker 'datatype.number'}},\n            \"cpu\": {{faker 'datatype.float'}},\n            \"memoryGb\": {{faker 'datatype.float'}},\n            \"storageGb\": {{faker 'datatype.float'}}\n          },\n          \"webServer\": {\n            \"cpu\": {{faker 'datatype.float'}},\n            \"memoryGb\": {{faker 'datatype.float'}},\n            \"storageGb\": {{faker 'datatype.float'}}\n          },\n          \"worker\": {\n            \"cpu\": {{faker 'datatype.float'}},\n            \"maxCount\": {{faker 'datatype.number'}},\n            \"memoryGb\": {{faker 'datatype.float'}},\n            \"minCount\": {{faker 'datatype.number'}},\n            \"storageGb\": {{faker 'datatype.float'}}\n          }\n        }\n      },\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'UPDATING' 'DELETING' 'ERROR')}}\",\n      \"updateTime\": \"\",\n      \"uuid\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "791f2b19-8f9a-49f3-8705-d44ef891ae89",
      "documentation": "Create a new environment.",
      "method": "post",
      "endpoint": "v1beta1/:parent/environments",
      "responses": [
        {
          "uuid": "61a6410b-c10a-4903-940d-fd7129d8c50f",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94039d43-34f9-43aa-a756-4c18c05bb2b4",
      "documentation": "List ImageVersions for provided location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/imageVersions",
      "responses": [
        {
          "uuid": "8c2db4f1-65a6-4b2c-80a6-6eae8be59e51",
          "body": "{\n  \"imageVersions\": [\n    {\n      \"creationDisabled\": {{faker 'datatype.boolean'}},\n      \"imageVersionId\": \"\",\n      \"isDefault\": {{faker 'datatype.boolean'}},\n      \"releaseDate\": {\n        \"day\": {{faker 'datatype.number'}},\n        \"month\": {{faker 'datatype.number'}},\n        \"year\": {{faker 'datatype.number'}}\n      },\n      \"supportedPythonVersions\": [\n        \"\"\n      ],\n      \"upgradeDisabled\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}