{
  "uuid": "1e2db5a1-ffb3-48f0-b79d-c780a3a230df",
  "lastMigration": 24,
  "name": "Error Reporting API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "74e84b68-30dc-41d9-8679-9117eb5feb93",
      "documentation": "Get the specified group.",
      "method": "get",
      "endpoint": "v1beta1/:groupName",
      "responses": [
        {
          "uuid": "58b5a151-320a-4ad8-9c0b-a6f7d405f01d",
          "body": "{\n  \"groupId\": \"\",\n  \"name\": \"\",\n  \"resolutionStatus\": \"{{oneOf (array 'RESOLUTION_STATUS_UNSPECIFIED' 'OPEN' 'ACKNOWLEDGED' 'RESOLVED' 'MUTED')}}\",\n  \"trackingIssues\": [\n    {\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "934acfe2-bf1f-4e82-9ef0-7bdf073867d0",
      "documentation": "Replace the data for the specified group. Fails if the group does not exist.",
      "method": "put",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "f7a74eee-c147-4f75-a981-bf814df8aba4",
          "body": "{\n  \"groupId\": \"\",\n  \"name\": \"\",\n  \"resolutionStatus\": \"{{oneOf (array 'RESOLUTION_STATUS_UNSPECIFIED' 'OPEN' 'ACKNOWLEDGED' 'RESOLVED' 'MUTED')}}\",\n  \"trackingIssues\": [\n    {\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2a2b7b41-3bdf-4b46-ab13-4d9c9abbd5b6",
      "documentation": "Deletes all error events of a given project.",
      "method": "delete",
      "endpoint": "v1beta1/:projectName/events",
      "responses": [
        {
          "uuid": "b60505a6-7ad9-4ee8-9365-d4d3bf827598",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5d548c23-e57d-4648-988e-34addc544432",
      "documentation": "Lists the specified events.",
      "method": "get",
      "endpoint": "v1beta1/:projectName/events",
      "responses": [
        {
          "uuid": "29791762-68ef-435d-8557-08dbb6f577b2",
          "body": "{\n  \"errorEvents\": [\n    {\n      \"context\": {\n        \"httpRequest\": {\n          \"method\": \"\",\n          \"referrer\": \"\",\n          \"remoteIp\": \"\",\n          \"responseStatusCode\": {{faker 'datatype.number'}},\n          \"url\": \"\",\n          \"userAgent\": \"\"\n        },\n        \"reportLocation\": {\n          \"filePath\": \"\",\n          \"functionName\": \"\",\n          \"lineNumber\": {{faker 'datatype.number'}}\n        },\n        \"sourceReferences\": [\n          {\n            \"repository\": \"\",\n            \"revisionId\": \"\"\n          }\n        ],\n        \"user\": \"\"\n      },\n      \"eventTime\": \"\",\n      \"message\": \"\",\n      \"serviceContext\": {\n        \"resourceType\": \"\",\n        \"service\": \"\",\n        \"version\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"timeRangeBegin\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80d6bdcd-abde-45f5-9b4b-583c4a8d44c5",
      "documentation": "Report an individual error event and record the event to a log. This endpoint accepts **either** an OAuth token, **or** an [API key](https://support.google.com/cloud/answer/6158862) for authentication. To use an API key, append it to the URL as the value of a `key` parameter. For example: `POST https://clouderrorreporting.googleapis.com/v1beta1/{projectName}/events:report?key=123ABC456` **Note:** [Error Reporting] (https://cloud.google.com/error-reporting) is a global service built on Cloud Logging and doesn't analyze logs stored in regional log buckets or logs routed to other Google Cloud projects. For more information, see [Using Error Reporting with regionalized logs] (https://cloud.google.com/error-reporting/docs/regionalization).",
      "method": "post",
      "endpoint": "v1beta1/:projectName/events:report",
      "responses": [
        {
          "uuid": "2fd9e157-1b11-4a28-8fec-7d0db709476e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "657b2bc1-a55e-4c22-b1db-1b7ad1abae8e",
      "documentation": "Lists the specified groups.",
      "method": "get",
      "endpoint": "v1beta1/:projectName/groupStats",
      "responses": [
        {
          "uuid": "3970b349-c08d-491d-a381-c308fc08f303",
          "body": "{\n  \"errorGroupStats\": [\n    {\n      \"affectedServices\": [\n        {\n          \"resourceType\": \"\",\n          \"service\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"affectedUsersCount\": \"\",\n      \"count\": \"\",\n      \"firstSeenTime\": \"\",\n      \"group\": {\n        \"groupId\": \"\",\n        \"name\": \"\",\n        \"resolutionStatus\": \"{{oneOf (array 'RESOLUTION_STATUS_UNSPECIFIED' 'OPEN' 'ACKNOWLEDGED' 'RESOLVED' 'MUTED')}}\",\n        \"trackingIssues\": [\n          {\n            \"url\": \"\"\n          }\n        ]\n      },\n      \"lastSeenTime\": \"\",\n      \"numAffectedServices\": {{faker 'datatype.number'}},\n      \"representative\": {\n        \"context\": {\n          \"httpRequest\": {\n            \"method\": \"\",\n            \"referrer\": \"\",\n            \"remoteIp\": \"\",\n            \"responseStatusCode\": {{faker 'datatype.number'}},\n            \"url\": \"\",\n            \"userAgent\": \"\"\n          },\n          \"reportLocation\": {\n            \"filePath\": \"\",\n            \"functionName\": \"\",\n            \"lineNumber\": {{faker 'datatype.number'}}\n          },\n          \"sourceReferences\": [\n            {\n              \"repository\": \"\",\n              \"revisionId\": \"\"\n            }\n          ],\n          \"user\": \"\"\n        },\n        \"eventTime\": \"\",\n        \"message\": \"\",\n        \"serviceContext\": {\n          \"resourceType\": \"\",\n          \"service\": \"\",\n          \"version\": \"\"\n        }\n      },\n      \"timedCounts\": [\n        {\n          \"count\": \"\",\n          \"endTime\": \"\",\n          \"startTime\": \"\"\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"timeRangeBegin\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}