{
  "uuid": "88902619-0c28-4d8d-a3b6-c729e3550b07",
  "lastMigration": 24,
  "name": "Qakka",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4bbf8ea8-2ad5-4bb0-844a-8c4c6ecadfa3",
      "documentation": "Get list of all Queues.",
      "method": "get",
      "endpoint": "queues",
      "responses": [
        {
          "uuid": "3f946988-a0e4-4b0c-a843-bfa9d1de84cd",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"message\": \"\",\n  \"queueMessages\": [\n    {\n      \"contentType\": \"\",\n      \"createDate\": {{faker 'datatype.number'}},\n      \"data\": \"\",\n      \"href\": \"\",\n      \"messageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueMessageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueName\": \"\",\n      \"receivingRegion\": \"\",\n      \"sendingRegion\": \"\"\n    }\n  ],\n  \"queues\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ed788dbf-80b5-4e71-8bb8-e93e86e08471",
      "documentation": "Create new queue.",
      "method": "post",
      "endpoint": "queues",
      "responses": [
        {
          "uuid": "85fbbd48-7b03-4ef9-bb40-bede83355a21",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"message\": \"\",\n  \"queueMessages\": [\n    {\n      \"contentType\": \"\",\n      \"createDate\": {{faker 'datatype.number'}},\n      \"data\": \"\",\n      \"href\": \"\",\n      \"messageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueMessageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueName\": \"\",\n      \"receivingRegion\": \"\",\n      \"sendingRegion\": \"\"\n    }\n  ],\n  \"queues\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb2e5996-9681-4ca2-ba33-e574150d1b7c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "No Queue object posted, or name field is missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fea93395-5356-43c2-bf4e-c1590c3cde45",
      "documentation": "Delete Queue.",
      "method": "delete",
      "endpoint": "queues/:queueName",
      "responses": [
        {
          "uuid": "2b80d53e-7086-44a1-b83e-9e8591fa57fa",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"message\": \"\",\n  \"queueMessages\": [\n    {\n      \"contentType\": \"\",\n      \"createDate\": {{faker 'datatype.number'}},\n      \"data\": \"\",\n      \"href\": \"\",\n      \"messageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueMessageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueName\": \"\",\n      \"receivingRegion\": \"\",\n      \"sendingRegion\": \"\"\n    }\n  ],\n  \"queues\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b6778360-d495-4326-8d67-2bfabb1aaa2c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Queue name or confirm flag missing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3926c03c-be4c-4cb7-b580-b6710974ce69",
      "documentation": "Get Queue config.",
      "method": "get",
      "endpoint": "queues/:queueName/config",
      "responses": [
        {
          "uuid": "ff525be2-14ad-4752-bac4-d1dd060df2d7",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"message\": \"\",\n  \"queueMessages\": [\n    {\n      \"contentType\": \"\",\n      \"createDate\": {{faker 'datatype.number'}},\n      \"data\": \"\",\n      \"href\": \"\",\n      \"messageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueMessageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueName\": \"\",\n      \"receivingRegion\": \"\",\n      \"sendingRegion\": \"\"\n    }\n  ],\n  \"queues\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "28a9f3a9-e9f2-4574-8a9d-3e305cf427d3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Queue name or confirm flag missing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6d3ca6d-e745-4ea9-9fd6-c492f3774765",
      "documentation": "Update Queue configuration.",
      "method": "put",
      "endpoint": "queues/:queueName/config",
      "responses": [
        {
          "uuid": "c117ad3f-a6cb-4868-b913-d7e0e3534f81",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"message\": \"\",\n  \"queueMessages\": [\n    {\n      \"contentType\": \"\",\n      \"createDate\": {{faker 'datatype.number'}},\n      \"data\": \"\",\n      \"href\": \"\",\n      \"messageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueMessageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueName\": \"\",\n      \"receivingRegion\": \"\",\n      \"sendingRegion\": \"\"\n    }\n  ],\n  \"queues\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "31a5580d-2d19-42e4-8aeb-5e675e05e0a7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "No Queue object posted, or name field is missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6ca8bba8-434b-435d-8d64-72d3286cfc67",
      "documentation": "Get data associated with a Queue Message.",
      "method": "get",
      "endpoint": "queues/:queueName/data/:queueMessageId",
      "responses": [
        {
          "uuid": "93875b82-1565-4957-9ce6-9be71a84eddb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "64053520-d523-4f8e-b3b3-c175f393c140",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Message ID invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f40b73b6-70c4-4028-b6c4-865a8dd21fb1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Queue Message or data not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7eaf843-cc56-4145-ab5d-d18231bef107",
      "documentation": "Get next Queue Messages from a Queue",
      "method": "get",
      "endpoint": "queues/:queueName/messages",
      "responses": [
        {
          "uuid": "93fd1553-7c99-4cbb-9259-db21e339cdae",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"message\": \"\",\n  \"queueMessages\": [\n    {\n      \"contentType\": \"\",\n      \"createDate\": {{faker 'datatype.number'}},\n      \"data\": \"\",\n      \"href\": \"\",\n      \"messageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueMessageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueName\": \"\",\n      \"receivingRegion\": \"\",\n      \"sendingRegion\": \"\"\n    }\n  ],\n  \"queues\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3cbdf35b-fa26-4053-877e-35c05819a980",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid count parameter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eafb3e34-ae22-4579-b54e-d37105a203e7",
      "documentation": "Send Queue Message with a binary data (blob) payload.",
      "method": "post",
      "endpoint": "queues/:queueName/messages",
      "responses": [
        {
          "uuid": "7e95de96-ddeb-4f46-a1b0-e45f9e8f6d98",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"message\": \"\",\n  \"queueMessages\": [\n    {\n      \"contentType\": \"\",\n      \"createDate\": {{faker 'datatype.number'}},\n      \"data\": \"\",\n      \"href\": \"\",\n      \"messageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueMessageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueName\": \"\",\n      \"receivingRegion\": \"\",\n      \"sendingRegion\": \"\"\n    }\n  ],\n  \"queues\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3045b6f9-9358-4c8b-80d1-c0d3c7955dfb",
      "documentation": "Acknowledge that Queue Message has been processed.",
      "method": "delete",
      "endpoint": "queues/:queueName/messages/:queueMessageId",
      "responses": [
        {
          "uuid": "17d278d6-931e-4185-9636-e91cacf07720",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"message\": \"\",\n  \"queueMessages\": [\n    {\n      \"contentType\": \"\",\n      \"createDate\": {{faker 'datatype.number'}},\n      \"data\": \"\",\n      \"href\": \"\",\n      \"messageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueMessageId\": \"{{faker 'datatype.uuid'}}\",\n      \"queueName\": \"\",\n      \"receivingRegion\": \"\",\n      \"sendingRegion\": \"\"\n    }\n  ],\n  \"queues\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6744c167-536b-4dd1-bc11-6729e998a3f9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Queue Message ID invalid, or message not in-flight",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "450be990-cf9b-404b-be33-6b9515b6d94b",
      "documentation": "Status of webapp.",
      "method": "get",
      "endpoint": "status",
      "responses": [
        {
          "uuid": "7a2533f1-deef-493e-bd7e-7b1d83f76992",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "successful operation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}