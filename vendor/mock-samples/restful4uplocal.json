{
  "uuid": "d83c2235-d5a4-4bc0-955e-e759e5211f69",
  "lastMigration": 24,
  "name": "RESTful4Up",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "de44ddbd-d0e8-443d-b484-adcbcf9bcc1f",
      "documentation": "apply given YARA rules to the given executable. (upto 10 rules)",
      "method": "post",
      "endpoint": "apply-yara-rules",
      "responses": [
        {
          "uuid": "745e1919-c14f-4fa0-9046-ba3959339508",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Yara rules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e3c9249b-4e1a-4a68-b04d-53ab5165b523",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "request error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e530ef7f-066f-4f4d-9c66-bf27de036a13",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "78dc6cd7-9a1c-4388-bf01-c11c0aa43cdc",
      "documentation": "clean up the uploaded files",
      "method": "head",
      "endpoint": "clean",
      "responses": [
        {
          "uuid": "d4e9e869-3340-4ca1-a45b-c3b9e7d124cc",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Ok",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b1ef91c8-5b0d-4a2c-bfa1-43488ffc1798",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d973f630-6b9b-4a5a-9e73-bbb572216a99",
      "documentation": "try to get the emulation output after unpacking the file",
      "method": "post",
      "endpoint": "emulation-output",
      "responses": [
        {
          "uuid": "12ab18a3-1cd6-48df-abe7-5e707b131dca",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "emulation output after unpacking the file",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d9a3649e-e769-408a-b200-cba3df39b615",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "request error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b4f4413-daca-4009-b32c-10bbc2bd2efe",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e1535172-5468-494b-b82a-980fbc1c0bea",
      "documentation": "generate partial YARA rules for give executable. (Rule without the condition section)",
      "method": "post",
      "endpoint": "generate-partial-yara-rules",
      "responses": [
        {
          "uuid": "bdcca325-1f9e-494a-8957-c8daf8ab684b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Yara rules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5bc3ba03-666e-4ead-9d70-277691945153",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "request error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "efbed451-ac95-4848-9609-2f1a4c647d11",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "04d4431a-53be-4450-86f0-d17764594c85",
      "documentation": "try to unpack the given file",
      "method": "post",
      "endpoint": "unpack",
      "responses": [
        {
          "uuid": "3e0d206c-9202-4736-9e1d-596f2948af64",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Ok",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "98c99b56-95bb-499e-828c-e7c80dd4585c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "request error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef3dbe90-f975-46b4-8f4b-ca8ce7fb3218",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}