{
  "uuid": "4a355e92-75ce-41af-8878-42ba70563710",
  "lastMigration": 24,
  "name": "My Business Q&A API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "ea5aaa0f-1750-4a72-b946-3e389913df1f",
      "documentation": "Deletes a specific question written by the current user.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "75150eea-bd56-44f9-a331-4f09c844ac70",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6bd41e5b-d605-4efa-8378-7d4b83986ce2",
      "documentation": "Updates a specific question written by the current user.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "733d7af3-56d0-4ec0-af34-06714c0d82a0",
          "body": "{\n  \"author\": {\n    \"displayName\": \"\",\n    \"profilePhotoUri\": \"\",\n    \"type\": \"{{oneOf (array 'AUTHOR_TYPE_UNSPECIFIED' 'REGULAR_USER' 'LOCAL_GUIDE' 'MERCHANT')}}\"\n  },\n  \"createTime\": \"\",\n  \"name\": \"\",\n  \"text\": \"\",\n  \"topAnswers\": [\n    {\n      \"author\": {\n        \"displayName\": \"\",\n        \"profilePhotoUri\": \"\",\n        \"type\": \"{{oneOf (array 'AUTHOR_TYPE_UNSPECIFIED' 'REGULAR_USER' 'LOCAL_GUIDE' 'MERCHANT')}}\"\n      },\n      \"createTime\": \"\",\n      \"name\": \"\",\n      \"text\": \"\",\n      \"updateTime\": \"\",\n      \"upvoteCount\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"totalAnswerCount\": {{faker 'datatype.number'}},\n  \"updateTime\": \"\",\n  \"upvoteCount\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4a737486-06d9-4c54-b7e5-dfee812c3ffd",
      "documentation": "Deletes the answer written by the current user to a question.",
      "method": "delete",
      "endpoint": "v1/:name/answers:delete",
      "responses": [
        {
          "uuid": "7d9ec73c-8b29-4dd7-bdfd-57610d34b75f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6bd40bc-4f83-44fa-8874-20ebff3795a8",
      "documentation": "Returns the paginated list of questions and some of its answers for a specified location. This operation is only valid if the specified location is verified.",
      "method": "get",
      "endpoint": "v1/:parent",
      "responses": [
        {
          "uuid": "161981de-ab69-442f-bb4c-8c3852d1f23b",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"questions\": [\n    {\n      \"author\": {\n        \"displayName\": \"\",\n        \"profilePhotoUri\": \"\",\n        \"type\": \"{{oneOf (array 'AUTHOR_TYPE_UNSPECIFIED' 'REGULAR_USER' 'LOCAL_GUIDE' 'MERCHANT')}}\"\n      },\n      \"createTime\": \"\",\n      \"name\": \"\",\n      \"text\": \"\",\n      \"topAnswers\": [\n        {\n          \"author\": {\n            \"displayName\": \"\",\n            \"profilePhotoUri\": \"\",\n            \"type\": \"{{oneOf (array 'AUTHOR_TYPE_UNSPECIFIED' 'REGULAR_USER' 'LOCAL_GUIDE' 'MERCHANT')}}\"\n          },\n          \"createTime\": \"\",\n          \"name\": \"\",\n          \"text\": \"\",\n          \"updateTime\": \"\",\n          \"upvoteCount\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"totalAnswerCount\": {{faker 'datatype.number'}},\n      \"updateTime\": \"\",\n      \"upvoteCount\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"totalSize\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d2e5b89-d2bc-42a2-96e3-f78f18649262",
      "documentation": "Adds a question for the specified location.",
      "method": "post",
      "endpoint": "v1/:parent",
      "responses": [
        {
          "uuid": "97ab0020-c7eb-4551-85c8-0fce47d6bd0d",
          "body": "{\n  \"author\": {\n    \"displayName\": \"\",\n    \"profilePhotoUri\": \"\",\n    \"type\": \"{{oneOf (array 'AUTHOR_TYPE_UNSPECIFIED' 'REGULAR_USER' 'LOCAL_GUIDE' 'MERCHANT')}}\"\n  },\n  \"createTime\": \"\",\n  \"name\": \"\",\n  \"text\": \"\",\n  \"topAnswers\": [\n    {\n      \"author\": {\n        \"displayName\": \"\",\n        \"profilePhotoUri\": \"\",\n        \"type\": \"{{oneOf (array 'AUTHOR_TYPE_UNSPECIFIED' 'REGULAR_USER' 'LOCAL_GUIDE' 'MERCHANT')}}\"\n      },\n      \"createTime\": \"\",\n      \"name\": \"\",\n      \"text\": \"\",\n      \"updateTime\": \"\",\n      \"upvoteCount\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"totalAnswerCount\": {{faker 'datatype.number'}},\n  \"updateTime\": \"\",\n  \"upvoteCount\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0d5336c1-2bf6-4803-80f8-e14aa7019d4d",
      "documentation": "Returns the paginated list of answers for a specified question.",
      "method": "get",
      "endpoint": "v1/:parent/answers",
      "responses": [
        {
          "uuid": "ab44bf51-9b11-408e-bea5-4ad90f5b10cd",
          "body": "{\n  \"answers\": [\n    {\n      \"author\": {\n        \"displayName\": \"\",\n        \"profilePhotoUri\": \"\",\n        \"type\": \"{{oneOf (array 'AUTHOR_TYPE_UNSPECIFIED' 'REGULAR_USER' 'LOCAL_GUIDE' 'MERCHANT')}}\"\n      },\n      \"createTime\": \"\",\n      \"name\": \"\",\n      \"text\": \"\",\n      \"updateTime\": \"\",\n      \"upvoteCount\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"totalSize\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3cc03736-ba4b-4e0e-b0e4-472ca074f4af",
      "documentation": "Creates an answer or updates the existing answer written by the user for the specified question. A user can only create one answer per question.",
      "method": "post",
      "endpoint": "v1/:parent/answers:upsert",
      "responses": [
        {
          "uuid": "46417dce-bf9c-4aa2-90c1-974188250ca7",
          "body": "{\n  \"author\": {\n    \"displayName\": \"\",\n    \"profilePhotoUri\": \"\",\n    \"type\": \"{{oneOf (array 'AUTHOR_TYPE_UNSPECIFIED' 'REGULAR_USER' 'LOCAL_GUIDE' 'MERCHANT')}}\"\n  },\n  \"createTime\": \"\",\n  \"name\": \"\",\n  \"text\": \"\",\n  \"updateTime\": \"\",\n  \"upvoteCount\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}