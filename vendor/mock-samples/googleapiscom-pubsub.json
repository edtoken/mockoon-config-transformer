{
  "uuid": "a5ce95d9-cdab-49e1-a30d-f8d9057d87d4",
  "lastMigration": 24,
  "name": "Cloud Pub/Sub API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "ed323bf6-3c4e-423d-8b95-ed8512372f3b",
      "documentation": "Creates the given topic with the given name.",
      "method": "put",
      "endpoint": "v1beta2/:name",
      "responses": [
        {
          "uuid": "7574109d-1db4-448b-b24c-385e5ac87cd2",
          "body": "{\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b6a99bc-894c-4859-8916-2d80f886a641",
      "documentation": "Lists matching subscriptions.",
      "method": "get",
      "endpoint": "v1beta2/:project/subscriptions",
      "responses": [
        {
          "uuid": "b6f7c535-b612-48e7-afa4-d72deb05132e",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"subscriptions\": [\n    {\n      \"ackDeadlineSeconds\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"pushConfig\": {\n        \"attributes\": {},\n        \"oidcToken\": {\n          \"audience\": \"\",\n          \"serviceAccountEmail\": \"\"\n        },\n        \"pushEndpoint\": \"\"\n      },\n      \"topic\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61049382-8961-409c-bd6e-809869537a76",
      "documentation": "Lists matching topics.",
      "method": "get",
      "endpoint": "v1beta2/:project/topics",
      "responses": [
        {
          "uuid": "046605ab-0fdb-4eb3-84d1-3f06b0f7bf4d",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"topics\": [\n    {\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ccffad5-c857-41fd-8ddc-1453c3e868c3",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta2/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "046c1dc4-00be-4488-8869-1d1c75caf137",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fdc9e516-671e-4df8-87d5-8e74feda6351",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta2/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "3aed2b8b-0450-4434-960c-a64c6fed42a4",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f7aadcd-81d5-4128-a4d5-3693aa73781b",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta2/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "b9b4ccf1-5638-44fc-8619-13bae5b4a194",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "541db3bf-5989-4e83-b9d0-15a31668d07e",
      "documentation": "Deletes an existing subscription. All pending messages in the subscription are immediately dropped. Calls to `Pull` after deletion will return `NOT_FOUND`. After a subscription is deleted, a new one may be created with the same name, but the new one has no association with the old subscription, or its topic unless the same topic is specified.",
      "method": "delete",
      "endpoint": "v1beta2/:subscription",
      "responses": [
        {
          "uuid": "49182e72-d877-49ba-85dc-63d43d06a4ba",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "09462986-fe91-4939-8038-ee42c217f1aa",
      "documentation": "Gets the configuration details of a subscription.",
      "method": "get",
      "endpoint": "v1beta2/:subscription",
      "responses": [
        {
          "uuid": "a4bd48d5-081c-4e9e-ab07-58894f2641fc",
          "body": "{\n  \"ackDeadlineSeconds\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"pushConfig\": {\n    \"attributes\": {},\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"pushEndpoint\": \"\"\n  },\n  \"topic\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01b91d9f-5063-438b-98cf-7d9ddbe2dc7d",
      "documentation": "Acknowledges the messages associated with the `ack_ids` in the `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages from the subscription. Acknowledging a message whose ack deadline has expired may succeed, but such a message may be redelivered later. Acknowledging a message more than once will not result in an error.",
      "method": "post",
      "endpoint": "v1beta2/:subscription:acknowledge",
      "responses": [
        {
          "uuid": "cd6f7f59-84b9-49cd-b899-e79f0e8901ff",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9f1f18fa-21a5-42c4-a06a-c1f249692fff",
      "documentation": "Modifies the ack deadline for a specific message. This method is useful to indicate that more time is needed to process a message by the subscriber, or to make the message available for redelivery if the processing was interrupted. Note that this does not modify the subscription-level `ackDeadlineSeconds` used for subsequent messages.",
      "method": "post",
      "endpoint": "v1beta2/:subscription:modifyAckDeadline",
      "responses": [
        {
          "uuid": "de3349f9-3d7c-4797-9c76-6d1ab549ff2f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95f5bf73-939e-4c63-af0b-245b057d7f7a",
      "documentation": "Modifies the `PushConfig` for a specified subscription. This may be used to change a push subscription to a pull one (signified by an empty `PushConfig`) or vice versa, or change the endpoint URL and other attributes of a push subscription. Messages will accumulate for delivery continuously through the call regardless of changes to the `PushConfig`.",
      "method": "post",
      "endpoint": "v1beta2/:subscription:modifyPushConfig",
      "responses": [
        {
          "uuid": "0bedd886-e29b-4d43-a3cd-7cd7e4b24ec0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2d07d6b9-1c4b-4bea-8fab-d0d4afafd5df",
      "documentation": "Pulls messages from the server. Returns an empty list if there are no messages available in the backlog. The server may return `UNAVAILABLE` if there are too many concurrent pull requests pending for the given subscription.",
      "method": "post",
      "endpoint": "v1beta2/:subscription:pull",
      "responses": [
        {
          "uuid": "8e25cf46-c1ce-4c6c-91c9-c09ee684844b",
          "body": "{\n  \"receivedMessages\": [\n    {\n      \"ackId\": \"\",\n      \"message\": {\n        \"attributes\": {},\n        \"data\": \"\",\n        \"messageId\": \"\",\n        \"publishTime\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "577ed6e7-7356-4a6a-a86c-e4b9216215af",
      "documentation": "Deletes the topic with the given name. Returns `NOT_FOUND` if the topic does not exist. After a topic is deleted, a new topic may be created with the same name; this is an entirely new topic with none of the old configuration or subscriptions. Existing subscriptions to this topic are not deleted, but their `topic` field is set to `_deleted-topic_`.",
      "method": "delete",
      "endpoint": "v1beta2/:topic",
      "responses": [
        {
          "uuid": "2dd82262-d98c-4da7-963c-72fc930adffc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9dc731ed-b088-4a70-827d-8fe9ec99ec84",
      "documentation": "Gets the configuration of a topic.",
      "method": "get",
      "endpoint": "v1beta2/:topic",
      "responses": [
        {
          "uuid": "1eea6ace-ddbb-4cd3-9d0b-4773dafef3d9",
          "body": "{\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9e22d942-7574-4301-a82b-4a1780768acf",
      "documentation": "Lists the name of the subscriptions for this topic.",
      "method": "get",
      "endpoint": "v1beta2/:topic/subscriptions",
      "responses": [
        {
          "uuid": "8e63eebe-e3be-4533-b234-c49931fc8040",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"subscriptions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dbed3c54-ad68-4175-a223-b59de92c9940",
      "documentation": "Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic does not exist. The message payload must not be empty; it must contain either a non-empty data field, or at least one attribute.",
      "method": "post",
      "endpoint": "v1beta2/:topic:publish",
      "responses": [
        {
          "uuid": "c29ab959-874c-4e6f-bbb1-9fb1a37bb55b",
          "body": "{\n  \"messageIds\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}