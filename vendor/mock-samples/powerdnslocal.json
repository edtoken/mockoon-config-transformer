{
  "uuid": "8233e094-152e-44fa-bf01-6639b3f56f83",
  "lastMigration": 24,
  "name": "PowerDNS Authoritative HTTP API",
  "endpointPrefix": "api/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f1c4623e-569e-480b-a8f6-821ad28fce9c",
      "documentation": "List all servers",
      "method": "get",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "96fd19ec-d5b8-42f4-ba94-676dca9a54d7",
          "body": "[\n  {\n    \"config_url\": \"\",\n    \"daemon_type\": \"\",\n    \"id\": \"\",\n    \"type\": \"\",\n    \"url\": \"\",\n    \"version\": \"\",\n    \"zones_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "An array of servers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3008502f-266c-4a8d-82da-7ebd6f9366be",
      "documentation": "List a server",
      "method": "get",
      "endpoint": "servers/:server_id",
      "responses": [
        {
          "uuid": "797656cb-319e-4f7a-a1d7-5b3f9951c0e7",
          "body": "{\n  \"config_url\": \"\",\n  \"daemon_type\": \"\",\n  \"id\": \"\",\n  \"type\": \"\",\n  \"url\": \"\",\n  \"version\": \"\",\n  \"zones_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An server",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d03fb4d7-afc1-4abf-a434-a8c5aa550282",
      "documentation": "Flush a cache-entry by name",
      "method": "put",
      "endpoint": "servers/:server_id/cache/flush",
      "responses": [
        {
          "uuid": "bb151e2e-4433-498a-a317-202cef54385a",
          "body": "{\n  \"count\": {{faker 'datatype.number'}},\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Flush successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9f2d3838-ef7d-49cf-adb9-7d3f93200e97",
      "documentation": "Returns all ConfigSettings for a single server",
      "method": "get",
      "endpoint": "servers/:server_id/config",
      "responses": [
        {
          "uuid": "139080a6-59be-48f0-b1d9-3e2701caf785",
          "body": "[\n  {\n    \"name\": \"\",\n    \"type\": \"\",\n    \"value\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of config values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9441ad21-c7ca-4eb8-af40-50f670522537",
      "documentation": "Returns a specific ConfigSetting for a single server",
      "method": "get",
      "endpoint": "servers/:server_id/config/:config_setting_name",
      "responses": [
        {
          "uuid": "568460f5-cd7b-46d0-8728-2fd81a6ae1c2",
          "body": "{\n  \"name\": \"\",\n  \"type\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of config values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7469d6ad-5bb2-4909-8bd6-294c4b8567af",
      "documentation": "Search the data inside PowerDNS",
      "method": "get",
      "endpoint": "servers/:server_id/search-data",
      "responses": [
        {
          "uuid": "caa7aa2c-7778-4b0f-bc92-39b09d1ecd1b",
          "body": "[\n  {\n    \"content\": \"\",\n    \"disabled\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"object_type\": \"\",\n    \"ttl\": {{faker 'datatype.number'}},\n    \"type\": \"\",\n    \"zone\": \"\",\n    \"zone_id\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a JSON array with results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4a14c9d3-0380-444d-b417-c383df2af3ff",
      "documentation": "Query statistics.",
      "method": "get",
      "endpoint": "servers/:server_id/statistics",
      "responses": [
        {
          "uuid": "298566f1-2437-4a76-9559-0b8fefcf99c8",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Statistic Items",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7b67fe16-0693-41e5-bf5e-7ed06ad3a739",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "Returned when a non-existing statistic name has been requested. Contains an error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a94e43d-2deb-4ff8-9469-f3adf8d952f8",
      "documentation": "Get all TSIGKeys on the server, except the actual key",
      "method": "get",
      "endpoint": "servers/:server_id/tsigkeys",
      "responses": [
        {
          "uuid": "af327388-566a-483e-befd-9fcd14691d6e",
          "body": "[\n  {\n    \"algorithm\": \"\",\n    \"id\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of TSIGKey objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3a3587c9-6aac-43bc-82bf-b8038873b889",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error, keys could not be retrieved. Contains error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8b2a9da8-34c3-440b-b1b4-4d62424ca216",
      "documentation": "Add a TSIG key",
      "method": "post",
      "endpoint": "servers/:server_id/tsigkeys",
      "responses": [
        {
          "uuid": "d2b7fe79-5040-4722-ad36-90c6d700fdff",
          "body": "{\n  \"algorithm\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ec8e72b1-e1c1-4e12-bc37-982866c839c6",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. A key with this name already exists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8784e408-9a89-48dc-a41c-c4fdabfcff9d",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entry, the TSIGKey provided has issues.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a4b8f8ff-d09c-4cb2-8ed4-884b42f33e0d",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error. There was a problem creating the key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c58f4544-a26a-45fd-bec6-f09a4ead4391",
      "documentation": "Delete the TSIGKey with tsigkey_id",
      "method": "delete",
      "endpoint": "servers/:server_id/tsigkeys/:tsigkey_id",
      "responses": [
        {
          "uuid": "7a43b03f-9d16-467d-8724-c0b6e876dfe9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK, key was deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "093fdd6a-fca9-44c5-a2c8-79dcace76b27",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found. The TSIGKey with the specified tsigkey_id does not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6be8b4c8-6938-4b10-8716-9d7df0466bc2",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error. Contains error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c987fc3e-6cf6-4e12-910c-141c32055c33",
      "documentation": "Get a specific TSIGKeys on the server, including the actual key",
      "method": "get",
      "endpoint": "servers/:server_id/tsigkeys/:tsigkey_id",
      "responses": [
        {
          "uuid": "c7ece6ed-56ec-4d50-a99a-c12faf2e8dee",
          "body": "{\n  \"algorithm\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "42f8d289-adca-4bf0-8784-720f13c8fa10",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found. The TSIGKey with the specified tsigkey_id does not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d3436f76-afe3-46e4-866e-62231464ae3c",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error, keys could not be retrieved. Contains error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d886f0cd-5455-4a4b-ad9c-c866be68b40f",
      "documentation": "The TSIGKey at tsigkey_id can be changed in multiple ways:\n * Changing the Name, this will remove the key with tsigkey_id after adding.\n * Changing the Algorithm\n * Changing the Key\n\nOnly the relevant fields have to be provided in the request body.\n",
      "method": "put",
      "endpoint": "servers/:server_id/tsigkeys/:tsigkey_id",
      "responses": [
        {
          "uuid": "03d2365f-a49c-4f42-9f50-4fb482fba0ac",
          "body": "{\n  \"algorithm\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK. TSIGKey is changed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0bffc0c3-20ed-4878-97c8-af0adf97a414",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found. The TSIGKey with the specified tsigkey_id does not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47323fba-ab1c-41f3-bf7e-47e45ba9a85e",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error. Contains error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96a885b6-436a-4da2-b1ac-a94fc10492b5",
      "documentation": "List all Zones in a server",
      "method": "get",
      "endpoint": "servers/:server_id/zones",
      "responses": [
        {
          "uuid": "3a82ae96-6d6d-4660-9f8d-7b306b9547e1",
          "body": "[\n  {\n    \"account\": \"\",\n    \"api_rectify\": {{faker 'datatype.boolean'}},\n    \"dnssec\": {{faker 'datatype.boolean'}},\n    \"edited_serial\": {{faker 'datatype.number'}},\n    \"id\": \"\",\n    \"kind\": \"{{oneOf (array 'Native' 'Master' 'Slave')}}\",\n    \"master_tsig_key_ids\": [\n      \"\"\n    ],\n    \"masters\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"nameservers\": [\n      \"\"\n    ],\n    \"notified_serial\": {{faker 'datatype.number'}},\n    \"nsec3narrow\": {{faker 'datatype.boolean'}},\n    \"nsec3param\": \"\",\n    \"presigned\": {{faker 'datatype.boolean'}},\n    \"rrsets\": [\n      {\n        \"changetype\": \"\",\n        \"comments\": [\n          {\n            \"account\": \"\",\n            \"content\": \"\",\n            \"modified_at\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"name\": \"\",\n        \"records\": [\n          {\n            \"content\": \"\",\n            \"disabled\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"ttl\": {{faker 'datatype.number'}},\n        \"type\": \"\"\n      }\n    ],\n    \"serial\": {{faker 'datatype.number'}},\n    \"slave_tsig_key_ids\": [\n      \"\"\n    ],\n    \"soa_edit\": \"\",\n    \"soa_edit_api\": \"\",\n    \"type\": \"\",\n    \"url\": \"\",\n    \"zone\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "An array of Zones",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51aa24c5-688f-43e0-97b3-4ac506a84f11",
      "documentation": "Creates a new domain, returns the Zone on creation.",
      "method": "post",
      "endpoint": "servers/:server_id/zones",
      "responses": [
        {
          "uuid": "d871e668-957f-4c8d-90f2-1308f65c629f",
          "body": "{\n  \"account\": \"\",\n  \"api_rectify\": {{faker 'datatype.boolean'}},\n  \"dnssec\": {{faker 'datatype.boolean'}},\n  \"edited_serial\": {{faker 'datatype.number'}},\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'Native' 'Master' 'Slave')}}\",\n  \"master_tsig_key_ids\": [\n    \"\"\n  ],\n  \"masters\": [\n    \"\"\n  ],\n  \"name\": \"\",\n  \"nameservers\": [\n    \"\"\n  ],\n  \"notified_serial\": {{faker 'datatype.number'}},\n  \"nsec3narrow\": {{faker 'datatype.boolean'}},\n  \"nsec3param\": \"\",\n  \"presigned\": {{faker 'datatype.boolean'}},\n  \"rrsets\": [\n    {\n      \"changetype\": \"\",\n      \"comments\": [\n        {\n          \"account\": \"\",\n          \"content\": \"\",\n          \"modified_at\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"name\": \"\",\n      \"records\": [\n        {\n          \"content\": \"\",\n          \"disabled\": {{faker 'datatype.boolean'}}\n        }\n      ],\n      \"ttl\": {{faker 'datatype.number'}},\n      \"type\": \"\"\n    }\n  ],\n  \"serial\": {{faker 'datatype.number'}},\n  \"slave_tsig_key_ids\": [\n    \"\"\n  ],\n  \"soa_edit\": \"\",\n  \"soa_edit_api\": \"\",\n  \"type\": \"\",\n  \"url\": \"\",\n  \"zone\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "A zone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd7b4241-6b72-4951-9343-198699856633",
      "documentation": "Deletes this zone, all attached metadata and rrsets.",
      "method": "delete",
      "endpoint": "servers/:server_id/zones/:zone_id",
      "responses": [
        {
          "uuid": "c535232d-4fe2-498e-b9f1-0b6b16522aca",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Returns 204 No Content on success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8579f4d3-dec2-44f7-8786-4a94a5f2a81b",
      "documentation": "zone managed by a server",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id",
      "responses": [
        {
          "uuid": "7678f0fa-e840-47a2-bb51-967af3a2bcfe",
          "body": "{\n  \"account\": \"\",\n  \"api_rectify\": {{faker 'datatype.boolean'}},\n  \"dnssec\": {{faker 'datatype.boolean'}},\n  \"edited_serial\": {{faker 'datatype.number'}},\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'Native' 'Master' 'Slave')}}\",\n  \"master_tsig_key_ids\": [\n    \"\"\n  ],\n  \"masters\": [\n    \"\"\n  ],\n  \"name\": \"\",\n  \"nameservers\": [\n    \"\"\n  ],\n  \"notified_serial\": {{faker 'datatype.number'}},\n  \"nsec3narrow\": {{faker 'datatype.boolean'}},\n  \"nsec3param\": \"\",\n  \"presigned\": {{faker 'datatype.boolean'}},\n  \"rrsets\": [\n    {\n      \"changetype\": \"\",\n      \"comments\": [\n        {\n          \"account\": \"\",\n          \"content\": \"\",\n          \"modified_at\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"name\": \"\",\n      \"records\": [\n        {\n          \"content\": \"\",\n          \"disabled\": {{faker 'datatype.boolean'}}\n        }\n      ],\n      \"ttl\": {{faker 'datatype.number'}},\n      \"type\": \"\"\n    }\n  ],\n  \"serial\": {{faker 'datatype.number'}},\n  \"slave_tsig_key_ids\": [\n    \"\"\n  ],\n  \"soa_edit\": \"\",\n  \"soa_edit_api\": \"\",\n  \"type\": \"\",\n  \"url\": \"\",\n  \"zone\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Zone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ed81c5e-6c1f-4bcd-9dd5-9a6afda91ef3",
      "documentation": "Creates/modifies/deletes RRsets present in the payload and their comments. Returns 204 No Content on success.",
      "method": "patch",
      "endpoint": "servers/:server_id/zones/:zone_id",
      "responses": [
        {
          "uuid": "0b3de035-79c0-46bd-891d-5a8bed988dcb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Returns 204 No Content on success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59a2ba02-65b5-4e47-9a98-c32d789a29cf",
      "documentation": "Modifies basic zone data.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id",
      "responses": [
        {
          "uuid": "4feb3ac4-f73a-49eb-9e36-a984d088610a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Returns 204 No Content on success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c2f12eba-a05d-4601-8a41-b06624b3d0f8",
      "documentation": "Retrieve slave zone from its master.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/axfr-retrieve",
      "responses": [
        {
          "uuid": "871b5d37-08e4-4db6-a1be-3c2191155552",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b30dc2e4-e3c4-41d5-ae6c-92c497982218",
      "documentation": "Get all CryptoKeys for a zone, except the privatekey",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys",
      "responses": [
        {
          "uuid": "038ac14b-467d-4bca-8a8a-61f03e63a244",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"algorithm\": \"\",\n    \"bits\": {{faker 'datatype.number'}},\n    \"dnskey\": \"\",\n    \"ds\": [\n      \"\"\n    ],\n    \"id\": {{faker 'datatype.number'}},\n    \"keytype\": \"{{oneOf (array 'ksk' 'zsk' 'csk')}}\",\n    \"privatekey\": \"\",\n    \"published\": {{faker 'datatype.boolean'}},\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Cryptokey objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dfffb14c-1b32-4db4-ba24-363f60ea9077",
      "documentation": "Creates a Cryptokey",
      "method": "post",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys",
      "responses": [
        {
          "uuid": "cfa939a5-e391-4344-9256-460ce597bcbd",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"algorithm\": \"\",\n  \"bits\": {{faker 'datatype.number'}},\n  \"dnskey\": \"\",\n  \"ds\": [\n    \"\"\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"keytype\": \"{{oneOf (array 'ksk' 'zsk' 'csk')}}\",\n  \"privatekey\": \"\",\n  \"published\": {{faker 'datatype.boolean'}},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77e8b9e1-6e06-4cb6-a11e-91e6890badb8",
      "documentation": "This method deletes a key specified by cryptokey_id.",
      "method": "delete",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys/:cryptokey_id",
      "responses": [
        {
          "uuid": "61911c54-028b-4870-b05a-fc1f7e9bf9f5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "23857fab-5256-44b0-acbd-3ddb17e8e2ae",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "Returned when something is wrong with the content of the request. Contains an error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "89945c85-16f7-4b84-9854-7ae3c0322052",
      "documentation": "Returns all data about the CryptoKey, including the privatekey.",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys/:cryptokey_id",
      "responses": [
        {
          "uuid": "75706477-ba5f-454f-8ff9-68d9a6bf1de2",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"algorithm\": \"\",\n  \"bits\": {{faker 'datatype.number'}},\n  \"dnskey\": \"\",\n  \"ds\": [\n    \"\"\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"keytype\": \"{{oneOf (array 'ksk' 'zsk' 'csk')}}\",\n  \"privatekey\": \"\",\n  \"published\": {{faker 'datatype.boolean'}},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Cryptokey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a40e40f-74d9-494d-8d24-9fb44bc39bad",
      "documentation": "This method (de)activates a key from zone_name specified by cryptokey_id",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys/:cryptokey_id",
      "responses": [
        {
          "uuid": "242f6aae-0f2a-4d7c-a1ab-ddba1d7c5b03",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cd819062-076e-4274-9e9d-24035f0272fa",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "Returned when something is wrong with the content of the request. Contains an error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8e8bf1dc-c717-459b-a324-07ee360279e6",
      "documentation": "Returns the zone in AXFR format.",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/export",
      "responses": [
        {
          "uuid": "c1c50c18-4d43-4e4b-9c1c-8d4397346996",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5cff108d-ca84-45f7-8781-18f61c053a5b",
      "documentation": "Get all the Metadata associated with the zone.",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata",
      "responses": [
        {
          "uuid": "3c284604-75d4-4e2f-88d3-de3c629cc3c3",
          "body": "[\n  {\n    \"kind\": \"\",\n    \"metadata\": [\n      \"\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Metadata objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e5757c46-36ef-4670-ae25-2ccf829b2cd8",
      "documentation": "Creates a set of metadata entries",
      "method": "post",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata",
      "responses": [
        {
          "uuid": "c9dd457d-f4d3-4444-aac5-0e3436d82abe",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ac6be531-0090-4849-953c-802b0fedf4ea",
      "documentation": "Delete all items of a single kind of domain metadata.",
      "method": "delete",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata/:metadata_kind",
      "responses": [
        {
          "uuid": "73993b50-6ad2-4af0-904f-6611af308557",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c5083768-2297-455c-9505-caad118ec526",
      "documentation": "Get the content of a single kind of domain metadata as a Metadata object.",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata/:metadata_kind",
      "responses": [
        {
          "uuid": "158fc69d-c7ae-4ee3-8b4f-bcf77ffb2e82",
          "body": "{\n  \"kind\": \"\",\n  \"metadata\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Metadata object with list of values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e261ddfa-88e5-4988-9631-b1b2c4af7c84",
      "documentation": "Replace the content of a single kind of domain metadata.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata/:metadata_kind",
      "responses": [
        {
          "uuid": "f5b9ceb9-2188-4181-95fe-8db98d12408d",
          "body": "{\n  \"kind\": \"\",\n  \"metadata\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Metadata object with list of values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5172bd5-4291-42dd-be73-f8ac26c0405b",
      "documentation": "Send a DNS NOTIFY to all slaves.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/notify",
      "responses": [
        {
          "uuid": "f4126e85-f09b-4b8c-8db6-390a08f20fa5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "79a768fa-4b0a-4d0e-af7d-105af02b9756",
      "documentation": "Rectify the zone data.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/rectify",
      "responses": [
        {
          "uuid": "4353d1e7-f502-4b93-8d94-d7c44074d182",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}