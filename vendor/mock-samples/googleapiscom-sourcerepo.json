{
  "uuid": "5600b0f3-7444-4857-9963-dffcbf280d26",
  "lastMigration": 24,
  "name": "Cloud Source Repositories API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "3663a14c-cda0-4876-bbed-fb2965e0712d",
      "documentation": "Deletes a repo.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "f5fbf0de-1ac6-4edf-9106-60bd71ec4d4d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c0bb9015-1b04-4691-80dd-33feb6b7121e",
      "documentation": "Returns information about a repo.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "2d69d44b-c485-454a-a632-d14688ca657b",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9f2be04-3be8-4f9c-b66e-39618dd8376c",
      "documentation": "Updates information about a repo.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "b2342ed6-3f3c-4f49-a0db-261e236c6798",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f207a53f-f9c0-420d-99b1-0d8d65a57906",
      "documentation": "Returns the Cloud Source Repositories configuration of the project.",
      "method": "get",
      "endpoint": "v1/:name/config",
      "responses": [
        {
          "uuid": "d66bf5be-887f-4ad0-9e7c-4f2f9441cf87",
          "body": "{\n  \"enablePrivateKeyCheck\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"pubsubConfigs\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0e14ef48-e829-4564-9fa5-9d983c08f264",
      "documentation": "Updates the Cloud Source Repositories configuration of the project.",
      "method": "patch",
      "endpoint": "v1/:name/config",
      "responses": [
        {
          "uuid": "a97fb30c-aba8-4096-8b82-61cb98398d5e",
          "body": "{\n  \"enablePrivateKeyCheck\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"pubsubConfigs\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1c562c7-14f5-44df-9691-5329117ca9a6",
      "documentation": "Returns all repos belonging to a project. The sizes of the repos are not set by ListRepos. To get the size of a repo, use GetRepo.",
      "method": "get",
      "endpoint": "v1/:name/repos",
      "responses": [
        {
          "uuid": "4290161c-9612-46d9-a73a-3bde1b8f0650",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"repos\": [\n    {\n      \"mirrorConfig\": {\n        \"deployKeyId\": \"\",\n        \"url\": \"\",\n        \"webhookId\": \"\"\n      },\n      \"name\": \"\",\n      \"pubsubConfigs\": {},\n      \"size\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4441663a-a865-4bf7-b909-058c0c5270c7",
      "documentation": "Synchronize a connected repo. The response contains SyncRepoMetadata in the metadata field.",
      "method": "post",
      "endpoint": "v1/:name:sync",
      "responses": [
        {
          "uuid": "3169d751-5610-4672-9a84-9cbe3eea5631",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cdb6b429-c74c-4202-9abb-ef3e7be4663b",
      "documentation": "Creates a repo in the given project with the given name. If the named repository already exists, `CreateRepo` returns `ALREADY_EXISTS`.",
      "method": "post",
      "endpoint": "v1/:parent/repos",
      "responses": [
        {
          "uuid": "574717cd-b2c7-4224-9b5e-06a1afabd58c",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d8ec806b-5a09-4d25-b969-b852b27c5409",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "503b2221-e933-42a8-a5f0-a220c5d24dcd",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d9a66b1e-967c-4a32-a90c-1d95a6080d18",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy.",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "8d5e498a-d76a-4bca-869e-57f8a19ffc9a",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "258c2b5c-dfdd-4f7a-a59e-04e2970e634d",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "bb2fd388-0868-45d3-ba06-a9a72519c1fb",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}