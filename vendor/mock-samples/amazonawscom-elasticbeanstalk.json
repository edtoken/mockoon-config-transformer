{
  "uuid": "8a58a6b4-baac-4d5f-8bde-ab4a8967953d",
  "lastMigration": 24,
  "name": "AWS Elastic Beanstalk",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "a4a61b00-309a-46cb-a3d7-07228268dfc6",
      "documentation": "Cancels in-progress environment configuration update or application version deployment.",
      "method": "get",
      "endpoint": "#Action=AbortEnvironmentUpdate",
      "responses": [
        {
          "uuid": "bb1efe37-c3ef-4827-8e0a-21522fe0911d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2880124a-ba4d-421b-8088-93e1347015c3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f230c87d-f353-4dc7-af1e-4731d4d2f4a8",
      "documentation": "Cancels in-progress environment configuration update or application version deployment.",
      "method": "post",
      "endpoint": "#Action=AbortEnvironmentUpdate",
      "responses": [
        {
          "uuid": "a107bd02-a234-4109-93c7-0b8c9c5dea1b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eafdd7f7-3bf0-4306-a287-a7bb06a47031",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd3e3cb2-4287-479a-91e8-d049b8b6b509",
      "documentation": "Applies a scheduled managed action immediately. A managed action can be applied only if its status is <code>Scheduled</code>. Get the status and action ID of a managed action with <a>DescribeEnvironmentManagedActions</a>.",
      "method": "get",
      "endpoint": "#Action=ApplyEnvironmentManagedAction",
      "responses": [
        {
          "uuid": "fb98452f-235f-45b8-8576-47f5694494c5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "174736a4-f790-4b9f-b966-42b7f249ce29",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f029c3f-e8df-468a-a5e4-6044b91d14be",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ManagedActionInvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "48d96cc0-77b0-4a3b-8010-21880efbd8b8",
      "documentation": "Applies a scheduled managed action immediately. A managed action can be applied only if its status is <code>Scheduled</code>. Get the status and action ID of a managed action with <a>DescribeEnvironmentManagedActions</a>.",
      "method": "post",
      "endpoint": "#Action=ApplyEnvironmentManagedAction",
      "responses": [
        {
          "uuid": "3ceccca5-8267-4a87-b568-3d27e6b58f12",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fe90a603-859c-4968-96fa-9660e1235a47",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97a4fcee-201b-43d5-941a-ed5367ffda2d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ManagedActionInvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9bc1a5c3-064f-449f-8e80-f66794c133f6",
      "documentation": "Add or change the operations role used by an environment. After this call is made, Elastic Beanstalk uses the associated operations role for permissions to downstream services during subsequent calls acting on this environment. For more information, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.",
      "method": "get",
      "endpoint": "#Action=AssociateEnvironmentOperationsRole",
      "responses": [
        {
          "uuid": "d84ade51-302c-46b2-a019-686d8d1961cd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92cdb5bc-7cb9-4ed3-801e-964a23d85f2c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96b23303-e944-4e8a-81e3-0c0f1a17db46",
      "documentation": "Add or change the operations role used by an environment. After this call is made, Elastic Beanstalk uses the associated operations role for permissions to downstream services during subsequent calls acting on this environment. For more information, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.",
      "method": "post",
      "endpoint": "#Action=AssociateEnvironmentOperationsRole",
      "responses": [
        {
          "uuid": "9bd08d78-7257-4ebe-83fe-2e2ae2a4ce7d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "23a9f2c2-e952-49f7-9f98-c3c0b9f60005",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "462839bf-799d-4bc9-8289-c8cab7bcb9d4",
      "documentation": "Checks if the specified CNAME is available.",
      "method": "get",
      "endpoint": "#Action=CheckDNSAvailability",
      "responses": [
        {
          "uuid": "c3d970b1-66da-43c4-98ef-52be5b08446b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16d07465-f0f6-4a2a-a516-4fdb1f691d0a",
      "documentation": "Checks if the specified CNAME is available.",
      "method": "post",
      "endpoint": "#Action=CheckDNSAvailability",
      "responses": [
        {
          "uuid": "8bd9cd83-d5d7-4461-afa7-c01a5608b365",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a8f3ecd6-723f-40ae-9223-f8ab905182a1",
      "documentation": "Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named <code>env.yaml</code>. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html\">Compose Environments</a> for details.",
      "method": "get",
      "endpoint": "#Action=ComposeEnvironments",
      "responses": [
        {
          "uuid": "119e75ca-f7ec-4bec-8b0d-9e972b51dcd3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc97137b-a427-4718-a062-9e4814b9612d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyEnvironmentsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c0716d0-d1a1-4514-aaa4-38ec45760db1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54f02815-08b9-421e-b581-38cc2d75bd1f",
      "documentation": "Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named <code>env.yaml</code>. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html\">Compose Environments</a> for details.",
      "method": "post",
      "endpoint": "#Action=ComposeEnvironments",
      "responses": [
        {
          "uuid": "d9d9af3f-1016-451c-8320-4c243772579d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bac768b7-2c90-48c7-8e8b-37c0b4c0d2fe",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyEnvironmentsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "db55bccf-087b-4613-9109-a86eb1138fb4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d20a9069-052d-47b6-afdb-de4bbf36ca19",
      "documentation": "Creates an application that has one configuration template named <code>default</code> and no application versions.",
      "method": "get",
      "endpoint": "#Action=CreateApplication",
      "responses": [
        {
          "uuid": "0442971c-3922-4894-a92e-7151c0b39d6d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a3ccb823-9ff2-438d-a024-51184062d302",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyApplicationsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "eb8070be-f1e1-4648-b589-ff733d94d837",
      "documentation": "Creates an application that has one configuration template named <code>default</code> and no application versions.",
      "method": "post",
      "endpoint": "#Action=CreateApplication",
      "responses": [
        {
          "uuid": "e0f5654a-4cd3-4c03-81f9-c4ff976f6d99",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "08f18ad3-d9cd-4961-a3e6-3301a05975c8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyApplicationsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "37f70c89-699d-4ce4-8890-fb041332c98c",
      "documentation": "<p>Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:</p> <p>Specify a commit in an AWS CodeCommit repository with <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS CodeBuild with <code>SourceBuildInformation</code> and <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3 with <code>SourceBundle</code> </p> <p>Omit both <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use the default sample application.</p> <note> <p>After you create an application version with a specified Amazon S3 bucket and key location, you can't change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateApplicationVersion",
      "responses": [
        {
          "uuid": "f9207dbb-d457-47a1-859d-d666b5215dd2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e10e952a-994d-42f2-9337-45839d000215",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyApplicationsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "41223521-a408-4fc3-981c-5706480dbc0e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyApplicationVersionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e55dd2f8-552d-48f7-a471-b6830730667d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d10d09b-24ae-4036-ae29-c2f060d7c01d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "S3LocationNotInServiceRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "133b74d8-6d32-4379-9585-99013a903025",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeBuildNotInServiceRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0980cfef-8eb5-4466-9d58-f86885d4bde3",
      "documentation": "<p>Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:</p> <p>Specify a commit in an AWS CodeCommit repository with <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS CodeBuild with <code>SourceBuildInformation</code> and <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3 with <code>SourceBundle</code> </p> <p>Omit both <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use the default sample application.</p> <note> <p>After you create an application version with a specified Amazon S3 bucket and key location, you can't change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateApplicationVersion",
      "responses": [
        {
          "uuid": "1866bfe5-63e1-4ef3-96c5-a147bb091cbe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d4dc92b6-501c-4013-bbcf-6a6cce303035",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyApplicationsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cde3e4f3-a1f8-47a5-8097-47eff7326560",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyApplicationVersionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8ea0f99-48d2-49de-b8af-7641762a1442",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e22566c9-cb4a-4ec2-9e03-90f589443fed",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "S3LocationNotInServiceRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb5709c0-78be-41a6-a707-b10fc2b211d2",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeBuildNotInServiceRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a2dbb0ec-771c-46f1-8b6d-8a5f4243552c",
      "documentation": "<p>Creates an AWS Elastic Beanstalk configuration template, associated with a specific Elastic Beanstalk application. You define application configuration settings in a configuration template. You can then use the configuration template to deploy different versions of the application with the same configuration settings.</p> <p>Templates aren't associated with any environment. The <code>EnvironmentName</code> response element is always <code>null</code>.</p> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p> <a>DescribeConfigurationSettings</a> </p> </li> <li> <p> <a>ListAvailableSolutionStacks</a> </p> </li> </ul>",
      "method": "get",
      "endpoint": "#Action=CreateConfigurationTemplate",
      "responses": [
        {
          "uuid": "8889e6f7-3a20-467a-acde-0b470e75c5ca",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fcf5f166-867a-42f3-b36b-74f687b8e20a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa1543cb-0b19-4c89-992f-c08cd7ed3e9d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1e8d666-7a82-4380-b119-d385036ff76d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyConfigurationTemplatesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a0d550ab-5159-43e9-bea5-d64c5b0d071e",
      "documentation": "<p>Creates an AWS Elastic Beanstalk configuration template, associated with a specific Elastic Beanstalk application. You define application configuration settings in a configuration template. You can then use the configuration template to deploy different versions of the application with the same configuration settings.</p> <p>Templates aren't associated with any environment. The <code>EnvironmentName</code> response element is always <code>null</code>.</p> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p> <a>DescribeConfigurationSettings</a> </p> </li> <li> <p> <a>ListAvailableSolutionStacks</a> </p> </li> </ul>",
      "method": "post",
      "endpoint": "#Action=CreateConfigurationTemplate",
      "responses": [
        {
          "uuid": "bbe72fc0-87f3-4ed3-bf1a-1d3535c5b05a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eeeb3922-2903-4790-afc2-1dfa20211d27",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d30b6042-5a93-4a75-a29c-3c5eca1c5954",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60d46567-3521-45d4-b2f1-e5a41fcd3f85",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyConfigurationTemplatesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5101e196-90fd-4306-b25f-c50633d9fb1d",
      "documentation": "Launches an AWS Elastic Beanstalk environment for the specified application using the specified configuration.",
      "method": "get",
      "endpoint": "#Action=CreateEnvironment",
      "responses": [
        {
          "uuid": "cf402e64-67bf-434a-b28e-8fb7d1179fb2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "93d92474-198f-40c2-9442-f9aed27eb26a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyEnvironmentsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e8e03e6-f8bb-4851-b2ad-66d9afe71bb3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ed0da25-ed11-4048-a3af-23168633ed98",
      "documentation": "Launches an AWS Elastic Beanstalk environment for the specified application using the specified configuration.",
      "method": "post",
      "endpoint": "#Action=CreateEnvironment",
      "responses": [
        {
          "uuid": "fea9c0d4-3c6a-4145-a6cb-4a25fa3fece5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "175aad3f-cea8-42cf-bd8f-e8d87641d1a9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyEnvironmentsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5189e57-be2e-40dd-8d7c-a56fc053c4d0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "02837428-3ddc-4804-8b00-447a8000f876",
      "documentation": "Create a new version of your custom platform.",
      "method": "get",
      "endpoint": "#Action=CreatePlatformVersion",
      "responses": [
        {
          "uuid": "5c12da58-c1e6-4a40-83fd-e975d4a5f309",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "201217d4-40ea-4e25-b592-f993a6e386c2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c63c6759-7f95-4532-8dd8-246be01b98d5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f27c611-ea83-4e7b-95f8-4569b21c5197",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyPlatformsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7b98cc17-f5e6-4ac4-9287-b021a5c7093b",
      "documentation": "Create a new version of your custom platform.",
      "method": "post",
      "endpoint": "#Action=CreatePlatformVersion",
      "responses": [
        {
          "uuid": "d2847dae-88e1-47e3-8928-658e0108e5b7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7be46b56-8d13-41e6-afb4-55858768e7bb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0af77371-1e0d-40f3-b2bb-0010b18e5cba",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14785e70-8bf2-41a8-9a42-29bc539beb63",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyPlatformsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba0850bc-4abb-4d95-82a6-ccfefd7abf81",
      "documentation": "Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments. The Elastic Beanstalk console and EB CLI call this API the first time you create an environment in a region. If the storage location already exists, <code>CreateStorageLocation</code> still returns the bucket name but does not create a new bucket.",
      "method": "get",
      "endpoint": "#Action=CreateStorageLocation",
      "responses": [
        {
          "uuid": "1361527e-1cea-4020-9e31-0ef3f7e2114d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef74f3f2-6685-473a-89ae-7328c16b1605",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fadd5052-0db7-40b5-8c6e-3f9e7747b923",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "S3SubscriptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c663405c-e750-46ad-afa9-722cd25cadd6",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "faa3ebc4-df96-4256-aad2-033bbe2d07c5",
      "documentation": "Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments. The Elastic Beanstalk console and EB CLI call this API the first time you create an environment in a region. If the storage location already exists, <code>CreateStorageLocation</code> still returns the bucket name but does not create a new bucket.",
      "method": "post",
      "endpoint": "#Action=CreateStorageLocation",
      "responses": [
        {
          "uuid": "483529db-6a75-4f18-8542-bac0c818c610",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d5529e7b-f536-4111-a463-e52bc6c8437e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aeb5edaa-f136-4915-99ba-1ef0f64378e5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "S3SubscriptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d3454d0-c31b-4fa3-b32f-aa693862c125",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56022e9b-4a2e-46d8-a957-5d94c39b6f04",
      "documentation": "<p>Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.</p> <note> <p>You cannot delete an application that has a running environment.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteApplication",
      "responses": [
        {
          "uuid": "804c81f9-a627-4e7a-aebe-17eb97a93f4b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6fc0b382-dcac-4278-9bbc-aab3d02316d1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26ddcc9b-55d3-45e2-af54-87bbbc448cb1",
      "documentation": "<p>Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.</p> <note> <p>You cannot delete an application that has a running environment.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteApplication",
      "responses": [
        {
          "uuid": "74670a51-2f8b-4bfa-8946-e1f9c95ff4ed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1a85e5d9-926a-43a6-8dec-3f2def64d364",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56e3cda7-1ba8-4d26-89d5-cde9822669e2",
      "documentation": "<p>Deletes the specified version from the specified application.</p> <note> <p>You cannot delete an application version that is associated with a running environment.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteApplicationVersion",
      "responses": [
        {
          "uuid": "82a342f0-167b-4016-ae88-55e43ca85c82",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "52e82983-27d0-4a8a-a286-df49f5ede2b4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SourceBundleDeletionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ca32504-64ed-42a8-bcb6-467ffbe12977",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd535a30-8b91-473b-a373-3f5ef631ada7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d15165d-cd40-42d2-b1d3-d590a4dc0446",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "S3LocationNotInServiceRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a13c594a-475a-4f58-ba96-6cd548379b85",
      "documentation": "<p>Deletes the specified version from the specified application.</p> <note> <p>You cannot delete an application version that is associated with a running environment.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteApplicationVersion",
      "responses": [
        {
          "uuid": "169d8e88-256b-43f5-b99e-73e1f455cf46",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8d9c3132-3d0f-4a22-a396-eab5a86d85ff",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SourceBundleDeletionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "928a8fa7-dd07-401a-938c-80f7299060f8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29602a3c-db2d-4d92-b04f-b2336e4dc01f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4fe27e0-0f5a-4ee6-9862-024f15181b1f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "S3LocationNotInServiceRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e29bdd05-98f2-4623-a532-62eb361a33e1",
      "documentation": "<p>Deletes the specified configuration template.</p> <note> <p>When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment's copy of the template without affecting the running environment.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteConfigurationTemplate",
      "responses": [
        {
          "uuid": "ae90202d-3b61-4c41-a69c-36a83d30758b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aaeed3d8-c0db-440a-a443-82f52482ba02",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f2ca5ed1-9676-4863-8162-c242440009fa",
      "documentation": "<p>Deletes the specified configuration template.</p> <note> <p>When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment's copy of the template without affecting the running environment.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteConfigurationTemplate",
      "responses": [
        {
          "uuid": "5f43dec6-8aaa-4bbe-b347-a90b177724bc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "862ebc52-0ebb-4d2b-b137-fc234f53c068",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3589af2-d3c7-4f41-97dc-3aa843d298e8",
      "documentation": "<p>Deletes the draft configuration associated with the running environment.</p> <p>Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.</p>",
      "method": "get",
      "endpoint": "#Action=DeleteEnvironmentConfiguration",
      "responses": [
        {
          "uuid": "66f24fe2-87de-48e7-92da-8d1a7ae50ccf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d991a4fd-9a16-4a19-b6fb-41a606098be4",
      "documentation": "<p>Deletes the draft configuration associated with the running environment.</p> <p>Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.</p>",
      "method": "post",
      "endpoint": "#Action=DeleteEnvironmentConfiguration",
      "responses": [
        {
          "uuid": "884b444a-3aa9-4ef7-b99b-c37b6a7bc514",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05b51639-792a-4254-83d8-505eea6b4a06",
      "documentation": "Deletes the specified version of a custom platform.",
      "method": "get",
      "endpoint": "#Action=DeletePlatformVersion",
      "responses": [
        {
          "uuid": "6d11c864-a76f-4bf7-bf42-4038552e99d6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3b896daf-108d-4334-93e9-ee7838479f5a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c7b45c2-7cd7-4567-9d6c-192dcf1a4771",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be7de0ac-9711-49e0-b63c-f062240d437d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20cd92ca-f63f-43aa-afe1-01dcb3a60441",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "PlatformVersionStillReferencedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4f579ef-9c5d-4991-9b94-d5b9cba56372",
      "documentation": "Deletes the specified version of a custom platform.",
      "method": "post",
      "endpoint": "#Action=DeletePlatformVersion",
      "responses": [
        {
          "uuid": "e29580c5-50ff-4bc1-9a93-d820952a6e06",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "55a6bcb3-a007-4be1-9bbb-0a7f4417ee4d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53434201-683f-483c-8c58-a4fb08e7784b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f0b5f4fc-a01a-4d82-9be2-1a971ed59a47",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60fd679d-6006-4ea5-9ed3-de8ef2a9c308",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "PlatformVersionStillReferencedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1183d9dd-7638-4882-8e58-dfd8b83bb494",
      "documentation": "<p>Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account.</p> <p>The result currently has one set of attributes—resource quotas.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeAccountAttributes",
      "responses": [
        {
          "uuid": "a8996e0c-5734-4089-ba9e-af95ef6a676f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2cbb86cb-ab25-421b-8b3e-760f3a963e93",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a107921d-5014-4d4a-a191-3f61cb0a1613",
      "documentation": "<p>Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account.</p> <p>The result currently has one set of attributes—resource quotas.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeAccountAttributes",
      "responses": [
        {
          "uuid": "59b43e4f-0162-4ec6-94f4-469e9b07b42b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "13c919a2-6d16-40d2-bcce-d87fe0b5d099",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "673ba6ee-0e21-4619-ad95-5e4cef00e5d5",
      "documentation": "Retrieve a list of application versions.",
      "method": "get",
      "endpoint": "#Action=DescribeApplicationVersions",
      "responses": [
        {
          "uuid": "f43f4155-9083-457b-b340-75beb28b447c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8bc05739-3ccb-48af-a093-891d6abb0ede",
      "documentation": "Retrieve a list of application versions.",
      "method": "post",
      "endpoint": "#Action=DescribeApplicationVersions",
      "responses": [
        {
          "uuid": "652604ae-1306-42e4-b16f-e3c1bc43c1df",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "20cf0ae6-f3a5-40fd-8586-5ac30d20f627",
      "documentation": "Returns the descriptions of existing applications.",
      "method": "get",
      "endpoint": "#Action=DescribeApplications",
      "responses": [
        {
          "uuid": "3f31849b-d053-47b5-8d8e-d3ba44f20314",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0feff805-56cb-4c0a-9e63-12b49fdca54d",
      "documentation": "Returns the descriptions of existing applications.",
      "method": "post",
      "endpoint": "#Action=DescribeApplications",
      "responses": [
        {
          "uuid": "83769da8-1a64-43de-bdb8-da1f446e642e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e285b250-c12a-425e-94b6-e81e2d8dbad0",
      "documentation": "Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.",
      "method": "get",
      "endpoint": "#Action=DescribeConfigurationOptions",
      "responses": [
        {
          "uuid": "8fdaab80-1199-424d-b4c0-de6d04efe616",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dbde91dc-ef02-4577-9bda-66a423ba12b9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "603100e7-eb46-42df-88fd-0b5d87fbeef2",
      "documentation": "Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.",
      "method": "post",
      "endpoint": "#Action=DescribeConfigurationOptions",
      "responses": [
        {
          "uuid": "9f15c8f5-89d7-4d0d-aa1b-3c5d5a5c4fb0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "196ffc15-4459-4257-9d02-d008b9d210c2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a0e961c3-fcc7-4fde-80f4-5f9488327f03",
      "documentation": "<p>Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.</p> <p>When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li> <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>",
      "method": "get",
      "endpoint": "#Action=DescribeConfigurationSettings",
      "responses": [
        {
          "uuid": "de9d70bd-a79b-49c4-9d07-24ffee2212bd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6aaaac63-617a-40d0-b4e8-267ce61550e6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b48d175e-32dd-4896-adbe-8e5abea7099b",
      "documentation": "<p>Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.</p> <p>When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li> <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>",
      "method": "post",
      "endpoint": "#Action=DescribeConfigurationSettings",
      "responses": [
        {
          "uuid": "1e441260-fae3-4e0c-b608-43847bd298e9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "968ca7cb-e2ca-42b1-9e6e-e46190b4276b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c8ff6ed4-f2b4-4f09-a320-b1b2ce67a4ba",
      "documentation": "Returns information about the overall health of the specified environment. The <b>DescribeEnvironmentHealth</b> operation is only available with AWS Elastic Beanstalk Enhanced Health.",
      "method": "get",
      "endpoint": "#Action=DescribeEnvironmentHealth",
      "responses": [
        {
          "uuid": "7c232ff8-cf69-447c-8710-27f86d483a73",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "96c86a0b-742d-4e56-a3f5-33ffc2f84bac",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d72b83ff-85c3-4aba-bac9-b16431154a6e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec76a4ca-6fa4-4116-8702-78c98c40eedf",
      "documentation": "Returns information about the overall health of the specified environment. The <b>DescribeEnvironmentHealth</b> operation is only available with AWS Elastic Beanstalk Enhanced Health.",
      "method": "post",
      "endpoint": "#Action=DescribeEnvironmentHealth",
      "responses": [
        {
          "uuid": "8da58621-c112-4632-92fa-d9eb2f58d201",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1516ad0d-259d-4ad5-8d53-ff920289c5fe",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f782e0a-c5a7-4fe6-97cb-69479a4aa488",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ae20afc-c530-4687-a5f6-49a945eb51e3",
      "documentation": "Lists an environment's completed and failed managed actions.",
      "method": "get",
      "endpoint": "#Action=DescribeEnvironmentManagedActionHistory",
      "responses": [
        {
          "uuid": "754d8a33-18af-44a1-9bba-52917c443b09",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6fff1020-93c1-43b1-9c32-1a8c34630345",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "749ae708-31d1-45a7-be4f-0f8ac5a1f8e0",
      "documentation": "Lists an environment's completed and failed managed actions.",
      "method": "post",
      "endpoint": "#Action=DescribeEnvironmentManagedActionHistory",
      "responses": [
        {
          "uuid": "230cc35e-00b3-424c-a855-895a136d245f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cf3492b4-2e0e-4c74-a4e6-3966394961d3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9321d9f2-35d6-4082-8881-24a403b26211",
      "documentation": "Lists an environment's upcoming and in-progress managed actions.",
      "method": "get",
      "endpoint": "#Action=DescribeEnvironmentManagedActions",
      "responses": [
        {
          "uuid": "f21245fe-0a36-440c-bb28-3d7c247477c1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bb384f0b-4158-4fb7-88d7-555adf078778",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "64101770-80e3-477f-a64f-2743fcf69d0b",
      "documentation": "Lists an environment's upcoming and in-progress managed actions.",
      "method": "post",
      "endpoint": "#Action=DescribeEnvironmentManagedActions",
      "responses": [
        {
          "uuid": "0a5216ff-a82e-4cb8-b9eb-ec1fdf04d262",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf87c400-1d30-475b-aa92-95353845767b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "329268c5-9810-4008-9aab-8a77440087ec",
      "documentation": "Returns AWS resources for this environment.",
      "method": "get",
      "endpoint": "#Action=DescribeEnvironmentResources",
      "responses": [
        {
          "uuid": "e8033fa8-29f2-4633-bd18-cc9c07454bbe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "279d5d85-4c5e-4364-82d8-4bef077c35ab",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5374d13-e55b-4239-a4f6-5ef9959bc6b8",
      "documentation": "Returns AWS resources for this environment.",
      "method": "post",
      "endpoint": "#Action=DescribeEnvironmentResources",
      "responses": [
        {
          "uuid": "28edb377-683e-425e-bcf2-8fb1b0812e6a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6091f8ff-954d-4253-9f38-3f07d65a56ed",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "210aea76-494d-470c-9f67-39c510b7a054",
      "documentation": "Returns descriptions for existing environments.",
      "method": "get",
      "endpoint": "#Action=DescribeEnvironments",
      "responses": [
        {
          "uuid": "1fabb7d3-aed5-4700-9911-83e49467cbd8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "60079899-a6a7-4500-9ad7-e3894443a22f",
      "documentation": "Returns descriptions for existing environments.",
      "method": "post",
      "endpoint": "#Action=DescribeEnvironments",
      "responses": [
        {
          "uuid": "cb201da3-df04-46d2-bcfd-7d3782c6dd1e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c23977d1-b348-4719-8349-8b32a470ce01",
      "documentation": "<p>Returns list of event descriptions matching criteria up to the last 6 weeks.</p> <note> <p>This action returns the most recent 1,000 events from the specified <code>NextToken</code>.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeEvents",
      "responses": [
        {
          "uuid": "8b9a81f9-a3b9-4f17-b54c-f65b17fa671b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd313079-7718-401f-9d33-406dd01c815c",
      "documentation": "<p>Returns list of event descriptions matching criteria up to the last 6 weeks.</p> <note> <p>This action returns the most recent 1,000 events from the specified <code>NextToken</code>.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeEvents",
      "responses": [
        {
          "uuid": "117eb94d-c377-4243-b514-0df85f121464",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "63b68470-495f-4d4f-98d2-efc04fd4a830",
      "documentation": "Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html\">enhanced health reporting</a>.",
      "method": "get",
      "endpoint": "#Action=DescribeInstancesHealth",
      "responses": [
        {
          "uuid": "d87652e3-352f-40a8-83d0-d5be696d5ab0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "39bf21d0-14e1-41c4-b3c3-16012b3ab125",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb45a96e-9583-470c-879d-357c2e2db15a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b6668ad3-9bca-4514-944b-c4e5daa3afa5",
      "documentation": "Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html\">enhanced health reporting</a>.",
      "method": "post",
      "endpoint": "#Action=DescribeInstancesHealth",
      "responses": [
        {
          "uuid": "8302efa8-28d8-4bb6-97b6-2bec5226a08c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "68672906-49b7-46d7-8fa1-8535468330c4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0958a82-2915-47aa-85b7-eb9c6e8288fe",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ffaa3330-ac4b-4186-96a7-298d6e774081",
      "documentation": "<p>Describes a platform version. Provides full details. Compare to <a>ListPlatformVersions</a>, which provides summary information about a list of platform versions.</p> <p>For definitions of platform version and other platform-related terms, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\">AWS Elastic Beanstalk Platforms Glossary</a>.</p>",
      "method": "get",
      "endpoint": "#Action=DescribePlatformVersion",
      "responses": [
        {
          "uuid": "12c60fd3-4496-4b33-b348-698a7c765262",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6fd1861c-356c-4a4b-88c9-1b4bc58e8c1b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55c1b064-55de-48bc-a207-074831a9f5fd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5777a193-8e1a-4c11-b181-47d5291db8c8",
      "documentation": "<p>Describes a platform version. Provides full details. Compare to <a>ListPlatformVersions</a>, which provides summary information about a list of platform versions.</p> <p>For definitions of platform version and other platform-related terms, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\">AWS Elastic Beanstalk Platforms Glossary</a>.</p>",
      "method": "post",
      "endpoint": "#Action=DescribePlatformVersion",
      "responses": [
        {
          "uuid": "9d3f7479-bb27-4f65-a373-66300488b1ba",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e94b82a1-64e2-401d-921a-eff8c05ba9bd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3397b7ef-de4d-4da4-9d24-c3652651af71",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f959865-dd73-41c4-9b0e-da35958e4ef7",
      "documentation": "Disassociate the operations role from an environment. After this call is made, Elastic Beanstalk uses the caller's permissions for permissions to downstream services during subsequent calls acting on this environment. For more information, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.",
      "method": "get",
      "endpoint": "#Action=DisassociateEnvironmentOperationsRole",
      "responses": [
        {
          "uuid": "51e86312-3109-429a-aa34-771a48360571",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c8f05315-38dc-4fec-b9ae-84f539f8272b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8d331bc-48b0-4015-9209-f4d490eaa959",
      "documentation": "Disassociate the operations role from an environment. After this call is made, Elastic Beanstalk uses the caller's permissions for permissions to downstream services during subsequent calls acting on this environment. For more information, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.",
      "method": "post",
      "endpoint": "#Action=DisassociateEnvironmentOperationsRole",
      "responses": [
        {
          "uuid": "10ca319d-de87-4ab7-ab60-4f861ca3168b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c0c938ad-c61a-4524-afb3-5990e547571f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d9e0d89c-0a76-4f10-b038-b906c8eace04",
      "documentation": "Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.",
      "method": "get",
      "endpoint": "#Action=ListAvailableSolutionStacks",
      "responses": [
        {
          "uuid": "25f43732-c1d9-4921-aae2-d8bb4e3ee6dd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c2ccdceb-cefb-4b46-925d-e2e21cdb1051",
      "documentation": "Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.",
      "method": "post",
      "endpoint": "#Action=ListAvailableSolutionStacks",
      "responses": [
        {
          "uuid": "bcc8c78c-45a0-4928-8e24-bab198bf4cc8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "251d31d7-b9e6-42e4-816b-decbeadeb93a",
      "documentation": "<p>Lists the platform branches available for your account in an AWS Region. Provides summary information about each platform branch.</p> <p>For definitions of platform branch and other platform-related terms, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\">AWS Elastic Beanstalk Platforms Glossary</a>.</p>",
      "method": "get",
      "endpoint": "#Action=ListPlatformBranches",
      "responses": [
        {
          "uuid": "81c1c514-092a-48b7-8d85-a4a94f559bdf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d4feb31f-7764-49d8-9f8f-6cb0301068e4",
      "documentation": "<p>Lists the platform branches available for your account in an AWS Region. Provides summary information about each platform branch.</p> <p>For definitions of platform branch and other platform-related terms, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\">AWS Elastic Beanstalk Platforms Glossary</a>.</p>",
      "method": "post",
      "endpoint": "#Action=ListPlatformBranches",
      "responses": [
        {
          "uuid": "dc63f93d-8710-41ba-b9d1-3cff3c16c5f8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "94e21c86-2f50-467c-9808-fa7e8d0d2fc1",
      "documentation": "<p>Lists the platform versions available for your account in an AWS Region. Provides summary information about each platform version. Compare to <a>DescribePlatformVersion</a>, which provides full details about a single platform version.</p> <p>For definitions of platform version and other platform-related terms, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\">AWS Elastic Beanstalk Platforms Glossary</a>.</p>",
      "method": "get",
      "endpoint": "#Action=ListPlatformVersions",
      "responses": [
        {
          "uuid": "13564a38-668b-4f07-a8e7-414aeeca57eb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3a3eea01-646f-4355-a8b7-5a2cf32ad0f6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6d44078-46e0-4cf7-bdd1-706f7bf94966",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c0699ba-d2e7-4dd3-a7d6-00d4215a2d16",
      "documentation": "<p>Lists the platform versions available for your account in an AWS Region. Provides summary information about each platform version. Compare to <a>DescribePlatformVersion</a>, which provides full details about a single platform version.</p> <p>For definitions of platform version and other platform-related terms, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-glossary.html\">AWS Elastic Beanstalk Platforms Glossary</a>.</p>",
      "method": "post",
      "endpoint": "#Action=ListPlatformVersions",
      "responses": [
        {
          "uuid": "476a8b8d-394e-4a17-8b70-f802abffc823",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d6d1f12e-d248-4fc9-8366-07ada23bd9b9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32a07dea-4855-4ee6-90ec-4956e21c7658",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ElasticBeanstalkServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "830bef42-13d2-4305-aaf4-a3cf64d34990",
      "documentation": "<p>Return the tags applied to an AWS Elastic Beanstalk resource. The response contains a list of tag key-value pairs.</p> <p>Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html\">Tagging Application Resources</a>.</p>",
      "method": "get",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "e932fc74-9d62-46de-a5c4-1740bb6c0662",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "090e1707-4ba8-45d6-bcbb-fd9dd2295a44",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "45669387-4899-49ca-91a7-4341462c06e8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61010808-7c62-4ecf-abbc-c2b1b73d520a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceTypeNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec013663-62a2-41e1-a34d-481ccb285f50",
      "documentation": "<p>Return the tags applied to an AWS Elastic Beanstalk resource. The response contains a list of tag key-value pairs.</p> <p>Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html\">Tagging Application Resources</a>.</p>",
      "method": "post",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "230cc41d-0e29-411d-8263-b60e63ea8b57",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "52f081ea-f471-4312-b1d0-87ef9caa81d1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1875a29-67b3-45d2-a425-9ad62737d171",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3181c20-dd35-4987-a14d-014f1e7f64cc",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceTypeNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ddfeafa2-634c-4447-9969-c2a9b6aff7e6",
      "documentation": "Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.",
      "method": "get",
      "endpoint": "#Action=RebuildEnvironment",
      "responses": [
        {
          "uuid": "c4446ab3-7a79-41ee-a12e-61848ed8e51f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "596bc5f5-3a7a-4658-ac78-648177b89549",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f13fef4e-ee0e-4337-acc6-bbde8f210a68",
      "documentation": "Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.",
      "method": "post",
      "endpoint": "#Action=RebuildEnvironment",
      "responses": [
        {
          "uuid": "e252ce64-da95-4c41-b127-146f1bd04490",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b1f68e7b-09a9-4729-a7ad-0d5b7c6b4379",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ce7c3e0-1124-451e-b7ac-bae97c52829b",
      "documentation": "<p>Initiates a request to compile the specified type of information of the deployed environment.</p> <p> Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. </p> <p> Setting the <code>InfoType</code> to <code>bundle</code> compresses the application server log files for every Amazon EC2 instance into a <code>.zip</code> file. Legacy and .NET containers do not support bundle logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of logs. </p> <p>Related Topics</p> <ul> <li> <p> <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>",
      "method": "get",
      "endpoint": "#Action=RequestEnvironmentInfo",
      "responses": [
        {
          "uuid": "a0c8ce93-fdf1-4c3f-97e4-018b5b9b640a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "92789a07-6476-47ee-b5a1-a5aeebc2abe5",
      "documentation": "<p>Initiates a request to compile the specified type of information of the deployed environment.</p> <p> Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. </p> <p> Setting the <code>InfoType</code> to <code>bundle</code> compresses the application server log files for every Amazon EC2 instance into a <code>.zip</code> file. Legacy and .NET containers do not support bundle logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of logs. </p> <p>Related Topics</p> <ul> <li> <p> <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>",
      "method": "post",
      "endpoint": "#Action=RequestEnvironmentInfo",
      "responses": [
        {
          "uuid": "53e42fc2-cc3c-470a-8e82-448c56dc82fd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "630f25e3-1aac-4ff7-a63f-1626a948303e",
      "documentation": "Causes the environment to restart the application container server running on each Amazon EC2 instance.",
      "method": "get",
      "endpoint": "#Action=RestartAppServer",
      "responses": [
        {
          "uuid": "988ea713-ef63-460e-bd63-d3e02427dc15",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a8de726-efdb-493f-9b51-8b83fcfcde1d",
      "documentation": "Causes the environment to restart the application container server running on each Amazon EC2 instance.",
      "method": "post",
      "endpoint": "#Action=RestartAppServer",
      "responses": [
        {
          "uuid": "3fced3e7-66d7-4904-a3cb-0082593b2c9f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "89f5da55-453e-474a-b19b-86ab3a676bd7",
      "documentation": "<p>Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul> <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>",
      "method": "get",
      "endpoint": "#Action=RetrieveEnvironmentInfo",
      "responses": [
        {
          "uuid": "b9b9ffea-a594-4efe-9825-974f83c850d0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d87d57b4-ed3a-4033-9439-841507280fd2",
      "documentation": "<p>Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul> <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>",
      "method": "post",
      "endpoint": "#Action=RetrieveEnvironmentInfo",
      "responses": [
        {
          "uuid": "b5c096e8-cb1f-4238-8e11-3ff50f7064be",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "def0491f-1554-4232-aa18-9042c818854a",
      "documentation": "Swaps the CNAMEs of two environments.",
      "method": "get",
      "endpoint": "#Action=SwapEnvironmentCNAMEs",
      "responses": [
        {
          "uuid": "c3b4bb8b-da5c-4989-85f0-439fcdd8ef93",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cdac08ba-47f9-4141-91aa-e7010031c535",
      "documentation": "Swaps the CNAMEs of two environments.",
      "method": "post",
      "endpoint": "#Action=SwapEnvironmentCNAMEs",
      "responses": [
        {
          "uuid": "5713b304-1853-40c0-9719-8b81ab36d953",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "00e7e44c-1157-4557-adff-9b24f261cd4f",
      "documentation": "Terminates the specified environment.",
      "method": "get",
      "endpoint": "#Action=TerminateEnvironment",
      "responses": [
        {
          "uuid": "a7c670fc-4a92-4b3f-b5b4-afb49c821046",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fb7672a8-d8b6-4f38-938c-71aec9d8b02e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5d4153a9-ef28-489c-8c30-29306f568768",
      "documentation": "Terminates the specified environment.",
      "method": "post",
      "endpoint": "#Action=TerminateEnvironment",
      "responses": [
        {
          "uuid": "90fa4328-6ea2-4cf1-a885-bedb720f7467",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4927d6e7-0eac-4b16-b289-7fdb76c72502",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "92a26e78-7358-46c8-822d-f61267d8b62e",
      "documentation": "<p>Updates the specified application to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear these properties, specify an empty string.</p> </note>",
      "method": "get",
      "endpoint": "#Action=UpdateApplication",
      "responses": [
        {
          "uuid": "39f4f0b6-8d81-4660-a8ea-b3c114523c01",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e47c3c7f-3278-4812-837a-fe104c3adea6",
      "documentation": "<p>Updates the specified application to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear these properties, specify an empty string.</p> </note>",
      "method": "post",
      "endpoint": "#Action=UpdateApplication",
      "responses": [
        {
          "uuid": "48e76803-aa04-41a4-b301-3fcb28872e28",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a113f42-0369-448f-98a0-4431d83950eb",
      "documentation": "Modifies lifecycle settings for an application.",
      "method": "get",
      "endpoint": "#Action=UpdateApplicationResourceLifecycle",
      "responses": [
        {
          "uuid": "2dc498c7-7f2b-4ef6-9807-6e83d5cd1257",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9f0d4285-d9d0-4434-a0eb-5e84e75f2930",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4f0591c-5ce8-40fe-a2b2-2495459d2b29",
      "documentation": "Modifies lifecycle settings for an application.",
      "method": "post",
      "endpoint": "#Action=UpdateApplicationResourceLifecycle",
      "responses": [
        {
          "uuid": "bbabb6b6-8145-4d8e-817c-2bcc7ab33ffc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ebbf85e-aef0-4056-b14f-163d52f187c5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c93e4748-699b-4a66-ab7a-7b428614a7c3",
      "documentation": "<p>Updates the specified application version to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear properties, specify an empty string.</p> </note>",
      "method": "get",
      "endpoint": "#Action=UpdateApplicationVersion",
      "responses": [
        {
          "uuid": "4f830cd3-e590-4662-af2b-4b30ff4c1e38",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "93c266ae-d8cb-4a0c-9866-6d82c3e3c498",
      "documentation": "<p>Updates the specified application version to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear properties, specify an empty string.</p> </note>",
      "method": "post",
      "endpoint": "#Action=UpdateApplicationVersion",
      "responses": [
        {
          "uuid": "5c6d6bc8-fc3c-41f8-af4d-035a9d15c6a2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "228974df-7ba8-4afc-a859-4b5e4c2fd188",
      "documentation": "<p>Updates the specified configuration template to have the specified properties or configuration option values.</p> <note> <p>If a property (for example, <code>ApplicationName</code>) is not provided, its value remains unchanged. To clear such properties, specify an empty string.</p> </note> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> </ul>",
      "method": "get",
      "endpoint": "#Action=UpdateConfigurationTemplate",
      "responses": [
        {
          "uuid": "c138cf2c-9781-4fe9-9ef9-4c4061a92587",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dc594963-7327-42e5-97d7-9aa9c38b7ea3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "609ec607-ad5c-46f1-b75d-f9f1611f68d5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e1bae198-d4e0-45cd-baa1-0d372c41b771",
      "documentation": "<p>Updates the specified configuration template to have the specified properties or configuration option values.</p> <note> <p>If a property (for example, <code>ApplicationName</code>) is not provided, its value remains unchanged. To clear such properties, specify an empty string.</p> </note> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> </ul>",
      "method": "post",
      "endpoint": "#Action=UpdateConfigurationTemplate",
      "responses": [
        {
          "uuid": "367519f5-3dfa-4c54-8242-3ca8b129f19d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e63304b2-7838-4ed6-b189-0c48dfe5d8ce",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "344759c8-3bc5-4e7b-a1e8-753b081af9ec",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1d209016-1419-4736-9e66-a5b84d5b6507",
      "documentation": "<p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>",
      "method": "get",
      "endpoint": "#Action=UpdateEnvironment",
      "responses": [
        {
          "uuid": "cb8ed93a-fe73-4741-af70-902247d329ba",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4891169d-0acd-4bf0-a56a-287b467b2a87",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "83f0dde7-2458-4b03-aa99-a4bc24f34d7e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4046f942-2c45-4983-aab0-71f24903ee40",
      "documentation": "<p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>",
      "method": "post",
      "endpoint": "#Action=UpdateEnvironment",
      "responses": [
        {
          "uuid": "f5f2ac56-2b81-404c-915a-e918fc337923",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a27f4612-211f-4fc5-95c3-6fca996ad093",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6aa1bdfd-f7b4-415c-97eb-70fbe651c482",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4556dd15-93d7-4f23-8fad-db8bd9570be1",
      "documentation": "<p>Update the list of tags applied to an AWS Elastic Beanstalk resource. Two lists can be passed: <code>TagsToAdd</code> for tags to add or update, and <code>TagsToRemove</code>.</p> <p>Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html\">Tagging Application Resources</a>.</p> <p>If you create a custom IAM user policy to control permission to this operation, specify one of the following two virtual actions (or both) instead of the API operation name:</p> <dl> <dt>elasticbeanstalk:AddTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tags to add in the <code>TagsToAdd</code> parameter.</p> </dd> <dt>elasticbeanstalk:RemoveTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tag keys to remove in the <code>TagsToRemove</code> parameter.</p> </dd> </dl> <p>For details about creating a custom user policy, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies\">Creating a Custom User Policy</a>.</p>",
      "method": "get",
      "endpoint": "#Action=UpdateTagsForResource",
      "responses": [
        {
          "uuid": "7d4146d0-7122-4cc4-bac7-6fadb7774336",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba9aa986-92b5-4a10-a3e0-ca3790dd73cd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "18bbe15a-04d2-44e5-b9ee-deb8f688fcb4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91478398-7934-4f2a-bb50-cf07466c34dc",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c56da08-ef1e-483e-a772-57f5ff99695c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6feabf69-8602-4599-8680-e04b20936892",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceTypeNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d540e91-2ccd-4343-80a0-6874c64a5680",
      "documentation": "<p>Update the list of tags applied to an AWS Elastic Beanstalk resource. Two lists can be passed: <code>TagsToAdd</code> for tags to add or update, and <code>TagsToRemove</code>.</p> <p>Elastic Beanstalk supports tagging of all of its resources. For details about resource tagging, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-tagging-resources.html\">Tagging Application Resources</a>.</p> <p>If you create a custom IAM user policy to control permission to this operation, specify one of the following two virtual actions (or both) instead of the API operation name:</p> <dl> <dt>elasticbeanstalk:AddTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tags to add in the <code>TagsToAdd</code> parameter.</p> </dd> <dt>elasticbeanstalk:RemoveTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tag keys to remove in the <code>TagsToRemove</code> parameter.</p> </dd> </dl> <p>For details about creating a custom user policy, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies\">Creating a Custom User Policy</a>.</p>",
      "method": "post",
      "endpoint": "#Action=UpdateTagsForResource",
      "responses": [
        {
          "uuid": "9dae84ca-e830-4390-9e15-75cf54c47d32",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1a28e5a1-cb16-4adc-a758-955d5ad8efd9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81a8de23-84ee-4a81-a5c5-e9c268d90bf5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d963108-6371-4bbe-93be-a2122b81f51d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "43fc0cd4-a83a-47dc-8416-0c3c75d6cf27",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "815144f6-22e4-4aef-8cd4-e36f71e4e3fb",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceTypeNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a66ed423-b30f-467c-9afb-5888b02d4856",
      "documentation": "<p>Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.</p> <p>This action returns a list of messages indicating any errors or warnings associated with the selection of option values.</p>",
      "method": "get",
      "endpoint": "#Action=ValidateConfigurationSettings",
      "responses": [
        {
          "uuid": "a43f81f5-4d66-43a3-8504-bf92e4609374",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1004dd29-33b9-4c45-932f-dd101d175aa8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c6946bf-e50e-49f0-a612-1bb74563333e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "490bae35-45e3-45bf-96c7-7060f0629b41",
      "documentation": "<p>Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.</p> <p>This action returns a list of messages indicating any errors or warnings associated with the selection of option values.</p>",
      "method": "post",
      "endpoint": "#Action=ValidateConfigurationSettings",
      "responses": [
        {
          "uuid": "7edeed78-205a-415e-bde5-095154ec97ea",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e60809a0-ba88-465d-aa94-1531dbcc39a7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InsufficientPrivilegesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2c7f2521-cfbc-490f-aa70-72bb84303aa5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyBucketsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}