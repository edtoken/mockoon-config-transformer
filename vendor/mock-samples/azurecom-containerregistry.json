{
  "uuid": "1da6c966-6182-4407-9b4d-14ff53c78a75",
  "lastMigration": 24,
  "name": "ContainerRegistryManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "ff017b84-f6b7-4462-bfe1-d507973c497e",
      "documentation": "Lists all of the available Azure Container Registry REST API operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.ContainerRegistry/operations",
      "responses": [
        {
          "uuid": "759eec70-adf7-4613-85db-bc20cdcc054a",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\",\n      \"origin\": \"\",\n      \"properties\": {\n        \"serviceSpecification\": {\n          \"metricSpecifications\": [\n            {\n              \"aggregationType\": \"\",\n              \"displayDescription\": \"\",\n              \"displayName\": \"\",\n              \"internalMetricName\": \"\",\n              \"name\": \"\",\n              \"unit\": \"\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6f99b508-c0ac-4552-b68e-6cc260e556e8",
      "documentation": "Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.ContainerRegistry/checkNameAvailability",
      "responses": [
        {
          "uuid": "20ad1d88-033c-4cc2-89be-c80063dfd485",
          "body": "{\n  \"message\": \"\",\n  \"nameAvailable\": {{faker 'datatype.boolean'}},\n  \"reason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6f9496d-2d39-426a-9e39-957fd4dccb86",
      "documentation": "Lists all the container registries under the specified subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.ContainerRegistry/registries",
      "responses": [
        {
          "uuid": "d3e00866-8ac4-4b1f-b26a-92188cf56706",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "374f7124-b5ff-4943-8c93-32986aced4dd",
      "documentation": "Lists all the container registries under the specified resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries",
      "responses": [
        {
          "uuid": "5c946f97-6a5c-4243-bf9c-1864558ba009",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03528389-1360-4bb2-9fd7-3a7e287767d6",
      "documentation": "Deletes a container registry.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName",
      "responses": [
        {
          "uuid": "f324a959-a724-4635-b495-cc805db9e656",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "679292f7-d403-4876-b3ee-fef14a3f78ff",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc711cf6-fb1d-4b45-97ea-c6096ffae988",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The container registry does not exist in the subscription.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d5e96f80-b6ad-477a-8e57-98ba0ac00562",
      "documentation": "Gets the properties of the specified container registry.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName",
      "responses": [
        {
          "uuid": "59020f7f-1163-4803-8b7e-f3f4a41bc0db",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "36729e2f-3318-4ee2-851e-46d4528914e0",
      "documentation": "Updates a container registry with the specified parameters.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName",
      "responses": [
        {
          "uuid": "56e5549b-2673-4621-8519-0e45f2b0db34",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "77576175-606d-441c-b00a-02b18853143c",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd9c9c0a-4ea5-457e-9a4c-9a623c5e6470",
      "documentation": "Creates a container registry with the specified parameters.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName",
      "responses": [
        {
          "uuid": "e556947f-edfc-49d8-8b26-1b4ffcde0e24",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6edd15ec-3b9a-4975-9f4c-714cf674eeea",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "57bda7d5-969c-46a3-bfb3-323a5089c4b8",
      "documentation": "Copies an image to this container registry from the specified container registry.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/importImage",
      "responses": [
        {
          "uuid": "d10a9899-c79b-442b-add8-7f2b484cb64d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the operation has completed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bda27725-4200-46ae-b379-b07209b2f8ae",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d139353a-7e6d-4300-af9f-54ff6827a282",
      "documentation": "Lists the login credentials for the specified container registry.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/listCredentials",
      "responses": [
        {
          "uuid": "3045f4ef-5a20-453e-aa98-0a4730e1d840",
          "body": "{\n  \"passwords\": [\n    {\n      \"name\": \"{{oneOf (array 'password' 'password2')}}\",\n      \"value\": \"\"\n    }\n  ],\n  \"username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the list of credentials retrieved and returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9b6a6e9-cba1-41b8-ab64-38f19f5a9c8c",
      "documentation": "Gets the quota usages for the specified container registry.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/listUsages",
      "responses": [
        {
          "uuid": "a8803d58-bfc8-4f9d-b611-fb8aefa4b388",
          "body": "{\n  \"value\": [\n    {\n      \"currentValue\": {{faker 'datatype.number'}},\n      \"limit\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"unit\": \"{{oneOf (array 'Count' 'Bytes')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the registry usages retrieved and returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4963b60-806f-44be-b75e-366c9e55d8ed",
      "documentation": "Regenerates one of the login credentials for the specified container registry.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/regenerateCredential",
      "responses": [
        {
          "uuid": "2d10c6c8-1911-4d66-bcd7-f45ef3faa91f",
          "body": "{\n  \"passwords\": [\n    {\n      \"name\": \"{{oneOf (array 'password' 'password2')}}\",\n      \"value\": \"\"\n    }\n  ],\n  \"username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the specified credential regenerated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c4ade09-a9e1-4d58-9f88-1ece14bc3e18",
      "documentation": "Lists all the replications for the specified container registry.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications",
      "responses": [
        {
          "uuid": "6c01aac8-3a9e-4f7f-b628-08a060900f41",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7266890d-eb60-4fae-9aa7-b6fc53148e1f",
      "documentation": "Deletes a replication from a container registry.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications/:replicationName",
      "responses": [
        {
          "uuid": "96323e70-8a60-436a-b42a-ae4782111b69",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c0133aab-c6cf-4e72-be50-8621319204b9",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34a70e2c-df32-4a37-a303-a49d20a7a689",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The replication does not exist in the subscription.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "13cfc8fb-2928-40a9-9daa-3fd2ffcea5b7",
      "documentation": "Gets the properties of the specified replication.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications/:replicationName",
      "responses": [
        {
          "uuid": "bb1d6b75-4853-4065-a74b-957e349a7b98",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c83c0223-37df-4494-863b-77bd7764cd3f",
      "documentation": "Updates a replication for a container registry with the specified parameters.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications/:replicationName",
      "responses": [
        {
          "uuid": "2e88a02e-2858-4c0c-9cc4-6334a3500822",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b445c3bf-61b5-4fa3-bc39-24c598a81b24",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5bdf6b83-f9f9-4c14-9634-4576b407d358",
      "documentation": "Creates a replication for a container registry with the specified parameters.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications/:replicationName",
      "responses": [
        {
          "uuid": "7f07c780-acbb-44a6-99f8-17060cfe761d",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a2655ddf-6fe0-487c-bf72-a6193f7a3d8e",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56785add-2284-487f-8dea-e32256c40a63",
      "documentation": "Lists all the webhooks for the specified container registry.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks",
      "responses": [
        {
          "uuid": "f5fe4fc0-9881-432a-9f73-07f2ce8d0f2a",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8773339b-ebfb-466f-8e1e-4265321b1fb1",
      "documentation": "Deletes a webhook from a container registry.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName",
      "responses": [
        {
          "uuid": "86eda120-7105-4316-88b0-82fde97a8b24",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7458ba43-8b71-487e-9054-f7572fd2ca71",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78dd971d-7c24-460e-b015-fbd66435fc43",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The webhook does not exist in the subscription.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16540028-8211-4094-aa22-0feebd147723",
      "documentation": "Gets the properties of the specified webhook.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName",
      "responses": [
        {
          "uuid": "b2a05414-1f2a-48a1-8a4b-75a225b18f37",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6dcf244-27dc-43df-a161-cfff55ddde3d",
      "documentation": "Updates a webhook with the specified parameters.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName",
      "responses": [
        {
          "uuid": "0a9aa158-facf-4f44-aa51-e839cbe8a7eb",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7a5beb5d-4ca2-4c84-962b-40768273a2e5",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c87c8c08-c999-4eef-91d6-d9a9959a17bd",
      "documentation": "Creates a webhook for a container registry with the specified parameters.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName",
      "responses": [
        {
          "uuid": "a602b1e7-238e-4399-9500-f0403e62cab7",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f540f9f9-7b09-43c9-a0fa-6999c0920f27",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1afa7b0-f6d4-4ff3-a2de-f622c86a5df1",
      "documentation": "Gets the configuration of service URI and custom headers for the webhook.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName/getCallbackConfig",
      "responses": [
        {
          "uuid": "6a4add7c-43ec-41f2-891c-5686e0ecc31b",
          "body": "{\n  \"customHeaders\": {},\n  \"serviceUri\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d8355e3-71ca-43c2-83b8-58f87dc9775e",
      "documentation": "Lists recent events for the specified webhook.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName/listEvents",
      "responses": [
        {
          "uuid": "40a2e866-ccdc-4b37-baa8-a6fb83d25fb2",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd17a343-3adb-4446-aed9-ffdfed7810b0",
      "documentation": "Triggers a ping event to be sent to the webhook.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName/ping",
      "responses": [
        {
          "uuid": "211a2a90-1283-4b6c-bef8-a8cfc0271342",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}