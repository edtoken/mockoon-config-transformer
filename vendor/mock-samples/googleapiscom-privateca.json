{
  "uuid": "deb467bd-f7a6-4a17-b83c-72663eaf0d45",
  "lastMigration": 24,
  "name": "Certificate Authority API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "036a1291-da6b-477e-ad48-86699f455286",
      "documentation": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "74e412a8-f259-4546-acc5-c6cefb2dc34b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01525965-7534-4daa-833f-bd7ea1a18672",
      "documentation": "Returns a ReusableConfig.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "6e7de78b-ee1d-4c0f-b6d3-004758bd5ecd",
          "body": "{\n  \"createTime\": \"\",\n  \"description\": \"\",\n  \"labels\": {},\n  \"name\": \"\",\n  \"updateTime\": \"\",\n  \"values\": {\n    \"additionalExtensions\": [\n      {\n        \"critical\": {{faker 'datatype.boolean'}},\n        \"objectId\": {\n          \"objectIdPath\": [\n            {{faker 'datatype.number'}}\n          ]\n        },\n        \"value\": \"\"\n      }\n    ],\n    \"aiaOcspServers\": [\n      \"\"\n    ],\n    \"caOptions\": {\n      \"isCa\": {{faker 'datatype.boolean'}},\n      \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n    },\n    \"keyUsage\": {\n      \"baseKeyUsage\": {\n        \"certSign\": {{faker 'datatype.boolean'}},\n        \"contentCommitment\": {{faker 'datatype.boolean'}},\n        \"crlSign\": {{faker 'datatype.boolean'}},\n        \"dataEncipherment\": {{faker 'datatype.boolean'}},\n        \"decipherOnly\": {{faker 'datatype.boolean'}},\n        \"digitalSignature\": {{faker 'datatype.boolean'}},\n        \"encipherOnly\": {{faker 'datatype.boolean'}},\n        \"keyAgreement\": {{faker 'datatype.boolean'}},\n        \"keyEncipherment\": {{faker 'datatype.boolean'}}\n      },\n      \"extendedKeyUsage\": {\n        \"clientAuth\": {{faker 'datatype.boolean'}},\n        \"codeSigning\": {{faker 'datatype.boolean'}},\n        \"emailProtection\": {{faker 'datatype.boolean'}},\n        \"ocspSigning\": {{faker 'datatype.boolean'}},\n        \"serverAuth\": {{faker 'datatype.boolean'}},\n        \"timeStamping\": {{faker 'datatype.boolean'}}\n      },\n      \"unknownExtendedKeyUsages\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'datatype.number'}}\n          ]\n        }\n      ]\n    },\n    \"policyIds\": [\n      {\n        \"objectIdPath\": [\n          {{faker 'datatype.number'}}\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "064c2a86-5caf-439b-ad44-51dc659eca5d",
      "documentation": "Update a Certificate. Currently, the only field you can update is the labels field.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "1809e2a3-e32c-4004-918f-3bd8858c1382",
          "body": "{\n  \"certificateDescription\": {\n    \"aiaIssuingCertificateUrls\": [\n      \"\"\n    ],\n    \"authorityKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"certFingerprint\": {\n      \"sha256Hash\": \"\"\n    },\n    \"configValues\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'datatype.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'datatype.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'datatype.boolean'}},\n          \"contentCommitment\": {{faker 'datatype.boolean'}},\n          \"crlSign\": {{faker 'datatype.boolean'}},\n          \"dataEncipherment\": {{faker 'datatype.boolean'}},\n          \"decipherOnly\": {{faker 'datatype.boolean'}},\n          \"digitalSignature\": {{faker 'datatype.boolean'}},\n          \"encipherOnly\": {{faker 'datatype.boolean'}},\n          \"keyAgreement\": {{faker 'datatype.boolean'}},\n          \"keyEncipherment\": {{faker 'datatype.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'datatype.boolean'}},\n          \"codeSigning\": {{faker 'datatype.boolean'}},\n          \"emailProtection\": {{faker 'datatype.boolean'}},\n          \"ocspSigning\": {{faker 'datatype.boolean'}},\n          \"serverAuth\": {{faker 'datatype.boolean'}},\n          \"timeStamping\": {{faker 'datatype.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'datatype.number'}}\n          ]\n        }\n      ]\n    },\n    \"crlDistributionPoints\": [\n      \"\"\n    ],\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"subjectDescription\": {\n      \"commonName\": \"\",\n      \"hexSerialNumber\": \"\",\n      \"lifetime\": \"\",\n      \"notAfterTime\": \"\",\n      \"notBeforeTime\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"subjectKeyId\": {\n      \"keyId\": \"\"\n    }\n  },\n  \"config\": {\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"reusableConfig\": {\n      \"reusableConfig\": \"\",\n      \"reusableConfigValues\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'datatype.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'datatype.boolean'}},\n            \"contentCommitment\": {{faker 'datatype.boolean'}},\n            \"crlSign\": {{faker 'datatype.boolean'}},\n            \"dataEncipherment\": {{faker 'datatype.boolean'}},\n            \"decipherOnly\": {{faker 'datatype.boolean'}},\n            \"digitalSignature\": {{faker 'datatype.boolean'}},\n            \"encipherOnly\": {{faker 'datatype.boolean'}},\n            \"keyAgreement\": {{faker 'datatype.boolean'}},\n            \"keyEncipherment\": {{faker 'datatype.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'datatype.boolean'}},\n            \"codeSigning\": {{faker 'datatype.boolean'}},\n            \"emailProtection\": {{faker 'datatype.boolean'}},\n            \"ocspSigning\": {{faker 'datatype.boolean'}},\n            \"serverAuth\": {{faker 'datatype.boolean'}},\n            \"timeStamping\": {{faker 'datatype.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          }\n        ]\n      }\n    },\n    \"subjectConfig\": {\n      \"commonName\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    }\n  },\n  \"createTime\": \"\",\n  \"labels\": {},\n  \"lifetime\": \"\",\n  \"name\": \"\",\n  \"pemCertificate\": \"\",\n  \"pemCertificateChain\": [\n    \"\"\n  ],\n  \"pemCsr\": \"\",\n  \"revocationDetails\": {\n    \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n    \"revocationTime\": \"\"\n  },\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6638eed-d3e0-439d-bdb8-a857bf98f23c",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta1/:name/locations",
      "responses": [
        {
          "uuid": "0a566f16-2911-4fd3-856f-5916f4fba2de",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d37f02e8-ae15-4666-8d35-0af4383d57d5",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1beta1/:name/operations",
      "responses": [
        {
          "uuid": "5160424d-5971-48d3-a0aa-331b0f830cc2",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'datatype.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5b0b7076-90d9-4ce7-b91e-daa9fe01100d",
      "documentation": "Activate a CertificateAuthority that is in state PENDING_ACTIVATION and is of type SUBORDINATE. After the parent Certificate Authority signs a certificate signing request from FetchCertificateAuthorityCsr, this method can complete the activation process.",
      "method": "post",
      "endpoint": "v1beta1/:name:activate",
      "responses": [
        {
          "uuid": "96b3e013-1098-481c-93ed-3f1e0f3a26ff",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "188e3c4a-7782-4c3f-8fbb-3f02037a30e3",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "397babf3-ac6b-42aa-830f-84cde4f56005",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "976c6655-7bfe-487f-992f-e19ec2b9765d",
      "documentation": "Disable a CertificateAuthority.",
      "method": "post",
      "endpoint": "v1beta1/:name:disable",
      "responses": [
        {
          "uuid": "29c7d19d-8239-48be-84db-7616e5cf6f68",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e6cf4913-1dff-4a4a-8747-a4bbff8d333c",
      "documentation": "Enable a CertificateAuthority.",
      "method": "post",
      "endpoint": "v1beta1/:name:enable",
      "responses": [
        {
          "uuid": "5fb34205-4f89-4d41-b9e9-aa430c2a665b",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "df4acb6a-7853-4e09-8a24-25000646e960",
      "documentation": "Fetch a certificate signing request (CSR) from a CertificateAuthority that is in state PENDING_ACTIVATION and is of type SUBORDINATE. The CSR must then be signed by the desired parent Certificate Authority, which could be another CertificateAuthority resource, or could be an on-prem certificate authority. See also ActivateCertificateAuthority.",
      "method": "get",
      "endpoint": "v1beta1/:name:fetch",
      "responses": [
        {
          "uuid": "43fdf15c-3999-4e43-bc85-4799c329f9e0",
          "body": "{\n  \"pemCsr\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3cb478b-fbaf-4934-9292-ab83b2d0286f",
      "documentation": "Restore a CertificateAuthority that is scheduled for deletion.",
      "method": "post",
      "endpoint": "v1beta1/:name:restore",
      "responses": [
        {
          "uuid": "2193679b-4b0c-4b3d-aed9-b2808f722a51",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "15b0e721-3924-420b-8199-3e00dc6a43e0",
      "documentation": "Revoke a Certificate.",
      "method": "post",
      "endpoint": "v1beta1/:name:revoke",
      "responses": [
        {
          "uuid": "4d37850b-2c9a-406f-ba9f-e6eb17cce410",
          "body": "{\n  \"certificateDescription\": {\n    \"aiaIssuingCertificateUrls\": [\n      \"\"\n    ],\n    \"authorityKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"certFingerprint\": {\n      \"sha256Hash\": \"\"\n    },\n    \"configValues\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'datatype.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'datatype.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'datatype.boolean'}},\n          \"contentCommitment\": {{faker 'datatype.boolean'}},\n          \"crlSign\": {{faker 'datatype.boolean'}},\n          \"dataEncipherment\": {{faker 'datatype.boolean'}},\n          \"decipherOnly\": {{faker 'datatype.boolean'}},\n          \"digitalSignature\": {{faker 'datatype.boolean'}},\n          \"encipherOnly\": {{faker 'datatype.boolean'}},\n          \"keyAgreement\": {{faker 'datatype.boolean'}},\n          \"keyEncipherment\": {{faker 'datatype.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'datatype.boolean'}},\n          \"codeSigning\": {{faker 'datatype.boolean'}},\n          \"emailProtection\": {{faker 'datatype.boolean'}},\n          \"ocspSigning\": {{faker 'datatype.boolean'}},\n          \"serverAuth\": {{faker 'datatype.boolean'}},\n          \"timeStamping\": {{faker 'datatype.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'datatype.number'}}\n          ]\n        }\n      ]\n    },\n    \"crlDistributionPoints\": [\n      \"\"\n    ],\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"subjectDescription\": {\n      \"commonName\": \"\",\n      \"hexSerialNumber\": \"\",\n      \"lifetime\": \"\",\n      \"notAfterTime\": \"\",\n      \"notBeforeTime\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"subjectKeyId\": {\n      \"keyId\": \"\"\n    }\n  },\n  \"config\": {\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"reusableConfig\": {\n      \"reusableConfig\": \"\",\n      \"reusableConfigValues\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'datatype.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'datatype.boolean'}},\n            \"contentCommitment\": {{faker 'datatype.boolean'}},\n            \"crlSign\": {{faker 'datatype.boolean'}},\n            \"dataEncipherment\": {{faker 'datatype.boolean'}},\n            \"decipherOnly\": {{faker 'datatype.boolean'}},\n            \"digitalSignature\": {{faker 'datatype.boolean'}},\n            \"encipherOnly\": {{faker 'datatype.boolean'}},\n            \"keyAgreement\": {{faker 'datatype.boolean'}},\n            \"keyEncipherment\": {{faker 'datatype.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'datatype.boolean'}},\n            \"codeSigning\": {{faker 'datatype.boolean'}},\n            \"emailProtection\": {{faker 'datatype.boolean'}},\n            \"ocspSigning\": {{faker 'datatype.boolean'}},\n            \"serverAuth\": {{faker 'datatype.boolean'}},\n            \"timeStamping\": {{faker 'datatype.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          }\n        ]\n      }\n    },\n    \"subjectConfig\": {\n      \"commonName\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    }\n  },\n  \"createTime\": \"\",\n  \"labels\": {},\n  \"lifetime\": \"\",\n  \"name\": \"\",\n  \"pemCertificate\": \"\",\n  \"pemCertificateChain\": [\n    \"\"\n  ],\n  \"pemCsr\": \"\",\n  \"revocationDetails\": {\n    \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n    \"revocationTime\": \"\"\n  },\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa0a7da2-e288-4455-9422-93683bdf6a26",
      "documentation": "Schedule a CertificateAuthority for deletion.",
      "method": "post",
      "endpoint": "v1beta1/:name:scheduleDelete",
      "responses": [
        {
          "uuid": "153c3512-da33-4f19-8cf8-57abfc42d478",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bc782790-a0b4-4db4-82bb-3d5f39387665",
      "documentation": "Lists CertificateAuthorities.",
      "method": "get",
      "endpoint": "v1beta1/:parent/certificateAuthorities",
      "responses": [
        {
          "uuid": "c1f33394-9644-4579-a9b3-eff3fa9a72b5",
          "body": "{\n  \"certificateAuthorities\": [\n    {\n      \"accessUrls\": {\n        \"caCertificateAccessUrl\": \"\",\n        \"crlAccessUrl\": \"\"\n      },\n      \"caCertificateDescriptions\": [\n        {\n          \"aiaIssuingCertificateUrls\": [\n            \"\"\n          ],\n          \"authorityKeyId\": {\n            \"keyId\": \"\"\n          },\n          \"certFingerprint\": {\n            \"sha256Hash\": \"\"\n          },\n          \"configValues\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'datatype.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'datatype.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'datatype.boolean'}},\n                \"contentCommitment\": {{faker 'datatype.boolean'}},\n                \"crlSign\": {{faker 'datatype.boolean'}},\n                \"dataEncipherment\": {{faker 'datatype.boolean'}},\n                \"decipherOnly\": {{faker 'datatype.boolean'}},\n                \"digitalSignature\": {{faker 'datatype.boolean'}},\n                \"encipherOnly\": {{faker 'datatype.boolean'}},\n                \"keyAgreement\": {{faker 'datatype.boolean'}},\n                \"keyEncipherment\": {{faker 'datatype.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'datatype.boolean'}},\n                \"codeSigning\": {{faker 'datatype.boolean'}},\n                \"emailProtection\": {{faker 'datatype.boolean'}},\n                \"ocspSigning\": {{faker 'datatype.boolean'}},\n                \"serverAuth\": {{faker 'datatype.boolean'}},\n                \"timeStamping\": {{faker 'datatype.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'datatype.number'}}\n                ]\n              }\n            ]\n          },\n          \"crlDistributionPoints\": [\n            \"\"\n          ],\n          \"publicKey\": {\n            \"key\": \"\",\n            \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n          },\n          \"subjectDescription\": {\n            \"commonName\": \"\",\n            \"hexSerialNumber\": \"\",\n            \"lifetime\": \"\",\n            \"notAfterTime\": \"\",\n            \"notBeforeTime\": \"\",\n            \"subject\": {\n              \"countryCode\": \"\",\n              \"locality\": \"\",\n              \"organization\": \"\",\n              \"organizationalUnit\": \"\",\n              \"postalCode\": \"\",\n              \"province\": \"\",\n              \"streetAddress\": \"\"\n            },\n            \"subjectAltName\": {\n              \"customSans\": [\n                {\n                  \"critical\": {{faker 'datatype.boolean'}},\n                  \"objectId\": {\n                    \"objectIdPath\": [\n                      {{faker 'datatype.number'}}\n                    ]\n                  },\n                  \"value\": \"\"\n                }\n              ],\n              \"dnsNames\": [\n                \"\"\n              ],\n              \"emailAddresses\": [\n                \"\"\n              ],\n              \"ipAddresses\": [\n                \"\"\n              ],\n              \"uris\": [\n                \"\"\n              ]\n            }\n          },\n          \"subjectKeyId\": {\n            \"keyId\": \"\"\n          }\n        }\n      ],\n      \"certificatePolicy\": {\n        \"allowedCommonNames\": [\n          \"\"\n        ],\n        \"allowedConfigList\": {\n          \"allowedConfigValues\": [\n            {\n              \"reusableConfig\": \"\",\n              \"reusableConfigValues\": {\n                \"additionalExtensions\": [\n                  {\n                    \"critical\": {{faker 'datatype.boolean'}},\n                    \"objectId\": {\n                      \"objectIdPath\": [\n                        {{faker 'datatype.number'}}\n                      ]\n                    },\n                    \"value\": \"\"\n                  }\n                ],\n                \"aiaOcspServers\": [\n                  \"\"\n                ],\n                \"caOptions\": {\n                  \"isCa\": {{faker 'datatype.boolean'}},\n                  \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n                },\n                \"keyUsage\": {\n                  \"baseKeyUsage\": {\n                    \"certSign\": {{faker 'datatype.boolean'}},\n                    \"contentCommitment\": {{faker 'datatype.boolean'}},\n                    \"crlSign\": {{faker 'datatype.boolean'}},\n                    \"dataEncipherment\": {{faker 'datatype.boolean'}},\n                    \"decipherOnly\": {{faker 'datatype.boolean'}},\n                    \"digitalSignature\": {{faker 'datatype.boolean'}},\n                    \"encipherOnly\": {{faker 'datatype.boolean'}},\n                    \"keyAgreement\": {{faker 'datatype.boolean'}},\n                    \"keyEncipherment\": {{faker 'datatype.boolean'}}\n                  },\n                  \"extendedKeyUsage\": {\n                    \"clientAuth\": {{faker 'datatype.boolean'}},\n                    \"codeSigning\": {{faker 'datatype.boolean'}},\n                    \"emailProtection\": {{faker 'datatype.boolean'}},\n                    \"ocspSigning\": {{faker 'datatype.boolean'}},\n                    \"serverAuth\": {{faker 'datatype.boolean'}},\n                    \"timeStamping\": {{faker 'datatype.boolean'}}\n                  },\n                  \"unknownExtendedKeyUsages\": [\n                    {\n                      \"objectIdPath\": [\n                        {{faker 'datatype.number'}}\n                      ]\n                    }\n                  ]\n                },\n                \"policyIds\": [\n                  {\n                    \"objectIdPath\": [\n                      {{faker 'datatype.number'}}\n                    ]\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"allowedIssuanceModes\": {\n          \"allowConfigBasedIssuance\": {{faker 'datatype.boolean'}},\n          \"allowCsrBasedIssuance\": {{faker 'datatype.boolean'}}\n        },\n        \"allowedLocationsAndOrganizations\": [\n          {\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          }\n        ],\n        \"allowedSans\": {\n          \"allowCustomSans\": {{faker 'datatype.boolean'}},\n          \"allowGlobbingDnsWildcards\": {{faker 'datatype.boolean'}},\n          \"allowedDnsNames\": [\n            \"\"\n          ],\n          \"allowedEmailAddresses\": [\n            \"\"\n          ],\n          \"allowedIps\": [\n            \"\"\n          ],\n          \"allowedUris\": [\n            \"\"\n          ]\n        },\n        \"maximumLifetime\": \"\",\n        \"overwriteConfigValues\": {\n          \"reusableConfig\": \"\",\n          \"reusableConfigValues\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'datatype.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'datatype.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'datatype.boolean'}},\n                \"contentCommitment\": {{faker 'datatype.boolean'}},\n                \"crlSign\": {{faker 'datatype.boolean'}},\n                \"dataEncipherment\": {{faker 'datatype.boolean'}},\n                \"decipherOnly\": {{faker 'datatype.boolean'}},\n                \"digitalSignature\": {{faker 'datatype.boolean'}},\n                \"encipherOnly\": {{faker 'datatype.boolean'}},\n                \"keyAgreement\": {{faker 'datatype.boolean'}},\n                \"keyEncipherment\": {{faker 'datatype.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'datatype.boolean'}},\n                \"codeSigning\": {{faker 'datatype.boolean'}},\n                \"emailProtection\": {{faker 'datatype.boolean'}},\n                \"ocspSigning\": {{faker 'datatype.boolean'}},\n                \"serverAuth\": {{faker 'datatype.boolean'}},\n                \"timeStamping\": {{faker 'datatype.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'datatype.number'}}\n                ]\n              }\n            ]\n          }\n        }\n      },\n      \"config\": {\n        \"publicKey\": {\n          \"key\": \"\",\n          \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n        },\n        \"reusableConfig\": {\n          \"reusableConfig\": \"\",\n          \"reusableConfigValues\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'datatype.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'datatype.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'datatype.boolean'}},\n                \"contentCommitment\": {{faker 'datatype.boolean'}},\n                \"crlSign\": {{faker 'datatype.boolean'}},\n                \"dataEncipherment\": {{faker 'datatype.boolean'}},\n                \"decipherOnly\": {{faker 'datatype.boolean'}},\n                \"digitalSignature\": {{faker 'datatype.boolean'}},\n                \"encipherOnly\": {{faker 'datatype.boolean'}},\n                \"keyAgreement\": {{faker 'datatype.boolean'}},\n                \"keyEncipherment\": {{faker 'datatype.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'datatype.boolean'}},\n                \"codeSigning\": {{faker 'datatype.boolean'}},\n                \"emailProtection\": {{faker 'datatype.boolean'}},\n                \"ocspSigning\": {{faker 'datatype.boolean'}},\n                \"serverAuth\": {{faker 'datatype.boolean'}},\n                \"timeStamping\": {{faker 'datatype.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'datatype.number'}}\n                ]\n              }\n            ]\n          }\n        },\n        \"subjectConfig\": {\n          \"commonName\": \"\",\n          \"subject\": {\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'datatype.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        }\n      },\n      \"createTime\": \"\",\n      \"deleteTime\": \"\",\n      \"gcsBucket\": \"\",\n      \"issuingOptions\": {\n        \"includeCaCertUrl\": {{faker 'datatype.boolean'}},\n        \"includeCrlAccessUrl\": {{faker 'datatype.boolean'}}\n      },\n      \"keySpec\": {\n        \"algorithm\": \"{{oneOf (array 'SIGN_HASH_ALGORITHM_UNSPECIFIED' 'RSA_PSS_2048_SHA256' 'RSA_PSS_3072_SHA256' 'RSA_PSS_4096_SHA256' 'RSA_PKCS1_2048_SHA256' 'RSA_PKCS1_3072_SHA256' 'RSA_PKCS1_4096_SHA256' 'EC_P256_SHA256' 'EC_P384_SHA384')}}\",\n        \"cloudKmsKeyVersion\": \"\"\n      },\n      \"labels\": {},\n      \"lifetime\": \"\",\n      \"name\": \"\",\n      \"pemCaCertificates\": [\n        \"\"\n      ],\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'DISABLED' 'PENDING_ACTIVATION' 'PENDING_DELETION')}}\",\n      \"subordinateConfig\": {\n        \"certificateAuthority\": \"\",\n        \"pemIssuerChain\": {\n          \"pemCertificates\": [\n            \"\"\n          ]\n        }\n      },\n      \"tier\": \"{{oneOf (array 'TIER_UNSPECIFIED' 'ENTERPRISE' 'DEVOPS')}}\",\n      \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'SELF_SIGNED' 'SUBORDINATE')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ca3544b0-a04e-4116-aaa4-317fa6ddac2c",
      "documentation": "Create a new CertificateAuthority in a given Project and Location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/certificateAuthorities",
      "responses": [
        {
          "uuid": "27b1a978-d4b0-4877-86eb-de2d0993b81f",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e14323d-d0b3-4f26-89f5-20d73e4b29cf",
      "documentation": "Lists CertificateRevocationLists.",
      "method": "get",
      "endpoint": "v1beta1/:parent/certificateRevocationLists",
      "responses": [
        {
          "uuid": "e115c415-dc8e-41e7-b088-988840a77d32",
          "body": "{\n  \"certificateRevocationLists\": [\n    {\n      \"accessUrl\": \"\",\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"pemCrl\": \"\",\n      \"revokedCertificates\": [\n        {\n          \"certificate\": \"\",\n          \"hexSerialNumber\": \"\",\n          \"revocationReason\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\"\n        }\n      ],\n      \"sequenceNumber\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ACTIVE' 'SUPERSEDED')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56547fef-4a55-4853-8661-7ca4e30d8331",
      "documentation": "Lists Certificates.",
      "method": "get",
      "endpoint": "v1beta1/:parent/certificates",
      "responses": [
        {
          "uuid": "ec472a52-0525-425d-ac60-b6d4926eb7c7",
          "body": "{\n  \"certificates\": [\n    {\n      \"certificateDescription\": {\n        \"aiaIssuingCertificateUrls\": [\n          \"\"\n        ],\n        \"authorityKeyId\": {\n          \"keyId\": \"\"\n        },\n        \"certFingerprint\": {\n          \"sha256Hash\": \"\"\n        },\n        \"configValues\": {\n          \"additionalExtensions\": [\n            {\n              \"critical\": {{faker 'datatype.boolean'}},\n              \"objectId\": {\n                \"objectIdPath\": [\n                  {{faker 'datatype.number'}}\n                ]\n              },\n              \"value\": \"\"\n            }\n          ],\n          \"aiaOcspServers\": [\n            \"\"\n          ],\n          \"caOptions\": {\n            \"isCa\": {{faker 'datatype.boolean'}},\n            \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n          },\n          \"keyUsage\": {\n            \"baseKeyUsage\": {\n              \"certSign\": {{faker 'datatype.boolean'}},\n              \"contentCommitment\": {{faker 'datatype.boolean'}},\n              \"crlSign\": {{faker 'datatype.boolean'}},\n              \"dataEncipherment\": {{faker 'datatype.boolean'}},\n              \"decipherOnly\": {{faker 'datatype.boolean'}},\n              \"digitalSignature\": {{faker 'datatype.boolean'}},\n              \"encipherOnly\": {{faker 'datatype.boolean'}},\n              \"keyAgreement\": {{faker 'datatype.boolean'}},\n              \"keyEncipherment\": {{faker 'datatype.boolean'}}\n            },\n            \"extendedKeyUsage\": {\n              \"clientAuth\": {{faker 'datatype.boolean'}},\n              \"codeSigning\": {{faker 'datatype.boolean'}},\n              \"emailProtection\": {{faker 'datatype.boolean'}},\n              \"ocspSigning\": {{faker 'datatype.boolean'}},\n              \"serverAuth\": {{faker 'datatype.boolean'}},\n              \"timeStamping\": {{faker 'datatype.boolean'}}\n            },\n            \"unknownExtendedKeyUsages\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'datatype.number'}}\n                ]\n              }\n            ]\n          },\n          \"policyIds\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            }\n          ]\n        },\n        \"crlDistributionPoints\": [\n          \"\"\n        ],\n        \"publicKey\": {\n          \"key\": \"\",\n          \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n        },\n        \"subjectDescription\": {\n          \"commonName\": \"\",\n          \"hexSerialNumber\": \"\",\n          \"lifetime\": \"\",\n          \"notAfterTime\": \"\",\n          \"notBeforeTime\": \"\",\n          \"subject\": {\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'datatype.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        },\n        \"subjectKeyId\": {\n          \"keyId\": \"\"\n        }\n      },\n      \"config\": {\n        \"publicKey\": {\n          \"key\": \"\",\n          \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n        },\n        \"reusableConfig\": {\n          \"reusableConfig\": \"\",\n          \"reusableConfigValues\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'datatype.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'datatype.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'datatype.boolean'}},\n                \"contentCommitment\": {{faker 'datatype.boolean'}},\n                \"crlSign\": {{faker 'datatype.boolean'}},\n                \"dataEncipherment\": {{faker 'datatype.boolean'}},\n                \"decipherOnly\": {{faker 'datatype.boolean'}},\n                \"digitalSignature\": {{faker 'datatype.boolean'}},\n                \"encipherOnly\": {{faker 'datatype.boolean'}},\n                \"keyAgreement\": {{faker 'datatype.boolean'}},\n                \"keyEncipherment\": {{faker 'datatype.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'datatype.boolean'}},\n                \"codeSigning\": {{faker 'datatype.boolean'}},\n                \"emailProtection\": {{faker 'datatype.boolean'}},\n                \"ocspSigning\": {{faker 'datatype.boolean'}},\n                \"serverAuth\": {{faker 'datatype.boolean'}},\n                \"timeStamping\": {{faker 'datatype.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'datatype.number'}}\n                ]\n              }\n            ]\n          }\n        },\n        \"subjectConfig\": {\n          \"commonName\": \"\",\n          \"subject\": {\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'datatype.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        }\n      },\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"lifetime\": \"\",\n      \"name\": \"\",\n      \"pemCertificate\": \"\",\n      \"pemCertificateChain\": [\n        \"\"\n      ],\n      \"pemCsr\": \"\",\n      \"revocationDetails\": {\n        \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n        \"revocationTime\": \"\"\n      },\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad6bff2f-c4cb-4074-884a-5a138d5c872c",
      "documentation": "Create a new Certificate in a given Project, Location from a particular CertificateAuthority.",
      "method": "post",
      "endpoint": "v1beta1/:parent/certificates",
      "responses": [
        {
          "uuid": "586162fe-fe7a-4996-b1ab-020107d182fa",
          "body": "{\n  \"certificateDescription\": {\n    \"aiaIssuingCertificateUrls\": [\n      \"\"\n    ],\n    \"authorityKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"certFingerprint\": {\n      \"sha256Hash\": \"\"\n    },\n    \"configValues\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'datatype.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'datatype.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'datatype.boolean'}},\n          \"contentCommitment\": {{faker 'datatype.boolean'}},\n          \"crlSign\": {{faker 'datatype.boolean'}},\n          \"dataEncipherment\": {{faker 'datatype.boolean'}},\n          \"decipherOnly\": {{faker 'datatype.boolean'}},\n          \"digitalSignature\": {{faker 'datatype.boolean'}},\n          \"encipherOnly\": {{faker 'datatype.boolean'}},\n          \"keyAgreement\": {{faker 'datatype.boolean'}},\n          \"keyEncipherment\": {{faker 'datatype.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'datatype.boolean'}},\n          \"codeSigning\": {{faker 'datatype.boolean'}},\n          \"emailProtection\": {{faker 'datatype.boolean'}},\n          \"ocspSigning\": {{faker 'datatype.boolean'}},\n          \"serverAuth\": {{faker 'datatype.boolean'}},\n          \"timeStamping\": {{faker 'datatype.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'datatype.number'}}\n          ]\n        }\n      ]\n    },\n    \"crlDistributionPoints\": [\n      \"\"\n    ],\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"subjectDescription\": {\n      \"commonName\": \"\",\n      \"hexSerialNumber\": \"\",\n      \"lifetime\": \"\",\n      \"notAfterTime\": \"\",\n      \"notBeforeTime\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"subjectKeyId\": {\n      \"keyId\": \"\"\n    }\n  },\n  \"config\": {\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"reusableConfig\": {\n      \"reusableConfig\": \"\",\n      \"reusableConfigValues\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'datatype.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'datatype.boolean'}},\n            \"contentCommitment\": {{faker 'datatype.boolean'}},\n            \"crlSign\": {{faker 'datatype.boolean'}},\n            \"dataEncipherment\": {{faker 'datatype.boolean'}},\n            \"decipherOnly\": {{faker 'datatype.boolean'}},\n            \"digitalSignature\": {{faker 'datatype.boolean'}},\n            \"encipherOnly\": {{faker 'datatype.boolean'}},\n            \"keyAgreement\": {{faker 'datatype.boolean'}},\n            \"keyEncipherment\": {{faker 'datatype.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'datatype.boolean'}},\n            \"codeSigning\": {{faker 'datatype.boolean'}},\n            \"emailProtection\": {{faker 'datatype.boolean'}},\n            \"ocspSigning\": {{faker 'datatype.boolean'}},\n            \"serverAuth\": {{faker 'datatype.boolean'}},\n            \"timeStamping\": {{faker 'datatype.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          }\n        ]\n      }\n    },\n    \"subjectConfig\": {\n      \"commonName\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    }\n  },\n  \"createTime\": \"\",\n  \"labels\": {},\n  \"lifetime\": \"\",\n  \"name\": \"\",\n  \"pemCertificate\": \"\",\n  \"pemCertificateChain\": [\n    \"\"\n  ],\n  \"pemCsr\": \"\",\n  \"revocationDetails\": {\n    \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n    \"revocationTime\": \"\"\n  },\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf7f1201-016f-4921-9638-bb63e2df420e",
      "documentation": "Lists ReusableConfigs.",
      "method": "get",
      "endpoint": "v1beta1/:parent/reusableConfigs",
      "responses": [
        {
          "uuid": "5bbc7531-4fb9-485f-86cb-537a9e8b6edb",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"reusableConfigs\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"updateTime\": \"\",\n      \"values\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'datatype.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'datatype.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'datatype.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'datatype.boolean'}},\n            \"contentCommitment\": {{faker 'datatype.boolean'}},\n            \"crlSign\": {{faker 'datatype.boolean'}},\n            \"dataEncipherment\": {{faker 'datatype.boolean'}},\n            \"decipherOnly\": {{faker 'datatype.boolean'}},\n            \"digitalSignature\": {{faker 'datatype.boolean'}},\n            \"encipherOnly\": {{faker 'datatype.boolean'}},\n            \"keyAgreement\": {{faker 'datatype.boolean'}},\n            \"keyEncipherment\": {{faker 'datatype.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'datatype.boolean'}},\n            \"codeSigning\": {{faker 'datatype.boolean'}},\n            \"emailProtection\": {{faker 'datatype.boolean'}},\n            \"ocspSigning\": {{faker 'datatype.boolean'}},\n            \"serverAuth\": {{faker 'datatype.boolean'}},\n            \"timeStamping\": {{faker 'datatype.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'datatype.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'datatype.number'}}\n            ]\n          }\n        ]\n      }\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e1b34dbb-0978-45c7-a624-ac1db8b0a8c7",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "a22a848e-9d84-461a-b473-9134bc67a289",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c16497d-71fa-4479-9d61-762a29547472",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "43f80717-e05a-4ad6-8d50-656ef064b68a",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "402fabbd-aeb8-4703-a993-1080da1579f6",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "cce020db-bef0-40d8-aff2-79eedaeeb42e",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}