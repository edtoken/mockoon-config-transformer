{
  "uuid": "00f9b3dc-b0c0-4576-84f7-fbd140ba9673",
  "lastMigration": 24,
  "name": "Gitea API.",
  "endpointPrefix": "api/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1465186b-4ede-42dc-b4ed-e36ec74b7e0f",
      "documentation": "List cron tasks",
      "method": "get",
      "endpoint": "admin/cron",
      "responses": [
        {
          "uuid": "bb3253fb-93c7-4adc-ab49-6947e154d87a",
          "body": "[\n  {\n    \"exec_times\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"next\": \"{{faker 'date.recent' 365}}\",\n    \"prev\": \"{{faker 'date.recent' 365}}\",\n    \"schedule\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CronList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6cd50ea8-da23-498e-8a9c-921ac80af50e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0907173b-cf7c-46a5-9370-50cf6e1fc258",
      "documentation": "Run cron task",
      "method": "post",
      "endpoint": "admin/cron/:task",
      "responses": [
        {
          "uuid": "2f527e5a-a1c1-4646-8daf-8f0b5498d239",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "85193257-a155-48d8-a379-51f6326235fe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f654f8e4-8ae2-4439-a502-c85d563dea4e",
      "documentation": "List all organizations",
      "method": "get",
      "endpoint": "admin/orgs",
      "responses": [
        {
          "uuid": "1cc08553-241e-4d3e-aa27-0ebec31dbd40",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "319d84ed-4972-48be-ada8-47d85c4b1ea5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a020d597-cf71-4fb9-894f-e90b6e64de1b",
      "documentation": "List unadopted repositories",
      "method": "get",
      "endpoint": "admin/unadopted",
      "responses": [
        {
          "uuid": "09e8a925-3849-4d2e-adeb-7ca9bca95892",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "StringSlice",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b3ea923a-9054-4d0a-85b5-576389571c71",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd3a5ba8-f425-446e-891d-c21790e09927",
      "documentation": "Delete unadopted files",
      "method": "delete",
      "endpoint": "admin/unadopted/:owner/:repo",
      "responses": [
        {
          "uuid": "b0fd38a2-7262-4f5d-afb1-130cc0813b5a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "af720209-13d3-431f-b863-907bfead39e4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3775fbfa-dcee-4aec-86f6-f50a18c889b9",
      "documentation": "Adopt unadopted files as a repository",
      "method": "post",
      "endpoint": "admin/unadopted/:owner/:repo",
      "responses": [
        {
          "uuid": "636304f5-59cb-4dd3-927f-81c246a0d5c9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8ec18688-7a01-4068-b96b-c449fce45dbf",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f20c0c1-7255-42d3-a31d-84a871fc0c27",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b0e172e-a9f3-4a2d-97cf-012e83a85310",
      "documentation": "List all users",
      "method": "get",
      "endpoint": "admin/users",
      "responses": [
        {
          "uuid": "ee56f4df-acdf-40cf-b2f7-e5df21851068",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "be416ec5-0de0-4f2a-93e1-e37154574827",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b33a39d-be1a-4343-9600-de540731d392",
      "documentation": "Create a user",
      "method": "post",
      "endpoint": "admin/users",
      "responses": [
        {
          "uuid": "f704c2dd-2430-4577-b16d-650ed0d301b8",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'datatype.number'}},\n  \"following_count\": {{faker 'datatype.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"is_admin\": {{faker 'datatype.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'datatype.boolean'}},\n  \"restricted\": {{faker 'datatype.boolean'}},\n  \"starred_repos_count\": {{faker 'datatype.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56990e90-a8b5-44aa-b803-1c07394ae6e5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad84f9aa-d65a-4ec3-b64a-f9a980b241c9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d2af2fef-b9fa-437e-8b97-2520c55d598a",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "364feac8-d08f-4c71-a597-6d21ed2b1301",
      "documentation": "Delete a user",
      "method": "delete",
      "endpoint": "admin/users/:username",
      "responses": [
        {
          "uuid": "ff7a169a-28e7-4b32-ae99-254a7cffd216",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ef0ad167-b0cc-42b4-a28c-1bf0b73916df",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c4f3bc8-171c-4fa2-a26a-5373d4f12665",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "15839116-4bf0-44a0-9696-212cbd2102bb",
      "documentation": "Edit an existing user",
      "method": "patch",
      "endpoint": "admin/users/:username",
      "responses": [
        {
          "uuid": "ffbcfd80-a9e1-43d0-bd06-11b676e81204",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'datatype.number'}},\n  \"following_count\": {{faker 'datatype.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"is_admin\": {{faker 'datatype.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'datatype.boolean'}},\n  \"restricted\": {{faker 'datatype.boolean'}},\n  \"starred_repos_count\": {{faker 'datatype.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7d30eed3-a7a3-497e-b43c-c4e065a35dc3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa48d83c-73c4-46cf-9b4f-eb02bc688f4a",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "443416f2-bf6a-4089-ac11-7996274147fc",
      "documentation": "Add a public key on behalf of a user",
      "method": "post",
      "endpoint": "admin/users/:username/keys",
      "responses": [
        {
          "uuid": "10719c59-3bd5-4959-b633-71a42fde3be1",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'datatype.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b5f4907c-bb42-416e-b39d-d5a6ecf78407",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "db1ea0d7-8e59-4b04-ae15-7b548d0654d4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad3eb00d-5658-46ae-bae3-3978fda56c4e",
      "documentation": "Delete a user's public key",
      "method": "delete",
      "endpoint": "admin/users/:username/keys/:id",
      "responses": [
        {
          "uuid": "90e9d87c-1e88-4c84-a70d-d4f52b599625",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8e52598a-03e1-4aff-a1de-be7ecdb7f086",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "577651b1-855f-49c7-bbff-84ee5915b46c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5392561f-3a50-428b-98df-e2e4eca5aa57",
      "documentation": "Create an organization",
      "method": "post",
      "endpoint": "admin/users/:username/orgs",
      "responses": [
        {
          "uuid": "1d6e19c0-77e4-4850-95c7-c34b412e3516",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9c7c4e8-a40e-4524-bbff-17ab7bf0a560",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d296bab3-6d61-402f-b60e-bfe49fc72d8b",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "78f7c908-2e50-446f-97fc-bb815497fb55",
      "documentation": "Create a repository on behalf of a user",
      "method": "post",
      "endpoint": "admin/users/:username/repos",
      "responses": [
        {
          "uuid": "fef8d108-6936-452b-a1e3-dbda63b6b6a5",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "586f1188-4f02-4f01-a0ce-0cc61820098c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f32d0f7f-ac44-411b-a3b9-54c9f6b26d8d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a2fcb97-6f4e-42ae-be77-52f688f5640a",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b5b53f4d-415b-4cfa-b0ea-379a48bd9600",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b5bfb61a-c176-47a3-8898-3144a9d2b6b8",
      "documentation": "Render a markdown document as HTML",
      "method": "post",
      "endpoint": "markdown",
      "responses": [
        {
          "uuid": "1271cf1a-5cc3-44bd-b466-51fa8448b670",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "MarkdownRender is a rendered markdown document",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0fe2f2ff-23b3-4ce7-a926-f106053afd49",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a5181bb-f8d9-49b4-b45c-2c57be40fd72",
      "documentation": "Render raw markdown as HTML",
      "method": "post",
      "endpoint": "markdown/raw",
      "responses": [
        {
          "uuid": "66548e38-9537-47b2-963b-3cee3975e4f1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "MarkdownRender is a rendered markdown document",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c5894720-201d-44d6-9680-d99c709144c2",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "474ffb6f-af27-462c-b0c2-10522a9f060c",
      "documentation": "List users's notification threads",
      "method": "get",
      "endpoint": "notifications",
      "responses": [
        {
          "uuid": "84358043-fe2d-4e4f-8c6e-e7ac7ea3b163",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2820850c-18a4-40a6-9ceb-bdb9583de8d0",
      "documentation": "Mark notification threads as read, pinned or unread",
      "method": "put",
      "endpoint": "notifications",
      "responses": [
        {
          "uuid": "8659d499-dd1c-48e9-8b87-9ae739890c8e",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a1c50510-1609-477c-b7cb-a87f1f38f7b9",
      "documentation": "Check if unread notifications exist",
      "method": "get",
      "endpoint": "notifications/new",
      "responses": [
        {
          "uuid": "0b6b4fff-1dce-4694-864b-aaa5540fba05",
          "body": "{\n  \"new\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Number of unread notifications",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a8977890-0e85-4891-bc89-921a2911bf47",
      "documentation": "Get notification thread by ID",
      "method": "get",
      "endpoint": "notifications/threads/:id",
      "responses": [
        {
          "uuid": "71c72c25-943d-4f85-a800-e398fdff542a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "06d1ae2a-729f-4eec-88b0-fa18ec2942de",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f65e7944-c2fb-4367-b5b9-8ba52efcacd1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d6d944d4-ac8f-42e7-96ff-0ddaafec217c",
      "documentation": "Mark notification thread as read by ID",
      "method": "patch",
      "endpoint": "notifications/threads/:id",
      "responses": [
        {
          "uuid": "e0c34c3c-b432-4e56-a457-fb356c373096",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "093bc5cd-c109-438d-95bb-7cf148821f20",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a5a8d02-7f83-42c1-82cf-64b64842dabe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "823b1e8b-eaa9-4232-b714-c85921c5de77",
      "documentation": "Create a repository in an organization",
      "method": "post",
      "endpoint": "org/:org/repos",
      "responses": [
        {
          "uuid": "fab25edb-e6e7-40c9-bdea-c54f496160d7",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a7e0f5fe-171b-4c25-b8d8-465c3c8ef74d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ce7469e-dbcd-438c-a28b-da8c791a2fbe",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "229937f5-384f-45f6-a096-64b868a68514",
      "documentation": "Get list of organizations",
      "method": "get",
      "endpoint": "orgs",
      "responses": [
        {
          "uuid": "e32ee953-f6a6-4dce-9dfe-04d827baa288",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "581c8a4c-7378-4844-bde7-4859b39edc83",
      "documentation": "Create an organization",
      "method": "post",
      "endpoint": "orgs",
      "responses": [
        {
          "uuid": "f855282f-c1df-498b-8770-a12c4c1521b3",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d22d34c-6f07-4388-a6da-e225e4946443",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8d0b068-2325-418e-bb1a-0a66b95ca69f",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "69c91b7c-8008-4eef-b727-d2df7f0339d0",
      "documentation": "Delete an organization",
      "method": "delete",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "1e7b1d39-ff4d-4fcd-820a-c3dc777559e1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ad9a59c-a7e8-4727-87d7-646074ca4f4b",
      "documentation": "Get an organization",
      "method": "get",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "6784814c-4e91-439c-ae4a-d3e2d6bcff30",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8dae063e-47ec-4e59-95a6-c2c831e7f891",
      "documentation": "Edit an organization",
      "method": "patch",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "ca3ba079-7b7c-4154-8ff7-6da9bacef2a3",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e96e205f-1213-4e75-b2a0-8bceea58800b",
      "documentation": "List an organization's webhooks",
      "method": "get",
      "endpoint": "orgs/:org/hooks",
      "responses": [
        {
          "uuid": "f9640d7e-bb5e-4259-a02b-d23d336fca3c",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"config\": {},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"events\": [\n      \"\"\n    ],\n    \"id\": {{faker 'datatype.number'}},\n    \"type\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "HookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "35594f6d-f38d-43cb-a4af-ab18cdd368b4",
      "documentation": "Create a hook",
      "method": "post",
      "endpoint": "orgs/:org/hooks/",
      "responses": [
        {
          "uuid": "30ff2dc0-adbd-416a-be8e-095cbda8cac8",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ee82dc8-9289-4a25-8c12-8bd3d2e5a571",
      "documentation": "Delete a hook",
      "method": "delete",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "3a353666-31df-4eed-a70e-baff54197827",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7ed902af-b7bf-42d7-845c-64771d6c78c9",
      "documentation": "Get a hook",
      "method": "get",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "5e129a20-c8e2-46d7-b7c2-0e77e0438715",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "78ca89b8-077b-4c85-9324-f51b21b6e2a7",
      "documentation": "Update a hook",
      "method": "patch",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "f89eaabc-1daa-49aa-9bdf-37a7a6e5e7e3",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9b387cf-3713-4894-b90f-36f62a6193c2",
      "documentation": "List an organization's labels",
      "method": "get",
      "endpoint": "orgs/:org/labels",
      "responses": [
        {
          "uuid": "44d5a21b-99fb-48e6-a526-b58083385f1f",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6f217615-d381-4cd0-b26c-1e4c64c24847",
      "documentation": "Create a label for an organization",
      "method": "post",
      "endpoint": "orgs/:org/labels",
      "responses": [
        {
          "uuid": "ca9ad911-8851-49fd-80b1-dcdb5dd80bd8",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "621ec5c8-e249-41a3-acad-dcc25af6738c",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6cb00573-909f-49d8-a36d-502bca26934f",
      "documentation": "Delete a label",
      "method": "delete",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "b37a5c5b-2133-4693-b446-db2859ee6a47",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e8c6119-2795-4839-9266-9aed13946518",
      "documentation": "Get a single label",
      "method": "get",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "38424ee9-2047-4b35-ad9b-754dce81b388",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "87814b29-78bf-4fee-b6e2-5ef5bdd0a420",
      "documentation": "Update a label",
      "method": "patch",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "ea13c6b9-9c99-4f4c-afe6-9bc4794e9093",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c56901ee-04d6-4ce2-8686-8a082a8c58a5",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bb226643-547a-467b-b323-15fd17588986",
      "documentation": "List an organization's members",
      "method": "get",
      "endpoint": "orgs/:org/members",
      "responses": [
        {
          "uuid": "db1ac854-ab9b-4961-a194-8f30c1e961e5",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "821e1aff-0676-49da-a16e-7c93d4a3f024",
      "documentation": "Remove a member from an organization",
      "method": "delete",
      "endpoint": "orgs/:org/members/:username",
      "responses": [
        {
          "uuid": "f09d9cc4-2545-4fcd-93fd-bc4f1f53de3c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "member removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a5631e6-d290-4a94-b2e6-4abd98e503eb",
      "documentation": "Check if a user is a member of an organization",
      "method": "get",
      "endpoint": "orgs/:org/members/:username",
      "responses": [
        {
          "uuid": "bedbb908-5896-40d4-848b-823145257c19",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user is a member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "85869789-297e-4506-9f6d-4614cd685b14",
          "body": "",
          "latency": 0,
          "statusCode": 302,
          "label": "redirection to /orgs/{org}/public_members/{username}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5560eb21-c18b-4850-90fc-1828385ec148",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "user is not a member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2f76db0f-a300-45b0-9599-8fcbbc5e6613",
      "documentation": "List an organization's public members",
      "method": "get",
      "endpoint": "orgs/:org/public_members",
      "responses": [
        {
          "uuid": "27a92347-da91-46bb-983d-d6347090b494",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a881744-0327-447a-8280-f6f3621bea0e",
      "documentation": "Conceal a user's membership",
      "method": "delete",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "d4807fb3-9ae0-4f69-991e-c51d1e909b93",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4bb64f94-3e31-4e3c-8ca5-9e54b9687fac",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b535bc42-40e4-495a-9b8d-012def712800",
      "documentation": "Check if a user is a public member of an organization",
      "method": "get",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "0febea32-826a-47e4-bb59-2b2fecfe457a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user is a public member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92dbc549-8055-4976-87ee-d9b926ae07c5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "user is not a public member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d3be184a-4fd9-4468-b1ba-5c110d4901f6",
      "documentation": "Publicize a user's membership",
      "method": "put",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "8d60e6a2-86dd-483e-a44a-b64afe3aa3bb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "membership publicized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7facc13a-f14d-4986-895a-5be18c543ae8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dbfec434-55cb-47cd-a3cf-a7e875e1c537",
      "documentation": "List an organization's repos",
      "method": "get",
      "endpoint": "orgs/:org/repos",
      "responses": [
        {
          "uuid": "36da79c2-224b-46ea-a75c-5ccff4b16c0d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5748b21f-983d-4616-8818-e2e25ccea0e9",
      "documentation": "Create a repository in an organization",
      "method": "post",
      "endpoint": "orgs/:org/repos",
      "responses": [
        {
          "uuid": "a2313a16-5327-4e07-a57d-d6555f33ea2d",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb95d638-4cbe-4bc2-9e1b-4264aad63b57",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1668f530-b59b-4254-b52b-65aa5826f654",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a866277-b4d5-4ae3-9c0b-cf9aefbe000e",
      "documentation": "List an organization's teams",
      "method": "get",
      "endpoint": "orgs/:org/teams",
      "responses": [
        {
          "uuid": "b3e3f033-0573-4a66-a1f7-113d0dea9711",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "518a2a13-17b7-453b-8f56-6d10ce9c3019",
      "documentation": "Create a team",
      "method": "post",
      "endpoint": "orgs/:org/teams",
      "responses": [
        {
          "uuid": "be289fd3-0492-4a3e-9912-0e058433bbf6",
          "body": "{\n  \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07d2e44f-1670-456c-8a65-11d18bdeb86f",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c4b29bf0-5f1c-474a-9874-882d7000159a",
      "documentation": "Search for teams within an organization",
      "method": "get",
      "endpoint": "orgs/:org/teams/search",
      "responses": [
        {
          "uuid": "baec1775-c660-4f36-9638-dca57178e9b4",
          "body": "{\n  \"data\": [\n    {\n      \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    }\n  ],\n  \"ok\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "SearchResults of a successful search",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d0ac6d1f-20a6-4886-8dae-a465524122b5",
      "documentation": "Search for issues across the repositories that the user has access to",
      "method": "get",
      "endpoint": "repos/issues/search",
      "responses": [
        {
          "uuid": "c0072a31-159e-4531-bf02-dbc01f972936",
          "body": "[\n  {\n    \"assignee\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'datatype.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_locked\": {{faker 'datatype.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'datatype.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'datatype.number'}},\n      \"open_issues\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'datatype.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'datatype.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'datatype.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8f95c36-b656-4209-a61d-9b1d26c1cdbc",
      "documentation": "Migrate a remote git repository",
      "method": "post",
      "endpoint": "repos/migrate",
      "responses": [
        {
          "uuid": "9dc8e251-3cd4-4b0b-93ba-bccb352f544d",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4bfb8405-95ad-47bb-99e0-ee2ac98b3161",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "423070f7-0634-417a-9289-9846f045cb88",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8b357f23-0982-4319-80f7-01ae854683bd",
      "documentation": "Search for repositories",
      "method": "get",
      "endpoint": "repos/search",
      "responses": [
        {
          "uuid": "e004b252-abf5-4475-905d-e655feaff714",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "738a21db-e420-4d42-8bd2-3fed5a86a2b8",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6caf4e49-5ed1-4dad-a4c9-bcfcb715dc48",
      "documentation": "Delete a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "66ce0f32-292d-47e7-b46e-651143ef9e38",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4138d092-202a-465d-9b01-23a37205abee",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46c075c8-64a0-4f62-b855-5fe0e0c9e62c",
      "documentation": "Get a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "53709c2e-21ae-4343-b8aa-e4b346791f02",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f0e36340-3d19-444b-ae84-369c5ae769aa",
      "documentation": "Edit a repository's properties. Only fields that are set will be changed.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "c83e85b0-f368-48ad-b6d8-f2d794ae65c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "00b9e9c5-8be3-4de2-bd15-b899e57aa0b7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c71ac074-6868-401b-bb5a-585d012ef0fa",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e796f0b-7ad0-4b95-a549-9a576ace6ea8",
      "documentation": "Get an archive of a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/archive/:archive",
      "responses": [
        {
          "uuid": "38eb91fb-70c7-412d-bd1c-d494f8a6d88b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fff37c87-0ef1-4d71-9bda-4233c851ec09",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "98b0fee2-bf3d-4b1c-ad64-d044b3010784",
      "documentation": "Return all users that have write access and can be assigned to issues",
      "method": "get",
      "endpoint": "repos/:owner/:repo/assignees",
      "responses": [
        {
          "uuid": "ae93effd-1b3e-4feb-be40-68032ae25cf4",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "85520fd8-a9d7-4eab-8f6e-99bee66ce8b2",
      "documentation": "List branch protections for a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branch_protections",
      "responses": [
        {
          "uuid": "276fd029-cf5e-46b5-9a9c-18f773434570",
          "body": "[\n  {\n    \"approvals_whitelist_teams\": [\n      \"\"\n    ],\n    \"approvals_whitelist_username\": [\n      \"\"\n    ],\n    \"block_on_official_review_requests\": {{faker 'datatype.boolean'}},\n    \"block_on_outdated_branch\": {{faker 'datatype.boolean'}},\n    \"block_on_rejected_reviews\": {{faker 'datatype.boolean'}},\n    \"branch_name\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"dismiss_stale_approvals\": {{faker 'datatype.boolean'}},\n    \"enable_approvals_whitelist\": {{faker 'datatype.boolean'}},\n    \"enable_merge_whitelist\": {{faker 'datatype.boolean'}},\n    \"enable_push\": {{faker 'datatype.boolean'}},\n    \"enable_push_whitelist\": {{faker 'datatype.boolean'}},\n    \"enable_status_check\": {{faker 'datatype.boolean'}},\n    \"merge_whitelist_teams\": [\n      \"\"\n    ],\n    \"merge_whitelist_usernames\": [\n      \"\"\n    ],\n    \"protected_file_patterns\": \"\",\n    \"push_whitelist_deploy_keys\": {{faker 'datatype.boolean'}},\n    \"push_whitelist_teams\": [\n      \"\"\n    ],\n    \"push_whitelist_usernames\": [\n      \"\"\n    ],\n    \"require_signed_commits\": {{faker 'datatype.boolean'}},\n    \"required_approvals\": {{faker 'datatype.number'}},\n    \"status_check_contexts\": [\n      \"\"\n    ],\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtectionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59c650dc-fa45-445f-8e57-21e202cc4863",
      "documentation": "Create a branch protections for a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/branch_protections",
      "responses": [
        {
          "uuid": "4e3e8467-0954-4506-a17f-376c3afa01c5",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'datatype.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'datatype.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'datatype.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'datatype.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_push\": {{faker 'datatype.boolean'}},\n  \"enable_push_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_status_check\": {{faker 'datatype.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'datatype.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'datatype.boolean'}},\n  \"required_approvals\": {{faker 'datatype.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e8ffb08-6fc0-4484-8036-861ebbb9362e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3652a72a-bd7c-493b-bc45-24adf6daa5a8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f02cce3-5345-4342-b65a-2697fa620c08",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "949be836-f293-42fc-a43b-85bd78abe25a",
      "documentation": "Delete a specific branch protection for the repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "0b18f13d-f181-4a8b-b45d-00821b5315ac",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "400d5459-5d23-44c4-8ed4-6c719066810f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb860be4-1f0c-4a41-b7f0-25caca756719",
      "documentation": "Get a specific branch protection for the repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "909354a2-c8b8-4daf-930c-c722b18aa4bf",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'datatype.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'datatype.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'datatype.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'datatype.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_push\": {{faker 'datatype.boolean'}},\n  \"enable_push_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_status_check\": {{faker 'datatype.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'datatype.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'datatype.boolean'}},\n  \"required_approvals\": {{faker 'datatype.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3367c9c4-37a6-4f0a-8754-04769d89539a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54dfeed1-1637-476f-8e12-1e706568cd30",
      "documentation": "Edit a branch protections for a repository. Only fields that are set will be changed",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "6190378f-af74-410f-8b8e-b20b05678360",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'datatype.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'datatype.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'datatype.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'datatype.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_push\": {{faker 'datatype.boolean'}},\n  \"enable_push_whitelist\": {{faker 'datatype.boolean'}},\n  \"enable_status_check\": {{faker 'datatype.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'datatype.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'datatype.boolean'}},\n  \"required_approvals\": {{faker 'datatype.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8077d4cd-40fc-4411-a8ce-defc1c84bef9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e42e4ab-845c-4384-a886-56b57872b4b3",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2c17e79-f46a-4be0-b84b-ee1d34717716",
      "documentation": "List a repository's branches",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branches",
      "responses": [
        {
          "uuid": "c6d7c1e5-b9c2-4bee-8d3e-c38be5d740f2",
          "body": "[\n  {\n    \"commit\": {\n      \"added\": [\n        \"\"\n      ],\n      \"author\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"committer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"id\": \"\",\n      \"message\": \"\",\n      \"modified\": [\n        \"\"\n      ],\n      \"removed\": [\n        \"\"\n      ],\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"verification\": {\n        \"payload\": \"\",\n        \"reason\": \"\",\n        \"signature\": \"\",\n        \"signer\": {\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"name\": \"\",\n          \"username\": \"\"\n        },\n        \"verified\": {{faker 'datatype.boolean'}}\n      }\n    },\n    \"effective_branch_protection_name\": \"\",\n    \"enable_status_check\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"protected\": {{faker 'datatype.boolean'}},\n    \"required_approvals\": {{faker 'datatype.number'}},\n    \"status_check_contexts\": [\n      \"\"\n    ],\n    \"user_can_merge\": {{faker 'datatype.boolean'}},\n    \"user_can_push\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e369c6a0-2478-4cd6-9d01-e00eeca99fb5",
      "documentation": "Create a branch",
      "method": "post",
      "endpoint": "repos/:owner/:repo/branches",
      "responses": [
        {
          "uuid": "35cbfa2a-5ef3-46c2-9734-1270a8e85c6a",
          "body": "{\n  \"commit\": {\n    \"added\": [\n      \"\"\n    ],\n    \"author\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"committer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"modified\": [\n      \"\"\n    ],\n    \"removed\": [\n      \"\"\n    ],\n    \"timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"verification\": {\n      \"payload\": \"\",\n      \"reason\": \"\",\n      \"signature\": \"\",\n      \"signer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"verified\": {{faker 'datatype.boolean'}}\n    }\n  },\n  \"effective_branch_protection_name\": \"\",\n  \"enable_status_check\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"protected\": {{faker 'datatype.boolean'}},\n  \"required_approvals\": {{faker 'datatype.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"user_can_merge\": {{faker 'datatype.boolean'}},\n  \"user_can_push\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Branch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e3f2fe75-17f2-449f-884b-052bdc72ab50",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The old branch does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0d35ea52-2d33-4d02-b6d7-adfae62b3b9b",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The branch with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4eff2ae6-d86b-487b-9395-f4a63fdf36ea",
      "documentation": "Delete a specific branch from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/branches/:branch",
      "responses": [
        {
          "uuid": "894deba6-86ed-4590-a4c4-140fd156e55b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56028b17-1413-49b7-93b9-41500de2c8cc",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6fe60b1-9d8d-4a6e-bba6-555448abeb2f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d7c43174-9275-4ecf-9970-a36683f1b796",
      "documentation": "Retrieve a specific branch from a repository, including its effective branch protection",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branches/:branch",
      "responses": [
        {
          "uuid": "3fbe8694-f9dd-4bb4-82d1-fa77594be24b",
          "body": "{\n  \"commit\": {\n    \"added\": [\n      \"\"\n    ],\n    \"author\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"committer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"modified\": [\n      \"\"\n    ],\n    \"removed\": [\n      \"\"\n    ],\n    \"timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"verification\": {\n      \"payload\": \"\",\n      \"reason\": \"\",\n      \"signature\": \"\",\n      \"signer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"verified\": {{faker 'datatype.boolean'}}\n    }\n  },\n  \"effective_branch_protection_name\": \"\",\n  \"enable_status_check\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"protected\": {{faker 'datatype.boolean'}},\n  \"required_approvals\": {{faker 'datatype.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"user_can_merge\": {{faker 'datatype.boolean'}},\n  \"user_can_push\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Branch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d0a8f24c-aa6f-4486-9d7c-4e7cf8aa3871",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cbe6c373-3d9a-4a10-bf62-2746b00af895",
      "documentation": "List a repository's collaborators",
      "method": "get",
      "endpoint": "repos/:owner/:repo/collaborators",
      "responses": [
        {
          "uuid": "5981e67b-3cf6-4fd3-a4a9-e9fb5e68121b",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c8d5cf35-3548-47fd-8f8b-98e91be06165",
      "documentation": "Delete a collaborator from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "8156d78b-13e4-4dd6-97a2-46c1a70b5647",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6f0bafd8-178c-4d5e-8e15-1b11caac6fd7",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "209289eb-a166-4a1f-a1ee-9f68183bce70",
      "documentation": "Check if a user is a collaborator of a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "dda61a5d-9a20-479e-85db-d2e1500978a5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "63c1e3d8-1c00-4e9e-80fa-65ac1d867f5f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af0ef090-5c07-43a1-8e93-17b61e320b1d",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "200ffd0b-0e77-4600-b0fa-54e10359008d",
      "documentation": "Add a collaborator to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "82051e90-efce-499b-b128-35a10328a118",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6a9b7c9e-8a52-4397-b79a-5a72a74db30c",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "353b6a89-f528-41c8-98df-67cd6819c42c",
      "documentation": "Get a list of all commits from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits",
      "responses": [
        {
          "uuid": "4e3219d6-8166-43c4-9a0e-c549a9cdda0f",
          "body": "[\n  {\n    \"author\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-HasMore",
              "value": ""
            },
            {
              "key": "X-Page",
              "value": ""
            },
            {
              "key": "X-PageCount",
              "value": ""
            },
            {
              "key": "X-PerPage",
              "value": ""
            },
            {
              "key": "X-Total",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9d97539e-7276-44f1-b109-e91bfcd1b4fb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "787dd9e4-06ca-4dee-9fd3-d83da6e5a806",
          "body": "{\n  \"message\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "EmptyRepository",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ffdfb5bf-d5ef-4d78-8716-33b7395019d1",
      "documentation": "Get a commit's combined status, by branch/tag/commit reference",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits/:ref/status",
      "responses": [
        {
          "uuid": "50e8664c-0304-4fb0-968a-c722c78e5fdd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0efc0c89-0377-4327-a16f-3e4b4c1883a2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3afdf3c-f319-4466-871a-437a7fe2e5b8",
      "documentation": "Get a commit's statuses, by branch/tag/commit reference",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits/:ref/statuses",
      "responses": [
        {
          "uuid": "face729a-22d7-4b8e-aabc-b94f6e6db0a4",
          "body": "[\n  {\n    \"context\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"creator\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"status\": \"\",\n    \"target_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitStatusList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e855274a-06f2-4385-b394-fdce2bf93269",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b9a8be4e-3d18-4b46-8a28-9f21a3d2a5d2",
      "documentation": "Gets the metadata of all the entries of the root dir",
      "method": "get",
      "endpoint": "repos/:owner/:repo/contents",
      "responses": [
        {
          "uuid": "67e203bb-2317-4285-a6b4-1ac891a19d92",
          "body": "[\n  {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'datatype.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ContentsListResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aecf7cc2-fd6d-454f-883d-cc6b3f31e1c6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f14d8d7f-1625-4d08-badb-0a184a24ba4c",
      "documentation": "Delete a file in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "39829f3a-e6c4-4a3d-98de-7f10f33de290",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {},\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "FileDeleteResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56890574-3b63-4661-bd9b-5214dd1441a8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f098c58-ef34-4872-a6dc-f6498fab9821",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae8544b9-6297-44c9-9dbf-1e4bddf48737",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "585ffccd-729c-4a18-95be-87f8864a06be",
      "documentation": "Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir",
      "method": "get",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "3d18c1ea-026b-4520-b17b-95b55b3a4ede",
          "body": "{\n  \"_links\": {\n    \"git\": \"\",\n    \"html\": \"\",\n    \"self\": \"\"\n  },\n  \"content\": \"\",\n  \"download_url\": \"\",\n  \"encoding\": \"\",\n  \"git_url\": \"\",\n  \"html_url\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"sha\": \"\",\n  \"size\": {{faker 'datatype.number'}},\n  \"submodule_git_url\": \"\",\n  \"target\": \"\",\n  \"type\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ContentsResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6c232f6d-f3e8-4f4c-8260-8082584f6848",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22981dc5-985d-4a1e-a668-9262bbac7728",
      "documentation": "Create a file in a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "80db27b1-906b-404f-8a8c-512302b36b4a",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'datatype.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "FileResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "30e85786-8510-4094-9cab-8e618f2ce290",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f405e162-0191-409b-8139-eb4d82ef5d67",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9fcefddb-dbb3-45e7-90a8-0c0c826ca1ed",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb7275d1-73b0-407f-8b59-d10e4451678e",
      "documentation": "Update a file in a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "2816ccd9-7742-4b8b-af51-6dc5642e40b0",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'datatype.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "FileResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a4c8d2d1-71df-429d-a45c-45c501a24e87",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6889ded4-dbc3-4fb3-a948-89f4545d841d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab76207a-d4d4-4862-99ad-035a91d53043",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4898c071-e033-4da8-a191-a222bd787cba",
      "documentation": "Get the EditorConfig definitions of a file in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/editorconfig/:filepath",
      "responses": [
        {
          "uuid": "f563d8c1-bec6-42ef-b64b-892746b7928d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9bc4b56-fe73-4708-9743-b6577c156a3f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cfb5499-6e06-41de-a302-307dde5779fb",
      "documentation": "List a repository's forks",
      "method": "get",
      "endpoint": "repos/:owner/:repo/forks",
      "responses": [
        {
          "uuid": "c445e93a-e65b-4496-a271-029c616eb285",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a31c06ce-1b8a-46cf-9ce5-92be642cce87",
      "documentation": "Fork a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/forks",
      "responses": [
        {
          "uuid": "bedc5901-f78f-45e5-b9ee-4c161de4f24a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c9735c17-e34d-4f28-b57f-07a686929309",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7848dff-ed3b-4f4b-ae73-d2a7cefd7774",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6e7c18b2-e86e-4a52-bd29-871926fad727",
      "documentation": "Gets the blob of a repository.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/blobs/:sha",
      "responses": [
        {
          "uuid": "142b5c88-28ae-4694-8cc5-09d728b17b49",
          "body": "{\n  \"content\": \"\",\n  \"encoding\": \"\",\n  \"sha\": \"\",\n  \"size\": {{faker 'datatype.number'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitBlobResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "359eb6e7-6e90-4d18-bbe7-17121bcec1b2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8223c7bc-ebbc-4a8e-a08c-bda2b8e300f2",
      "documentation": "Get a single commit from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/commits/:sha",
      "responses": [
        {
          "uuid": "adba49f9-3c9b-42dc-a32e-df524a1394e2",
          "body": "{\n  \"author\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"message\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"committer\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"files\": [\n    {\n      \"filename\": \"\"\n    }\n  ],\n  \"html_url\": \"\",\n  \"parents\": [\n    {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"sha\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Commit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4f1201eb-1f18-429e-91c0-5e16a602f0ca",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc111a0c-4f25-4efd-a0c6-80236eef8986",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54e4106e-b30d-4c33-b747-839bc0dcf957",
      "documentation": "Get a note corresponding to a single commit from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/notes/:sha",
      "responses": [
        {
          "uuid": "674409cf-fe29-446c-b1da-417d6ece0ade",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Note",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c3b3982f-de7b-4a95-9e3c-9206b51a2e2a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "402dab08-53d0-4003-976d-2f8c01e89fdc",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dda84f82-3f27-448e-8def-a915b53ad691",
      "documentation": "Get specified ref or filtered repository's refs",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/refs",
      "responses": [
        {
          "uuid": "24e5d2c0-c529-4cd7-a35e-674c7b9514fb",
          "body": "[\n  {\n    \"object\": {\n      \"sha\": \"\",\n      \"type\": \"\",\n      \"url\": \"\"\n    },\n    \"ref\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReferenceList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e9331907-cff0-49c9-88e1-bd2648f70b01",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "329ebb4c-47c7-487f-9495-5df26c1e3b8c",
      "documentation": "Get specified ref or filtered repository's refs",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/refs/:ref",
      "responses": [
        {
          "uuid": "aa338f4b-9fe0-423a-839f-42c7a8c66ef7",
          "body": "[\n  {\n    \"object\": {\n      \"sha\": \"\",\n      \"type\": \"\",\n      \"url\": \"\"\n    },\n    \"ref\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReferenceList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a29a1cb-e814-4dfb-bbf9-fa4c8603316d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "991195b5-303d-4f5d-9226-01a2498323eb",
      "documentation": "Gets the tag object of an annotated tag (not lightweight tags)",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/tags/:sha",
      "responses": [
        {
          "uuid": "d7293bf7-8dc5-4dd7-91e8-5c0544ab190d",
          "body": "{\n  \"message\": \"\",\n  \"object\": {\n    \"sha\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"sha\": \"\",\n  \"tag\": \"\",\n  \"tagger\": {\n    \"date\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"name\": \"\"\n  },\n  \"url\": \"\",\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "AnnotatedTag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "298dd512-007f-43c7-92a3-2417bde1d109",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e7e55989-f052-470e-b2ab-c3bba41c46c0",
      "documentation": "Gets the tree of a repository.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/trees/:sha",
      "responses": [
        {
          "uuid": "c04c8fbe-304d-40fd-814d-9d92c2e56044",
          "body": "{\n  \"page\": {{faker 'datatype.number'}},\n  \"sha\": \"\",\n  \"total_count\": {{faker 'datatype.number'}},\n  \"tree\": [\n    {\n      \"mode\": \"\",\n      \"path\": \"\",\n      \"sha\": \"\",\n      \"size\": {{faker 'datatype.number'}},\n      \"type\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"truncated\": {{faker 'datatype.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitTreeResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9b4844e8-aad0-438a-9841-c53073a66a9f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4c5d3ed5-9b07-44d3-b490-1c327d3c9903",
      "documentation": "List the hooks in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks",
      "responses": [
        {
          "uuid": "da7971a6-a0a3-4825-9b68-363cafb86ac8",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"config\": {},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"events\": [\n      \"\"\n    ],\n    \"id\": {{faker 'datatype.number'}},\n    \"type\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "HookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "483f41a8-774d-431a-af3c-476f858dce7a",
      "documentation": "Create a hook",
      "method": "post",
      "endpoint": "repos/:owner/:repo/hooks",
      "responses": [
        {
          "uuid": "35cd5e13-4467-4a0e-aee9-c9038a45201f",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "116b2194-519f-4bbe-a7f2-22e3f5882d63",
      "documentation": "List the Git hooks in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/git",
      "responses": [
        {
          "uuid": "cb260e6c-eae0-436d-ad70-862ce5334926",
          "body": "[\n  {\n    \"content\": \"\",\n    \"is_active\": {{faker 'datatype.boolean'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1baa8193-714d-4f32-89b1-b704fdb4950e",
      "documentation": "Delete a Git hook in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "a8ba6f68-6e20-4700-923f-84bb25d5fa35",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3cef684c-b075-4a23-a5cc-b3378e69718a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50db8a53-9c6e-47c8-a8f2-e76cd580302f",
      "documentation": "Get a Git hook",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "3d151234-7c3c-4e32-b405-eaeec77b76b3",
          "body": "{\n  \"content\": \"\",\n  \"is_active\": {{faker 'datatype.boolean'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "42027032-4d3f-4bc4-adc2-1d942cffc8bd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "38d63ad2-d610-4abf-98d7-c0ee56af1c3d",
      "documentation": "Edit a Git hook in a repository",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "d5eb6b41-ba49-4902-a8e7-ed5de21f25ef",
          "body": "{\n  \"content\": \"\",\n  \"is_active\": {{faker 'datatype.boolean'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c9a028c3-b11d-4ab5-a3cd-f0b69b227e6f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bde10320-0ab1-4f61-aa20-6a1587cd7911",
      "documentation": "Delete a hook in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "03531b3b-ba9e-4803-87ac-ada945ab1e2a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0d095c4f-6bcc-4bd2-a22e-0a4bb99c7615",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5cea4c7c-02e4-4571-a0d8-ee9d7b4cc626",
      "documentation": "Get a hook",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "4e78a343-f0fc-4a1e-84eb-51d5a6054605",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e45bc762-df38-4890-8afa-491192bad6f0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d253ed98-6497-4594-be1d-9d768d7ff46a",
      "documentation": "Edit a hook in a repository",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "db9104bb-4341-4421-81e1-0bfe59fb5864",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'datatype.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96c9aeaf-f69f-4e7d-aa5e-f2debe6c510d",
      "documentation": "Test a push webhook",
      "method": "post",
      "endpoint": "repos/:owner/:repo/hooks/:id/tests",
      "responses": [
        {
          "uuid": "a262b0e9-b751-4bef-b522-1e78fb82ca74",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "039dd3b5-2251-4977-8beb-951aaae3b7b5",
      "documentation": "Get available issue templates for a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issue_templates",
      "responses": [
        {
          "uuid": "b2806ce2-67be-491d-aee9-07021bbb5a6a",
          "body": "[\n  {\n    \"about\": \"\",\n    \"content\": \"\",\n    \"file_name\": \"\",\n    \"labels\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"title\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueTemplates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "df57ba04-d0f2-457c-b32c-1eb17ad5fd5f",
      "documentation": "List a repository's issues",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues",
      "responses": [
        {
          "uuid": "0625f0ec-e4b7-4b37-ac1a-32f19a0ced3b",
          "body": "[\n  {\n    \"assignee\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'datatype.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_locked\": {{faker 'datatype.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'datatype.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'datatype.number'}},\n      \"open_issues\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'datatype.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'datatype.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'datatype.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f453570a-72bf-4788-9115-805fdbbd7642",
      "documentation": "Create an issue. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues",
      "responses": [
        {
          "uuid": "63825eef-b8f9-43eb-9c56-05c9c388ad60",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'datatype.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"is_locked\": {{faker 'datatype.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'datatype.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"open_issues\": {{faker 'datatype.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'datatype.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'datatype.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'datatype.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f96b5ea9-d0d9-4cb7-851e-06903f7fa384",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a3f3e31-27c7-4b5a-beb2-4d0a92781e46",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a682e930-f014-47ce-b26c-32e6aefefa96",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "21266d88-7477-4db2-9d2e-deb65cbf0204",
      "documentation": "List all comments in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments",
      "responses": [
        {
          "uuid": "4f8be891-a750-4ee1-9fc4-68d063ef9dac",
          "body": "[\n  {\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"issue_url\": \"\",\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'datatype.number'}},\n    \"pull_request_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80b327da-bf9f-4a31-936f-c7c4649b986e",
      "documentation": "Delete a comment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "bfa64df6-b09a-49d5-8920-ef6d66bb3979",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7c6bed2e-6773-4bb5-a8c1-8ca8b8654807",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "864e43d8-d388-46a4-adae-9761c2e654fe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5510d49b-70bf-44c2-9a9a-85c33008a5c6",
      "documentation": "Get a comment",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "e99287b7-c7f5-4398-8b7b-f56ad205eb42",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'datatype.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "23225cef-f6d4-4720-95fb-3dc9a0adfeab",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0fe3e79b-8206-4fd7-991d-ffbb4936a0d3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "664d9e40-d6c8-4871-a9dd-fbbed2b0ebb7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a408de31-da8c-4689-ad10-e7b844fead0e",
      "documentation": "Edit a comment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "38bc0077-8f42-41f7-8770-88efafb04a97",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'datatype.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f3ae6254-6433-4b2d-ab38-787ae8e21189",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08bef44b-9249-4236-bd5f-c9b8277aedf5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3048198c-571d-4b99-8865-0e82485c7f20",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5606bb1b-59d3-4447-9d35-7beaab8c9a8a",
      "documentation": "Remove a reaction from a comment of an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "9236c823-2360-43f7-a968-af99cd36cab0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cd4f1d3b-60b4-4239-ae42-e8066c18fe8a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7310976-38c3-403c-a19b-f563319609a7",
      "documentation": "Get a list of reactions from a comment of an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "88e4f2d2-37bf-4a99-b50f-634e5143c1db",
          "body": "[\n  {\n    \"content\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReactionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c06908fa-c418-4590-850a-2d38636d2786",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "07c9a2bf-ad1e-4167-ac9e-67d5d1673c77",
      "documentation": "Add a reaction to a comment of an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "4afed099-55c9-4a18-9ac0-e75b8b000213",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "06b759f4-12e2-4157-a3a0-42c89c2d8206",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "88412f1c-040d-4e55-a6fd-4e092c58f1a4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59cb3837-778a-452d-b189-57a330ab258c",
      "documentation": "Get an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index",
      "responses": [
        {
          "uuid": "efb66440-f560-47ac-b614-e367dae97431",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'datatype.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"is_locked\": {{faker 'datatype.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'datatype.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"open_issues\": {{faker 'datatype.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'datatype.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'datatype.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'datatype.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6069cb02-d9ee-4556-8787-9a00f59301ec",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4a88df97-6015-459d-961a-05dd724f7da5",
      "documentation": "Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/:index",
      "responses": [
        {
          "uuid": "db936bc0-d6c5-4578-b58a-e7c3b1b33586",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'datatype.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"is_locked\": {{faker 'datatype.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'datatype.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"open_issues\": {{faker 'datatype.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'datatype.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'datatype.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'datatype.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0689a64c-e9af-406c-8b46-a7dc8852e689",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b5c5a82-d56a-48d6-a421-c68a62def7ac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f6d72ba-74a9-464c-9355-0672105e79ac",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50262493-184f-4ab3-8f8f-df2c276a6c59",
      "documentation": "List all comments on an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/comments",
      "responses": [
        {
          "uuid": "508d635d-7e50-44d4-bf7d-02dc2fa401b2",
          "body": "[\n  {\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"issue_url\": \"\",\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'datatype.number'}},\n    \"pull_request_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fc0dd132-ff17-445b-96a4-de24b8c4695d",
      "documentation": "Add a comment to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/comments",
      "responses": [
        {
          "uuid": "6ca79e11-ca18-460f-ab53-6eef244d70fc",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'datatype.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a452e22f-c26b-451f-a5c6-1b3f60abefd3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "933d9b97-edd5-4a93-82fb-7da184450a7a",
      "documentation": "Delete a comment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/comments/:id",
      "responses": [
        {
          "uuid": "21b36d24-ed7c-40cb-bb0b-abf748d60026",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e5883d51-5ed0-46fc-812e-d7b3a1c1000d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da397b57-978a-4694-a09a-494437a3410a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0efc4195-e902-4c2f-9b6e-696446801b84",
      "documentation": "Edit a comment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/:index/comments/:id",
      "responses": [
        {
          "uuid": "e4acc188-499c-472e-b08a-f250d4398b7f",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'datatype.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92b08caa-7700-472d-bbdd-ce714891546a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "442de8af-0a17-4f47-8a9e-c65c2eded85f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e00e071-3d99-4a91-b419-b03ffa2a6b48",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3687b19c-da2d-44c8-89c6-fe88d630ff75",
      "documentation": "Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/deadline",
      "responses": [
        {
          "uuid": "9d756483-9ddb-4c92-8274-640d57f1b212",
          "body": "{\n  \"due_date\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "IssueDeadline",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c87ebdaa-525c-4fc4-adc9-4c5a8a40b6f1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "908b7fbd-5fac-49aa-a58f-92763d6beb40",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f236c61d-d8a7-483f-87f9-88d56b35102e",
      "documentation": "Remove all labels from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "eb5f42e2-5d17-41af-92e9-b3b84de4bfd6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e5c46fb-87f8-4104-9b86-6f85ea1193a7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "88cd2491-036f-444d-803e-88c1af482459",
      "documentation": "Get an issue's labels",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "4b83da98-2588-470a-8bf2-cd66f869dd78",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e86b98d2-9eb7-4532-8a1f-bc80a34413cb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "13b29a00-9030-4d3c-b5d1-5ef48e43b13e",
      "documentation": "Add a label to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "1da0ba2c-2b40-43a7-ae41-5c33e006953a",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3fcd5fe0-528a-471e-b570-a98c2ccb2bc7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1b368e42-e892-457c-b0fc-0c659ae83d8d",
      "documentation": "Replace an issue's labels",
      "method": "put",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "5d2845a6-d7cf-4ac8-b9f4-e13a27ee0200",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a65d3945-ab1d-4362-b024-7c0dfb9ca682",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7c5c0be-8030-499a-b92a-553995fd3ad1",
      "documentation": "Remove a label from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/labels/:id",
      "responses": [
        {
          "uuid": "39513a24-9c08-405a-b25e-8545a0e1e836",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c55b93db-157b-410c-878f-3a078391b3e5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "75ebade6-1083-4ede-ba8e-a091978cd5c3",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "880937b7-45ba-48ad-ad44-a7049cf589fd",
      "documentation": "Remove a reaction from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "56c324d3-1410-478f-936e-54c33da26bd3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8241de53-2235-46f0-801f-159ab3458ced",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0edcebd0-6994-43bb-930a-be450416e396",
      "documentation": "Get a list reactions of an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "f213f486-625c-4daf-b770-f26efcb10bf3",
          "body": "[\n  {\n    \"content\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReactionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e15ee7c8-eeb1-4105-a95a-70fc8703027b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa5d5830-beaf-467d-8243-c7a2104b0ebf",
      "documentation": "Add a reaction to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "3869609c-b5fa-4405-a0f8-bef5c67d9001",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f49d3b3f-134b-4de6-836b-6ed68abee721",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a39fa4de-11f2-47ff-bcc3-565083d1e803",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0f0a4cc8-556a-45a2-a516-8bc100893279",
      "documentation": "Delete an issue's existing stopwatch.",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/delete",
      "responses": [
        {
          "uuid": "6d8d8740-aa26-4c85-aba2-85b012f2b509",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7511a3d2-4188-44f8-933a-82551a552c9a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac6c00a2-6521-44ab-8f54-858dda697e23",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1190c214-a6f8-48c6-9584-9245d94d03bd",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot cancel a non existent stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4fc15c1f-74b5-4959-a0e6-451e7367fd7c",
      "documentation": "Start stopwatch on an issue.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/start",
      "responses": [
        {
          "uuid": "6f6e192f-bf5f-4d2f-898f-3272ce3fa0ce",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c342d273-b61b-4b36-aa08-57eb14c26672",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5d22504-03c2-45c4-a804-c1b057b0e79c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "134eb70c-5580-4418-853a-cc5d3a9a69c6",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot start a stopwatch again if it already exists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "016d3429-f071-4bb8-b3a1-90549fd0561a",
      "documentation": "Stop an issue's existing stopwatch.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/stop",
      "responses": [
        {
          "uuid": "714076cc-8132-4a0a-bb8e-eff99a08e938",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7cc26d11-9173-4ca7-ad3f-901f7c09be18",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "77cfbebb-5005-4135-a876-47c27e5ca390",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5806da2-0148-4594-84d1-c1d05fa00749",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot stop a non existent stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5c81f68e-9fdb-4a62-aa8f-d55332e540cf",
      "documentation": "Get users who subscribed on an issue.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions",
      "responses": [
        {
          "uuid": "dbb74b28-2806-447d-91e2-66c3cca64786",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ebf62ac-5324-46de-bec3-d40b2b886e98",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fca3ad3f-7812-4deb-8be0-87868ab46f25",
      "documentation": "Check if user is subscribed to an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/check",
      "responses": [
        {
          "uuid": "0ff2967c-4ebd-477b-8154-b0021a87cf09",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'datatype.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'datatype.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cfa54fa6-2ab9-414d-9aa1-ba7c431f5e50",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "31646434-9291-42a3-aebf-56038dbf1ee6",
      "documentation": "Unsubscribe user from issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/:user",
      "responses": [
        {
          "uuid": "4773ccd0-a437-4fe0-b32b-e9ce1cf1a890",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Already unsubscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "623a79f6-d071-4083-a266-2b61ce1f71e2",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully Unsubscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "071f36a3-912f-4954-a081-9ab48a6cc017",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "User can only subscribe itself if he is no admin",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ab1eea28-546e-476a-a167-9051c23f7bbd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a920e5a1-0c54-4e52-854c-feac1e322c03",
      "documentation": "Subscribe user to issue",
      "method": "put",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/:user",
      "responses": [
        {
          "uuid": "b66078e1-b46f-4755-b089-8a391203cd59",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Already subscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "586ba3af-253a-48cb-9ce1-8617f3b88fe3",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully Subscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72efa6ce-7fb5-4612-a092-cf3968937cda",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "User can only subscribe itself if he is no admin",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f09cb4f5-a01f-40ec-a54a-3a066dfb517a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "914dd3d4-67e9-47c8-910b-20435a85bce9",
      "documentation": "Reset a tracked time of an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "735f4e75-cf77-4d75-973f-9cbc7c0b9b11",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1ef5a1e2-9c26-4298-9f9e-3b1c47d34590",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21929349-ab9f-40cd-b99d-8570f27b29df",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b95a309e-2b90-453d-b570-334d81b3e01f",
      "documentation": "List an issue's tracked times",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "bcad9135-848b-4c71-8482-dd0ce1da02e3",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'datatype.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'datatype.number'}},\n          \"following_count\": {{faker 'datatype.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"is_admin\": {{faker 'datatype.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'datatype.boolean'}},\n          \"restricted\": {{faker 'datatype.boolean'}},\n          \"starred_repos_count\": {{faker 'datatype.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'datatype.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_locked\": {{faker 'datatype.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'datatype.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'datatype.number'}},\n        \"open_issues\": {{faker 'datatype.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'datatype.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'datatype.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'datatype.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'datatype.number'}},\n    \"time\": {{faker 'datatype.number'}},\n    \"user_id\": {{faker 'datatype.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eac9ee19-a3dc-46ee-908a-6ebb211258b7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad184989-5b39-430e-9421-e95c485b1cbe",
      "documentation": "Add tracked time to a issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "cec76692-91de-4173-b47b-c329dba27998",
          "body": "{\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"issue\": {\n    \"assignee\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'datatype.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_locked\": {{faker 'datatype.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'datatype.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'datatype.number'}},\n      \"open_issues\": {{faker 'datatype.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'datatype.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'datatype.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'datatype.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  },\n  \"issue_id\": {{faker 'datatype.number'}},\n  \"time\": {{faker 'datatype.number'}},\n  \"user_id\": {{faker 'datatype.number'}},\n  \"user_name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTime",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a5ceebfd-d966-4beb-ac01-9cd977d60b9e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e19e0cf6-baba-489a-bda9-af778601cb5f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec7b2aee-c3e5-42af-b558-719776e895cb",
      "documentation": "Delete specific tracked time",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/times/:id",
      "responses": [
        {
          "uuid": "19add6cf-ccdd-43ee-b3d7-e4c82ab80b0d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f11f8684-9ef6-44c9-8d24-a8c7c5c900b4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36c9875c-df25-49eb-9885-7800e2790e97",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51717e40-89c1-4446-b409-f052ab7d6772",
      "documentation": "List a repository's keys",
      "method": "get",
      "endpoint": "repos/:owner/:repo/keys",
      "responses": [
        {
          "uuid": "74636a07-0ff1-4968-9db1-33d5ca8dee9c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "78e122ed-3faa-4091-baba-e771ee46410c",
      "documentation": "Add a key to a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/keys",
      "responses": [
        {
          "uuid": "47ce0352-f8e2-4e7f-b9d2-9d0930a17b89",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12e3a303-21d8-4abd-8d39-77b550988a34",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c84226f-6c7e-4317-8235-843b86c41bb8",
      "documentation": "Delete a key from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/keys/:id",
      "responses": [
        {
          "uuid": "b48c04e7-0489-41bd-a785-4d07e0a76f55",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4734ee91-11c9-4fc2-b073-31c134a09028",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd09e991-f180-4149-ba56-8c4c107b1bb5",
      "documentation": "Get a repository's key by id",
      "method": "get",
      "endpoint": "repos/:owner/:repo/keys/:id",
      "responses": [
        {
          "uuid": "6ed4b7bb-36a5-4124-81fe-eb2ae385f604",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ed16900-7a96-4a47-8136-92d3715a8837",
      "documentation": "Get all of a repository's labels",
      "method": "get",
      "endpoint": "repos/:owner/:repo/labels",
      "responses": [
        {
          "uuid": "9fb77ddd-df28-4fc6-8fbe-e20581f93ad1",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b6bdd5eb-de09-45ad-8b17-859b7483966b",
      "documentation": "Create a label",
      "method": "post",
      "endpoint": "repos/:owner/:repo/labels",
      "responses": [
        {
          "uuid": "5b7a8daa-a4fc-47c1-a447-4189b027213d",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "75c1ab5d-a23d-4452-a6b7-9fca790cadba",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3b57e1f-12cc-4c86-8d4c-97e986623f66",
      "documentation": "Delete a label",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "662954ca-e660-436c-bd9a-6d08bfd98fe7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "08fab6b3-85ec-41d3-8392-398329897afb",
      "documentation": "Get a single label",
      "method": "get",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "01ab15e9-af67-4aa6-bea3-678eb5ac151a",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "42afed68-2f18-4c91-9736-276ba063929c",
      "documentation": "Update a label",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "791bac1a-536c-4824-b0c4-d21475bdca2e",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8d0104d1-7a45-4bb4-93ea-a542d83794d9",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "67733fa9-8b3e-4438-879b-f81b56da6fee",
      "documentation": "Get languages and number of bytes of code written",
      "method": "get",
      "endpoint": "repos/:owner/:repo/languages",
      "responses": [
        {
          "uuid": "55b74333-2ca5-4173-baad-2018751c9889",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "LanguageStatistics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "85ff924d-1dab-408b-8447-6140090e4e5b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d2c4ffd8-f7ca-4dda-98ec-b77df5f3d22f",
      "documentation": "Get all of a repository's opened milestones",
      "method": "get",
      "endpoint": "repos/:owner/:repo/milestones",
      "responses": [
        {
          "uuid": "a20bbbea-c4a8-4c54-9f49-4eabe080c3d3",
          "body": "[\n  {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'datatype.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"open_issues\": {{faker 'datatype.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "MilestoneList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "555c037f-189c-410e-a04b-fb030af35e88",
      "documentation": "Create a milestone",
      "method": "post",
      "endpoint": "repos/:owner/:repo/milestones",
      "responses": [
        {
          "uuid": "cd85f782-2212-40fc-9505-30f7b1287d7c",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'datatype.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"open_issues\": {{faker 'datatype.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d9df686c-b598-4f74-8f2d-125bf6f52bd3",
      "documentation": "Delete a milestone",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "a9542e42-ce60-469f-ba26-b9986ae89d04",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bdfeb5ac-9af2-4ca3-84c8-530abc1b6fd9",
      "documentation": "Get a milestone",
      "method": "get",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "977345eb-6623-4385-bc22-51e96bdfed91",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'datatype.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"open_issues\": {{faker 'datatype.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0b77b9f0-393b-497d-ac9d-d8487b204e9c",
      "documentation": "Update a milestone",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "73f176f7-2fd7-46bd-9de9-abc146a795f1",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'datatype.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"open_issues\": {{faker 'datatype.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5785e7a-46eb-4797-832b-4c699795272c",
      "documentation": "Sync a mirrored repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/mirror-sync",
      "responses": [
        {
          "uuid": "36d8dee9-2f49-494b-b209-b65086cbf777",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6bb85191-7268-4a33-86f3-69af4c4d201e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4602d28a-927e-4355-bff5-7203d09b9d51",
      "documentation": "List users's notification threads on a specific repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/notifications",
      "responses": [
        {
          "uuid": "7e0433c5-f08d-4362-9644-9bd6640c21c5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59b04cbb-a835-4ac9-bd49-8c6ea60630b3",
      "documentation": "Mark notification threads as read, pinned or unread on a specific repo",
      "method": "put",
      "endpoint": "repos/:owner/:repo/notifications",
      "responses": [
        {
          "uuid": "0f6951bf-35e6-4e38-b9fb-0bbe046f796e",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dac2656f-2e74-4591-b928-1192cc412469",
      "documentation": "List a repo's pull requests",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls",
      "responses": [
        {
          "uuid": "25931c40-93f6-43ed-89f1-f5d8cb294dc9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97519dc7-77d2-46b3-8f44-918544c4b95d",
      "documentation": "Create a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls",
      "responses": [
        {
          "uuid": "9c3b1266-1042-4848-a84e-e5e0f38456d1",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ae0d6c55-8d5f-4819-903b-e6bd4d09aeeb",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2771cd6c-b566-444d-a5ee-e9a667866b28",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0cfdb85d-9e68-447d-90a6-35fad5c38c29",
      "documentation": "Get a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index",
      "responses": [
        {
          "uuid": "b0592f13-fd5f-4e1b-996f-88c04e50e38f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cc96094f-d31e-4a31-85d1-46b36ee967c2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a0c16d5b-1588-416e-82de-4c2475920839",
      "documentation": "Update a pull request. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/pulls/:index",
      "responses": [
        {
          "uuid": "0dbf1874-9ae8-4938-8493-70f1fcec4b6d",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fd682345-4e56-490a-b352-37ad973cb872",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7fe3fc3f-65b8-4816-96b5-d6faa447d527",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51ce3592-142e-46c6-bdf1-193055e31bbc",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e2353a6-5c11-4c52-add0-9405b061b5a8",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9d22bbcf-387e-4510-9dff-592da597c6e1",
      "documentation": "Get a pull request diff",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index.diff",
      "responses": [
        {
          "uuid": "a18f43e4-79b8-435c-9bcc-414393524a3f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d99d0ef5-4553-4250-856c-837af9124b29",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f689f077-9234-4302-8302-88bbbe8a0747",
      "documentation": "Get a pull request patch file",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index.patch",
      "responses": [
        {
          "uuid": "0ee2fa76-6a4d-495e-98b3-4fbcafbe178e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "80a9eadb-b505-48cf-b576-6733d747fbfb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e973940a-5f05-4040-877e-0192fd7bd1ee",
      "documentation": "Get commits for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/commits",
      "responses": [
        {
          "uuid": "4c4de1bb-859b-42a7-80e5-3ee16a7cf916",
          "body": "[\n  {\n    \"author\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-HasMore",
              "value": ""
            },
            {
              "key": "X-Page",
              "value": ""
            },
            {
              "key": "X-PageCount",
              "value": ""
            },
            {
              "key": "X-PerPage",
              "value": ""
            },
            {
              "key": "X-Total",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "57a282db-62b8-4f06-9ceb-b10010d48c53",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "28f3016d-c8fc-4047-82ef-745c42755cd5",
      "documentation": "Check if a pull request has been merged",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/merge",
      "responses": [
        {
          "uuid": "e1fbde9e-b299-40c3-a344-cf8ea9a683a5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "pull request has been merged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f866de36-6326-49ad-9138-03ced7615461",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "pull request has not been merged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30c6e82f-ab97-479c-a1b2-f031a0eda8e0",
      "documentation": "Merge a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/merge",
      "responses": [
        {
          "uuid": "4c5b84c5-3f13-41b2-8fe9-8178a6e72c4b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11051957-4c86-4125-8ba2-f85bfd7f8951",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "02977e0f-202c-4767-a40f-d2b2df76f516",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "26fa076e-d0cd-4bd6-b112-7dd199123d7c",
      "documentation": "cancel review requests for a pull request",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/pulls/:index/requested_reviewers",
      "responses": [
        {
          "uuid": "66016c8b-5e59-4cad-bb23-b867b8193d1f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1055cbcd-2360-44d2-ab59-cd8cfff20e67",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fda6cc66-4336-4d50-8a13-2cad0d1f6348",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6ed1d9c-372d-4673-ab8e-5eaede108f7b",
      "documentation": "create review requests for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/requested_reviewers",
      "responses": [
        {
          "uuid": "245377b8-0e47-4e09-9c45-11cd625646cb",
          "body": "[\n  {\n    \"body\": \"\",\n    \"comments_count\": {{faker 'datatype.number'}},\n    \"commit_id\": \"\",\n    \"dismissed\": {{faker 'datatype.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"official\": {{faker 'datatype.boolean'}},\n    \"pull_request_url\": \"\",\n    \"stale\": {{faker 'datatype.boolean'}},\n    \"state\": \"\",\n    \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n    \"team\": {\n      \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    },\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "PullReviewList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "26d5e427-83f9-4579-9b44-a091f9913f34",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "286def33-172c-4b54-b87a-0c576edfa127",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8140483a-2018-4449-b8f5-e92aae891c3c",
      "documentation": "List all reviews for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews",
      "responses": [
        {
          "uuid": "c87aed04-102b-4071-82ee-0ca8ecfa3a2f",
          "body": "[\n  {\n    \"body\": \"\",\n    \"comments_count\": {{faker 'datatype.number'}},\n    \"commit_id\": \"\",\n    \"dismissed\": {{faker 'datatype.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"official\": {{faker 'datatype.boolean'}},\n    \"pull_request_url\": \"\",\n    \"stale\": {{faker 'datatype.boolean'}},\n    \"state\": \"\",\n    \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n    \"team\": {\n      \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    },\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReviewList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc35e6b5-5ce5-4447-b82c-90cd95705315",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cbbe3731-8980-46d3-a60a-0ee8489efa7e",
      "documentation": "Create a review to an pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews",
      "responses": [
        {
          "uuid": "06a39f5f-7713-4653-b62f-b0dcbfa629d6",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'datatype.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"official\": {{faker 'datatype.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'datatype.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3cc33d7d-b0b8-463c-969a-a9777fea13eb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d42a51b1-b67a-4260-bc44-ddf0f42b286a",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e3e7b17-7b5d-4daa-92f0-79abed9fc15b",
      "documentation": "Delete a specific review from a pull request",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "7776cfc1-a021-4195-93fc-311bb3d18950",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90222d7c-ddc3-4937-9d63-237be9a5bc3b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27de8d1b-a7a4-471f-9d09-c26ed2322788",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "418ab782-aef3-4ef7-aa9f-e147d5721ae7",
      "documentation": "Get a specific review for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "318a4b31-ae3a-4523-8c2b-3e1bc9f3ac9f",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'datatype.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"official\": {{faker 'datatype.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'datatype.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f207c528-0c4c-40d2-ace3-422b5ecc4533",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cda0bc8f-4309-4ba8-9b2b-24936283b6fb",
      "documentation": "Submit a pending review to an pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "67b50a77-c6d7-4b3b-be37-c9c64bdc80fa",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'datatype.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"official\": {{faker 'datatype.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'datatype.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9e458589-49d9-4089-87ef-de0a8dd5bb7c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e118f600-c0e9-403b-8377-3cb62c8df5e0",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9a590c5-b818-49bb-a56e-768e724a7f6e",
      "documentation": "Get a specific review for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/comments",
      "responses": [
        {
          "uuid": "32d9aa23-188e-4234-a99b-d1130ce56e16",
          "body": "[\n  {\n    \"body\": \"\",\n    \"commit_id\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"diff_hunk\": \"\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"original_commit_id\": \"\",\n    \"original_position\": {{faker 'datatype.number'}},\n    \"path\": \"\",\n    \"position\": {{faker 'datatype.number'}},\n    \"pull_request_review_id\": {{faker 'datatype.number'}},\n    \"pull_request_url\": \"\",\n    \"resolver\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PullCommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4513f44e-0157-4547-bfb5-fb956462b9e1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f8713a47-5547-4df0-8ffa-a579368a3ed3",
      "documentation": "Dismiss a review for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/dismissals",
      "responses": [
        {
          "uuid": "314ddc14-1d67-4ed7-8b09-469b89ad5d42",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'datatype.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"official\": {{faker 'datatype.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'datatype.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f06197a4-d67c-42c6-b55d-b5f4ec43aebc",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70b3de14-3361-4b80-9cf8-e1354f9a0981",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "be5311a5-e65b-4874-a301-b5c3e67e8815",
      "documentation": "Cancel to dismiss a review for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/undismissals",
      "responses": [
        {
          "uuid": "bee77963-cfa6-4a5d-afa9-8df2fec0b38d",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'datatype.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"official\": {{faker 'datatype.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'datatype.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8e898d30-e173-4e3b-a88b-bd8308dc1a04",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b6fc4d69-8489-4a86-9149-5074db926bf4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6eca0264-6d02-4fbc-9738-b0e76dc4f573",
      "documentation": "Merge PR's baseBranch into headBranch",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/update",
      "responses": [
        {
          "uuid": "bda89336-30d6-4685-9a07-a9f243c6597a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "91428a75-a073-4489-955f-a765da77ccf5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "314cc034-22f4-40be-8dfb-c4714b7c3e99",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eaab5069-b6e8-4632-a080-91b2f51901ba",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a740f935-3f0c-42bd-b72a-d65cc778da79",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2819adfc-77bf-4f86-85b1-d2c923616802",
      "documentation": "Get a file from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/raw/:filepath",
      "responses": [
        {
          "uuid": "17ea2109-3d1d-48dd-9187-ff9e01366a04",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5621ba6d-9dca-414e-8a8d-fc606edf1294",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2842994c-a8a5-4421-8b74-6ce4d2704842",
      "documentation": "List a repo's releases",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases",
      "responses": [
        {
          "uuid": "3a3c89ef-ebf2-4bee-a7a9-3831aa3f9a32",
          "body": "[\n  {\n    \"assets\": [\n      {\n        \"browser_download_url\": \"\",\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"download_count\": {{faker 'datatype.number'}},\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"size\": {{faker 'datatype.number'}},\n        \"uuid\": \"\"\n      }\n    ],\n    \"author\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"draft\": {{faker 'datatype.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"prerelease\": {{faker 'datatype.boolean'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"tag_name\": \"\",\n    \"tarball_url\": \"\",\n    \"target_commitish\": \"\",\n    \"url\": \"\",\n    \"zipball_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReleaseList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01247c60-9dd0-45a2-a1d0-7daee359eedc",
      "documentation": "Create a release",
      "method": "post",
      "endpoint": "repos/:owner/:repo/releases",
      "responses": [
        {
          "uuid": "aa46339c-a50d-4ada-bbc2-24c5b446359f",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'datatype.number'}},\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'datatype.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'datatype.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3df76ff0-1e6c-4029-a05e-d92855e85b66",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03f38ac9-3dd6-4c7f-a51f-ba3a75ef846f",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d5fd627-d581-4313-8c76-28b7803b86a0",
      "documentation": "Delete a release by tag name",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/tags/:tag",
      "responses": [
        {
          "uuid": "bea13455-38f1-4158-9f61-17f3140516f8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f32ad75e-6905-45b8-b262-9e03e98b282e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1a4b01fd-9227-4a40-8312-eef7db169e2a",
      "documentation": "Get a release by tag name",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/tags/:tag",
      "responses": [
        {
          "uuid": "2556563e-74a6-4307-b58a-fe74b0e9d5d5",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'datatype.number'}},\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'datatype.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'datatype.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d832b681-e007-4211-aeec-fd6b4bc0d3ad",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b8cd2743-ab19-434e-83ce-b4e9b2ae2cee",
      "documentation": "Delete a release",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "235b292a-d337-4dde-8e92-d6e7a31fef49",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b289fb41-d8a3-4a61-a235-f1dc20c06ae8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ff3c0d5c-3af7-4e0c-a450-b97133d132aa",
      "documentation": "Get a release",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "3df213e4-b17c-4d37-b434-6448da9b8dc7",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'datatype.number'}},\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'datatype.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'datatype.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc26809a-99b7-4711-8810-b52ba40557e5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95f21307-6b43-4409-b29c-35ac4c1ad3c8",
      "documentation": "Update a release",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "6324ffe5-bba9-4a84-9d45-7407719d4fbf",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'datatype.number'}},\n      \"id\": {{faker 'datatype.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'datatype.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'datatype.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'datatype.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1a9b31be-943e-407d-8d8f-e21bb0a5bf2d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd8e2f90-fc62-4b73-8843-f6c6134c7e08",
      "documentation": "List release's attachments",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id/assets",
      "responses": [
        {
          "uuid": "3773936e-22c7-4037-94d9-d8e6387b1fe0",
          "body": "[\n  {\n    \"browser_download_url\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"download_count\": {{faker 'datatype.number'}},\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"size\": {{faker 'datatype.number'}},\n    \"uuid\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "AttachmentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6837c1c2-ec00-49f1-a0b0-45ff8242b28e",
      "documentation": "Create a release attachment",
      "method": "post",
      "endpoint": "repos/:owner/:repo/releases/:id/assets",
      "responses": [
        {
          "uuid": "9200f322-5d50-4791-a762-4b011ea620d0",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'datatype.number'}},\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'datatype.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aaee01fb-4f13-446c-ad46-fb86083ce352",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e8fee28e-45e2-4294-a2f6-67f5e201a48d",
      "documentation": "Delete a release attachment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "c48ec00f-4d6f-430c-aef6-3e133ef2f057",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2d93099e-500d-4187-aec5-71d17e975dbc",
      "documentation": "Get a release attachment",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "e57b3fab-4a5a-439b-9b8d-7a5eebfca405",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'datatype.number'}},\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'datatype.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a8529beb-3c23-4c59-b229-fc4ced63544b",
      "documentation": "Edit a release attachment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "c7625a36-62a4-41b7-bb48-fbfea2da23b7",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'datatype.number'}},\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'datatype.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1d4dd856-20d5-48c3-bcd0-8a1379a74876",
      "documentation": "Return all users that can be requested to review in this repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/reviewers",
      "responses": [
        {
          "uuid": "b41fcdc0-0aae-4ca0-a611-3b8ac11d3485",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66d570ab-151e-4cac-932f-08cdd9762d79",
      "documentation": "Get signing-key.gpg for given repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/signing-key.gpg",
      "responses": [
        {
          "uuid": "88ce3f0f-a7bc-459e-bcad-963a27bfedbf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "GPG armored public key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0e74db19-97b5-48fe-a0ce-56108c0a3d85",
      "documentation": "List a repo's stargazers",
      "method": "get",
      "endpoint": "repos/:owner/:repo/stargazers",
      "responses": [
        {
          "uuid": "79be9f8e-cd47-493b-ba07-b45dfa89cec1",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3b30836-8e03-482c-a5bd-3fea70fecf9d",
      "documentation": "Get a commit's statuses",
      "method": "get",
      "endpoint": "repos/:owner/:repo/statuses/:sha",
      "responses": [
        {
          "uuid": "aa686074-d6b5-4487-9f6e-76248920e48c",
          "body": "[\n  {\n    \"context\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"creator\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"status\": \"\",\n    \"target_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitStatusList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b49a46f-0024-4788-927d-92883efc00c1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a0f3ace9-09a7-4025-839c-e3ab0f1c97c0",
      "documentation": "Create a commit status",
      "method": "post",
      "endpoint": "repos/:owner/:repo/statuses/:sha",
      "responses": [
        {
          "uuid": "ee9c5bda-122a-402f-b04c-8a87bdbddd2c",
          "body": "{\n  \"context\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"creator\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"status\": \"\",\n  \"target_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "CommitStatus",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "68209496-9bbd-4bfc-b620-9f51ad06d85d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e0c6dd0-4fb9-462f-a6d2-21a68e599898",
      "documentation": "List a repo's watchers",
      "method": "get",
      "endpoint": "repos/:owner/:repo/subscribers",
      "responses": [
        {
          "uuid": "be662110-baa2-48bb-b254-e836c9475aed",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9f531f9-9833-41da-918f-2890d02e7bf7",
      "documentation": "Unwatch a repo",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "c493b3e0-95e1-4b9d-b62b-057c169a4314",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "39c26e37-1e21-4d38-83f3-6db161916ecf",
      "documentation": "Check if the current user is watching a repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "3c534558-075c-4889-aabf-58060c042140",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'datatype.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'datatype.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "567c6c62-e8df-47fc-8215-b00f9b1d3399",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User is not watching this repo or repo do not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a0ae029e-1ea6-471c-94ca-a81c1e696007",
      "documentation": "Watch a repo",
      "method": "put",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "94c671cc-6a0b-4dc4-ab47-6118885df016",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'datatype.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'datatype.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c7b723c8-5bcc-4781-9761-a5f568651089",
      "documentation": "List a repository's tags",
      "method": "get",
      "endpoint": "repos/:owner/:repo/tags",
      "responses": [
        {
          "uuid": "a242be71-32de-495c-85ae-7dad3742d3d6",
          "body": "[\n  {\n    \"commit\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"name\": \"\",\n    \"tarball_url\": \"\",\n    \"zipball_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TagList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03ac89a4-c74c-4228-833f-fd6342a9ee15",
      "documentation": "Create a new git tag in a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/tags",
      "responses": [
        {
          "uuid": "67f08166-3129-4b26-b0f3-79e3d4c4aeec",
          "body": "{\n  \"commit\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"id\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"tarball_url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f5aa1a67-e2b1-458d-8c5d-b70d751a845a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d57d779f-6f79-46ac-a246-ca5da7ea1c41",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIConflict is a conflict empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7dbded4f-3f71-42d7-a0ea-ea8e79e6ce32",
      "documentation": "Delete a repository's tag by name",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/tags/:tag",
      "responses": [
        {
          "uuid": "a3c3ee3d-4478-4208-9d69-3d4e2b871859",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3177cbd9-c0b0-41f6-8316-5f8124ebaf95",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4bfda31-dde0-450d-9608-aaaaae8d63ef",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIConflict is a conflict empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb7b9438-7d24-43ec-895b-5ed50b25541f",
      "documentation": "Get the tag of a repository by tag name",
      "method": "get",
      "endpoint": "repos/:owner/:repo/tags/:tag",
      "responses": [
        {
          "uuid": "40f470eb-34db-46ae-8b96-65617bafc448",
          "body": "{\n  \"commit\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"id\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"tarball_url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e1be22cb-8523-47bf-bc42-087155e9b078",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e1e89f3a-30e1-442b-b7b3-6c6583b37617",
      "documentation": "List a repository's teams",
      "method": "get",
      "endpoint": "repos/:owner/:repo/teams",
      "responses": [
        {
          "uuid": "b6f1b0d5-f51c-41a6-8dec-35cc5292b890",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "677fcf61-1bb1-4496-8c1e-2288bc269f9a",
      "documentation": "Delete a team from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "53b7a843-b2c5-4c98-9f5c-0621e48262b6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "272f74cc-a55d-4482-a537-ab958b738c09",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0ecc98f-accb-4a87-8adc-8a5f1d5a5932",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a99c5a4-dd92-4cb5-ab80-b9c02abba3a9",
      "documentation": "Check if a team is assigned to a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "3741d695-c546-4924-a271-8515e9e505b1",
          "body": "{\n  \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b5047df-9686-47b9-8331-e97e0950a24e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7b6e50a-1d40-410e-99c4-c30cd0e52460",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "35e12dd8-a700-414b-82ba-a6f20d039239",
      "documentation": "Add a team to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "39cf81c0-793e-4836-a768-a6ab9eb09f27",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cfeb6ec5-ef9f-452b-98d1-f4b03d16610a",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7dd53873-f11f-41f0-b5e0-e18bf6ad21ea",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "70ff30af-29a4-4225-be38-fecaf2e7e34a",
      "documentation": "List a repo's tracked times",
      "method": "get",
      "endpoint": "repos/:owner/:repo/times",
      "responses": [
        {
          "uuid": "47bf3c4d-dc9f-4509-9229-5719020f96e5",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'datatype.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'datatype.number'}},\n          \"following_count\": {{faker 'datatype.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"is_admin\": {{faker 'datatype.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'datatype.boolean'}},\n          \"restricted\": {{faker 'datatype.boolean'}},\n          \"starred_repos_count\": {{faker 'datatype.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'datatype.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_locked\": {{faker 'datatype.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'datatype.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'datatype.number'}},\n        \"open_issues\": {{faker 'datatype.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'datatype.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'datatype.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'datatype.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'datatype.number'}},\n    \"time\": {{faker 'datatype.number'}},\n    \"user_id\": {{faker 'datatype.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "da428ee2-904e-4bde-a334-b6ebffd438c6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f09d9d6-fa0d-4656-b0dc-03bc4d6c6c16",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "10d00478-f5dc-4b20-a38d-8b1b9d33f709",
      "documentation": "List a user's tracked times in a repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/times/:user",
      "responses": [
        {
          "uuid": "3211ebb0-499c-42a5-845f-810b8050cb5a",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'datatype.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'datatype.number'}},\n          \"following_count\": {{faker 'datatype.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"is_admin\": {{faker 'datatype.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'datatype.boolean'}},\n          \"restricted\": {{faker 'datatype.boolean'}},\n          \"starred_repos_count\": {{faker 'datatype.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'datatype.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_locked\": {{faker 'datatype.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'datatype.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'datatype.number'}},\n        \"open_issues\": {{faker 'datatype.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'datatype.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'datatype.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'datatype.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'datatype.number'}},\n    \"time\": {{faker 'datatype.number'}},\n    \"user_id\": {{faker 'datatype.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "787691af-d6b6-4062-b320-edd475aa297f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "78bfa824-cbdf-4525-8877-872f9b0c15f9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c7f6b47-43c4-4d42-9aa2-bd818a6457d2",
      "documentation": "Get list of topics that a repository has",
      "method": "get",
      "endpoint": "repos/:owner/:repo/topics",
      "responses": [
        {
          "uuid": "bbe7e72a-82c7-4f2f-9dfb-7fda5dbf5274",
          "body": "{\n  \"topics\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TopicNames",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9dd1942c-16d4-4792-aab9-e5503a6e2cf1",
      "documentation": "Replace list of topics for a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/topics",
      "responses": [
        {
          "uuid": "3f38d878-4f52-4a38-8790-c73f67bd3c08",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d84e17e5-9f52-4fad-a97e-970ecfba5374",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e0a65a6-9bf8-4bf8-baa5-0639dd0a841d",
      "documentation": "Delete a topic from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/topics/:topic",
      "responses": [
        {
          "uuid": "6186ce83-fdd3-4343-8a51-68534dec55f1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fa531992-21ee-4edc-81e9-6bbf604bab75",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3aea7af-1fe7-4ab8-8317-213ef4018f77",
      "documentation": "Add a topic to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/topics/:topic",
      "responses": [
        {
          "uuid": "0f411f19-9aa0-44cc-aa5c-4d0957ca1c01",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b19ff54d-5075-4600-8409-da10394959c4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a07b1b25-b181-4ac0-b45a-26c375d93c72",
      "documentation": "Transfer a repo ownership",
      "method": "post",
      "endpoint": "repos/:owner/:repo/transfer",
      "responses": [
        {
          "uuid": "ee225d5c-e97e-45c2-9999-e4d98a2e580c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56b1eedb-ebfc-41d1-a011-f10983429da5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42e54609-0512-497b-8f81-3b0f2d5c143c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "177a3c71-1d87-44ac-83b8-bb0840765c3c",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cd259410-0449-44ab-9e37-9db49746148b",
      "documentation": "Create a repository using a template",
      "method": "post",
      "endpoint": "repos/:template_owner/:template_repo/generate",
      "responses": [
        {
          "uuid": "8c0ad7fd-ff14-403a-9d74-31391b009c2f",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ca0ecb4-8b94-479e-a304-586907e9a88a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fb3132f-59b2-40cd-ab57-f88061987a1e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03afb867-cfbe-4c19-8578-83c717262e89",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The repository with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5bfdc22b-e449-41cb-8df4-9ee8ce75abff",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "23870c01-2c25-4e85-a07b-07d61d688499",
      "documentation": "Get a repository by id",
      "method": "get",
      "endpoint": "repositories/:id",
      "responses": [
        {
          "uuid": "2fea6150-fc05-4103-b525-30227e820b68",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "03146f37-fd8f-4290-a1eb-c5e0469029c6",
      "documentation": "Get instance's global settings for api",
      "method": "get",
      "endpoint": "settings/api",
      "responses": [
        {
          "uuid": "b4e90ddf-73c4-42c0-a195-450e5cffc701",
          "body": "{\n  \"default_git_trees_per_page\": {{faker 'datatype.number'}},\n  \"default_max_blob_size\": {{faker 'datatype.number'}},\n  \"default_paging_num\": {{faker 'datatype.number'}},\n  \"max_response_items\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralAPISettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ae08bc0-bb35-4e82-b5f5-cd5ed756a0b6",
      "documentation": "Get instance's global settings for Attachment",
      "method": "get",
      "endpoint": "settings/attachment",
      "responses": [
        {
          "uuid": "a09fb8ce-fc79-4659-a56d-785d7b62d111",
          "body": "{\n  \"allowed_types\": \"\",\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"max_files\": {{faker 'datatype.number'}},\n  \"max_size\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralAttachmentSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a2e4f694-3b8f-489d-b78c-d09548601554",
      "documentation": "Get instance's global settings for repositories",
      "method": "get",
      "endpoint": "settings/repository",
      "responses": [
        {
          "uuid": "069d3735-36e2-4485-9a1f-f8e46d7e6df2",
          "body": "{\n  \"http_git_disabled\": {{faker 'datatype.boolean'}},\n  \"lfs_disabled\": {{faker 'datatype.boolean'}},\n  \"migrations_disabled\": {{faker 'datatype.boolean'}},\n  \"mirrors_disabled\": {{faker 'datatype.boolean'}},\n  \"stars_disabled\": {{faker 'datatype.boolean'}},\n  \"time_tracking_disabled\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralRepoSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4617c80c-5efe-441a-9713-d54dff54f064",
      "documentation": "Get instance's global settings for ui",
      "method": "get",
      "endpoint": "settings/ui",
      "responses": [
        {
          "uuid": "c53dac1c-6700-4fed-b013-428112d5339d",
          "body": "{\n  \"allowed_reactions\": [\n    \"\"\n  ],\n  \"custom_emojis\": [\n    \"\"\n  ],\n  \"default_theme\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralUISettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3055f2f9-271b-4f21-864e-6e6b84b45472",
      "documentation": "Get default signing-key.gpg",
      "method": "get",
      "endpoint": "signing-key.gpg",
      "responses": [
        {
          "uuid": "fe0cbbe2-b0c0-492a-a1e8-a2a42a0a782a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "GPG armored public key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "258b64bf-4f1e-47cf-811a-ea3b0d1916a8",
      "documentation": "Delete a team",
      "method": "delete",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "8d768cad-573e-4774-99e9-03cda3a740c3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "team deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "48b1aa5e-f52a-4350-9b61-b125d6272670",
      "documentation": "Get a team",
      "method": "get",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "d464e375-638a-44e8-85d1-d3d20c4f3cd4",
          "body": "{\n  \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b04e78d2-11b3-4293-9b4a-28cf2a3d4b8f",
      "documentation": "Edit a team",
      "method": "patch",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "74310b4a-2c19-4462-8124-9825f914b86e",
          "body": "{\n  \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dbc2dfd1-c20a-4a4c-931b-c073da3e29ce",
      "documentation": "List a team's members",
      "method": "get",
      "endpoint": "teams/:id/members",
      "responses": [
        {
          "uuid": "6a9c4315-916a-43c5-9790-5836a2c5dee4",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0500c944-521a-418a-9060-daa9f9a52ac1",
      "documentation": "Remove a team member",
      "method": "delete",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "2033c475-c4d2-4952-8ec2-25446020a52d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c5b03427-1a61-47bf-a515-70317caac054",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9cc4185-d675-47c1-ae73-4fbd831d10cc",
      "documentation": "List a particular member of team",
      "method": "get",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "cb981706-5081-4d36-a1b7-209457615300",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'datatype.number'}},\n  \"following_count\": {{faker 'datatype.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"is_admin\": {{faker 'datatype.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'datatype.boolean'}},\n  \"restricted\": {{faker 'datatype.boolean'}},\n  \"starred_repos_count\": {{faker 'datatype.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c647db7d-566f-4993-948c-a7a02a194bbd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3a65c1a2-fd5c-4d2f-98cc-5e8404d26757",
      "documentation": "Add a team member",
      "method": "put",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "0aab7a2b-03d6-412d-a707-fe399c14df02",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3f09d6a6-6eaf-4c93-be56-c046a9c4fbe2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a089482-9987-4510-800b-cf23c75a24a9",
      "documentation": "List a team's repos",
      "method": "get",
      "endpoint": "teams/:id/repos",
      "responses": [
        {
          "uuid": "b4361423-01a3-4249-b56f-2cf55ebf5d5e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e81efc17-bda1-4baa-9b45-c9c9d3de6915",
      "documentation": "Remove a repository from a team",
      "method": "delete",
      "endpoint": "teams/:id/repos/:org/:repo",
      "responses": [
        {
          "uuid": "b8336795-7182-44b3-aa4a-43855ca0a9cb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9eafb767-5c4e-4244-a83f-3580a9d2c67f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "63760d5a-a2ac-4c2e-87ad-8a073a95631e",
      "documentation": "Add a repository to a team",
      "method": "put",
      "endpoint": "teams/:id/repos/:org/:repo",
      "responses": [
        {
          "uuid": "4002ffaf-94b4-48e3-8640-345d1491b8ff",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8523470-f3f0-4e30-a0d3-8ef4099a38f3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "29adfcc1-237a-4a0c-a6d9-80452e01977b",
      "documentation": "search topics via keyword",
      "method": "get",
      "endpoint": "topics/search",
      "responses": [
        {
          "uuid": "07f30fc5-4c39-4311-bae1-eccf2c42c6d8",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"repo_count\": {{faker 'datatype.number'}},\n    \"topic_name\": \"\",\n    \"updated\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TopicListResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "63f9e76d-93bd-4be7-86eb-c6e4ed4ed537",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "963191fc-fde5-4ad1-bd91-81984aaaa972",
      "documentation": "Get the authenticated user",
      "method": "get",
      "endpoint": "user",
      "responses": [
        {
          "uuid": "6a056066-a71d-408b-b1c3-075da5ec77a0",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'datatype.number'}},\n  \"following_count\": {{faker 'datatype.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"is_admin\": {{faker 'datatype.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'datatype.boolean'}},\n  \"restricted\": {{faker 'datatype.boolean'}},\n  \"starred_repos_count\": {{faker 'datatype.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "91b584dc-3c86-4f14-88be-e3a33ceac054",
      "documentation": "List the authenticated user's oauth2 applications",
      "method": "get",
      "endpoint": "user/applications/oauth2",
      "responses": [
        {
          "uuid": "24c44a9c-0f41-4224-bfb7-a09386bb6981",
          "body": "[\n  {\n    \"client_id\": \"\",\n    \"client_secret\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"redirect_uris\": [\n      \"\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2ApplicationList represents a list of OAuth2 applications.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e65cd62e-6f4f-471f-8a9b-99934a80c283",
      "documentation": "creates a new OAuth2 application",
      "method": "post",
      "endpoint": "user/applications/oauth2",
      "responses": [
        {
          "uuid": "e7d50947-da33-4541-a3b4-db93bf34beda",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8bbbb672-cf25-44e1-81cf-db8390400eab",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e8e04daa-5b59-4848-9edc-b005ebfe6cc7",
      "documentation": "delete an OAuth2 Application",
      "method": "delete",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "32a4ad01-49d6-4135-957b-dd964c4103d2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ee4f6cfa-1d61-462c-9817-3785b3eb5c33",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b33ed36e-520f-4356-ac4e-0f6836ea027c",
      "documentation": "get an OAuth2 Application",
      "method": "get",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "0c5ab733-dc26-406d-8a37-3c3e73cb4dd5",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7e50fd02-04cc-451a-8b96-a122a61b17c2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d502e676-e1b9-4d2c-902f-b946fbc54673",
      "documentation": "update an OAuth2 Application, this includes regenerating the client secret",
      "method": "patch",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "56d9391f-b75f-44ec-8d34-7559bbd32b86",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4bde7699-5d61-4df3-a734-de3c874e43b2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "962ce665-fbf3-4907-a2be-b986ca8e3033",
      "documentation": "Delete email addresses",
      "method": "delete",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "dc452a25-b88f-499a-974e-5a890a6f8dcd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3730a5e3-ac72-4816-8853-30e7a91fa1fe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4caa6d6-b4c4-42a5-ab10-0a5f7607da2b",
      "documentation": "List the authenticated user's email addresses",
      "method": "get",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "43da3991-e7b3-4864-a42c-4e07621c359f",
          "body": "[\n  {\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"primary\": {{faker 'datatype.boolean'}},\n    \"verified\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "EmailList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4841b044-ba47-4d17-8a8b-8aeed25fb63f",
      "documentation": "Add email addresses",
      "method": "post",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "8d1eee88-425b-4b48-a502-5c0a49325672",
          "body": "[\n  {\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"primary\": {{faker 'datatype.boolean'}},\n    \"verified\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "EmailList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "89c6426e-3ce6-4035-a54b-bbf2ff8ef46b",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b6ee08e7-5a78-4262-9897-11554f1241d9",
      "documentation": "List the authenticated user's followers",
      "method": "get",
      "endpoint": "user/followers",
      "responses": [
        {
          "uuid": "43352ab3-7255-47ba-9371-0bdcd57d3f19",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "65a28633-6340-4c4a-a3c3-c20e4bdd5445",
      "documentation": "List the users that the authenticated user is following",
      "method": "get",
      "endpoint": "user/following",
      "responses": [
        {
          "uuid": "f722f093-11a2-4134-820a-fb2bd426ecb5",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f51508e3-353c-4816-89fc-6ad7be5587d1",
      "documentation": "Unfollow a user",
      "method": "delete",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "55c90f5b-a97a-4b22-b5e7-cdf211ffb28f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8721e38f-0651-410c-aa90-337aba5dde90",
      "documentation": "Check whether a user is followed by the authenticated user",
      "method": "get",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "bb9063aa-5d2f-4e24-88c4-5655588724dc",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "42fcd449-aa37-46af-a957-096f6c6dfe72",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cded0b6e-72fd-4c90-a595-21fa6ab93bbf",
      "documentation": "Follow a user",
      "method": "put",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "bff75895-0c70-47da-bc16-894d8e410c13",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7af84e0b-f5b3-420e-9ce7-a2e6f3cf2b00",
      "documentation": "Get a Token to verify",
      "method": "get",
      "endpoint": "user/gpg_key_token",
      "responses": [
        {
          "uuid": "7912bc7a-41f5-4242-a697-2ca6a6dc9b4b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "92c0cb2b-9d57-4528-a797-50e333fbc6d1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "389a9fdd-e29e-4a28-a807-1c188eed9708",
      "documentation": "Verify a GPG key",
      "method": "post",
      "endpoint": "user/gpg_key_verify",
      "responses": [
        {
          "uuid": "3e4cb3e6-1bc6-4fac-b561-12cc7f6bc3e7",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ae5579f6-99b7-41a6-96f3-a9527f6673f2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c1e4a993-ccb3-4b2f-b731-92ed3a2b35a4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ebaa8aa-65b0-439a-a6cf-662ca4babe14",
      "documentation": "List the authenticated user's GPG keys",
      "method": "get",
      "endpoint": "user/gpg_keys",
      "responses": [
        {
          "uuid": "61cf9808-ac95-4083-8fde-33c3c49f9750",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b8d4321-2a37-410e-ba3f-c57634832b57",
      "documentation": "Create a GPG key",
      "method": "post",
      "endpoint": "user/gpg_keys",
      "responses": [
        {
          "uuid": "1fdbe0e7-09ed-4b9f-bb7c-ae49e037a72c",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11503043-c356-4428-9275-4c846fb8a279",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b954696e-a0ce-4f3f-98a1-011a43aa0f82",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f3d89399-0980-4cba-99cd-639027b8ffcc",
      "documentation": "Remove a GPG key",
      "method": "delete",
      "endpoint": "user/gpg_keys/:id",
      "responses": [
        {
          "uuid": "5584a9d6-ca9a-4d23-b93f-8abf32cfb35c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ec22536-67db-46ad-bea8-6b2246a49f54",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7aee1172-79ea-4948-8361-5f88ddb20a9a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0a2bace8-41a1-4ad8-b216-c85636e4d8ec",
      "documentation": "Get a GPG key",
      "method": "get",
      "endpoint": "user/gpg_keys/:id",
      "responses": [
        {
          "uuid": "6932aff5-47cf-47a0-94fd-7326972bd144",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "27a7dcba-d695-444b-a411-26db18b9f16a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8a8b69e3-f3d0-48ba-ade8-1ff29db32a0e",
      "documentation": "List the authenticated user's public keys",
      "method": "get",
      "endpoint": "user/keys",
      "responses": [
        {
          "uuid": "562fe0d7-9982-4053-a24e-dd94efb7891d",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"fingerprint\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"key\": \"\",\n    \"key_type\": \"\",\n    \"read_only\": {{faker 'datatype.boolean'}},\n    \"title\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKeyList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "297661c9-0273-49fd-be2f-f43e75a9f70b",
      "documentation": "Create a public key",
      "method": "post",
      "endpoint": "user/keys",
      "responses": [
        {
          "uuid": "77b37fab-70d1-4e76-8a40-440e302eec34",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'datatype.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8a191a6b-bd40-403f-b66c-39730d3e9b19",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5c27a79e-9bd9-46bb-a8ff-cc61f5d0a5ad",
      "documentation": "Delete a public key",
      "method": "delete",
      "endpoint": "user/keys/:id",
      "responses": [
        {
          "uuid": "f7d3cd93-3f8b-4860-a51b-e392f81ec243",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7bbe9983-eb3f-415d-9783-ef56fe64c301",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e70ec528-8636-4a89-ac35-d2b9b6e76f2d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a811648-9db3-4b22-a0c8-c2a59e01346b",
      "documentation": "Get a public key",
      "method": "get",
      "endpoint": "user/keys/:id",
      "responses": [
        {
          "uuid": "e4d0de80-5116-45f6-b5d9-7b36e1013662",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'datatype.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0458e4db-695a-46aa-9b81-632580024b2d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0083099e-2d42-4f84-89fc-9573bdc72db8",
      "documentation": "List the current user's organizations",
      "method": "get",
      "endpoint": "user/orgs",
      "responses": [
        {
          "uuid": "7ecdad26-ab38-4eb5-884e-59263f3f3493",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9dd4356f-5e34-42f9-a751-b83fbf93fdc6",
      "documentation": "List the repos that the authenticated user owns",
      "method": "get",
      "endpoint": "user/repos",
      "responses": [
        {
          "uuid": "962e40d2-e5d5-4dd7-b6a7-6d1b8ac9cf87",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e07058d-7f52-45c3-9344-dcc26c698b8f",
      "documentation": "Create a repository",
      "method": "post",
      "endpoint": "user/repos",
      "responses": [
        {
          "uuid": "3cff9c82-c471-41b7-9a8e-f61c67b40eff",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "67eceade-c8f7-492d-a1bb-2099a6fcc8d3",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The repository with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "62967469-e828-48f9-a8ac-5be6984d6f36",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51474f70-d4e5-47a4-836c-1ae4bb8a2a35",
      "documentation": "Get user settings",
      "method": "get",
      "endpoint": "user/settings",
      "responses": [
        {
          "uuid": "6d154ffc-b2ed-482d-acdd-346f037170c6",
          "body": "[\n  {\n    \"description\": \"\",\n    \"diff_view_style\": \"\",\n    \"full_name\": \"\",\n    \"hide_activity\": {{faker 'datatype.boolean'}},\n    \"hide_email\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"location\": \"\",\n    \"theme\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "45e24665-b86f-4fca-bf37-cb7bdc1991c6",
      "documentation": "Update user settings",
      "method": "patch",
      "endpoint": "user/settings",
      "responses": [
        {
          "uuid": "dbe69f48-b4db-49c7-a6a3-f8e2a1d59be1",
          "body": "[\n  {\n    \"description\": \"\",\n    \"diff_view_style\": \"\",\n    \"full_name\": \"\",\n    \"hide_activity\": {{faker 'datatype.boolean'}},\n    \"hide_email\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"location\": \"\",\n    \"theme\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7432d0c2-71d5-48db-aebd-2f60f4c5cceb",
      "documentation": "The repos that the authenticated user has starred",
      "method": "get",
      "endpoint": "user/starred",
      "responses": [
        {
          "uuid": "ebb6bf30-c8cf-42b5-95ca-d95a02490197",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5a1e69f5-d651-428d-81a3-9edd97b1eb04",
      "documentation": "Unstar the given repo",
      "method": "delete",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "1514462a-b97e-49c5-b34f-d1754f2d597d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "df6cb8bf-88ce-4782-b7d2-7ef14c00064d",
      "documentation": "Whether the authenticated is starring the repo",
      "method": "get",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "3a229bde-308b-4385-bd19-970233e779da",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d04bedb-6dec-4b4e-96b8-bce6d71fe309",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0a48a990-e342-4df7-ab96-7b31c10d8983",
      "documentation": "Star the given repo",
      "method": "put",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "9598834d-125d-4ece-a759-6b01170ba845",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "29c2761c-f0da-4b35-ab48-13f56d8363a6",
      "documentation": "Get list of all existing stopwatches",
      "method": "get",
      "endpoint": "user/stopwatches",
      "responses": [
        {
          "uuid": "3bd9e0bf-6a53-4416-bd90-17af1a2377fc",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"duration\": \"\",\n    \"issue_index\": {{faker 'datatype.number'}},\n    \"issue_title\": \"\",\n    \"repo_name\": \"\",\n    \"repo_owner_name\": \"\",\n    \"seconds\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "StopWatchList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77130d46-91ef-472a-889a-d46a99142e26",
      "documentation": "List repositories watched by the authenticated user",
      "method": "get",
      "endpoint": "user/subscriptions",
      "responses": [
        {
          "uuid": "8b81f297-2f80-41a2-bbb0-ca0f83fd3863",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "58d04308-0ec0-4e6f-ae96-1d48007e6d2f",
      "documentation": "List all the teams a user belongs to",
      "method": "get",
      "endpoint": "user/teams",
      "responses": [
        {
          "uuid": "19e5c34a-f417-4f71-9c0d-c6bb4c023e5f",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'datatype.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"includes_all_repositories\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c0f53ce7-8dd4-4350-8355-e612cf838528",
      "documentation": "List the current user's tracked times",
      "method": "get",
      "endpoint": "user/times",
      "responses": [
        {
          "uuid": "47aac8e8-0758-44ab-9c32-da6b5ae27959",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'datatype.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'datatype.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'datatype.number'}},\n          \"following_count\": {{faker 'datatype.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"is_admin\": {{faker 'datatype.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'datatype.boolean'}},\n          \"restricted\": {{faker 'datatype.boolean'}},\n          \"starred_repos_count\": {{faker 'datatype.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'datatype.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_locked\": {{faker 'datatype.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'datatype.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'datatype.number'}},\n        \"open_issues\": {{faker 'datatype.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'datatype.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'datatype.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'datatype.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'datatype.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'datatype.number'}},\n        \"following_count\": {{faker 'datatype.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"is_admin\": {{faker 'datatype.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'datatype.boolean'}},\n        \"restricted\": {{faker 'datatype.boolean'}},\n        \"starred_repos_count\": {{faker 'datatype.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'datatype.number'}},\n    \"time\": {{faker 'datatype.number'}},\n    \"user_id\": {{faker 'datatype.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5289eee-72fd-4916-ab83-76686b0f6a70",
      "documentation": "Search for users",
      "method": "get",
      "endpoint": "users/search",
      "responses": [
        {
          "uuid": "77d38ad7-b2dc-45e9-887e-27113eb81cd9",
          "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"ok\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "SearchResults of a successful search",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd36f7e8-47d1-4441-9a0e-d0cbf99c3bd6",
      "documentation": "Check if one user is following another user",
      "method": "get",
      "endpoint": "users/:follower/following/:followee",
      "responses": [
        {
          "uuid": "31cd462f-cb9f-4a2a-89ee-c4599823dd42",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c3a8d474-a359-4ccf-8d97-a9b4c437d9f4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8538b6d5-136d-48b8-8e26-b556a9faeea6",
      "documentation": "Get a user",
      "method": "get",
      "endpoint": "users/:username",
      "responses": [
        {
          "uuid": "be01fef5-de25-463e-b326-3785efe9bd40",
          "body": "{\n  \"active\": {{faker 'datatype.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'datatype.number'}},\n  \"following_count\": {{faker 'datatype.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'datatype.number'}},\n  \"is_admin\": {{faker 'datatype.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'datatype.boolean'}},\n  \"restricted\": {{faker 'datatype.boolean'}},\n  \"starred_repos_count\": {{faker 'datatype.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "76247030-4dfd-42cd-9395-38b5078250e4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3b33968b-9afd-4937-8fdc-9a0edd404d4d",
      "documentation": "List the given user's followers",
      "method": "get",
      "endpoint": "users/:username/followers",
      "responses": [
        {
          "uuid": "51c2f236-159b-4a7d-9250-897bd4375cec",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb965cfe-f83d-4bc3-9f1c-9be30833baed",
      "documentation": "List the users that the given user is following",
      "method": "get",
      "endpoint": "users/:username/following",
      "responses": [
        {
          "uuid": "4ba0568a-f189-4c96-8a29-5e1ccacf2c59",
          "body": "[\n  {\n    \"active\": {{faker 'datatype.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'datatype.number'}},\n    \"following_count\": {{faker 'datatype.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"is_admin\": {{faker 'datatype.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'datatype.boolean'}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"starred_repos_count\": {{faker 'datatype.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6fd9b859-a368-43bd-ae80-5d351be145d0",
      "documentation": "List the given user's GPG keys",
      "method": "get",
      "endpoint": "users/:username/gpg_keys",
      "responses": [
        {
          "uuid": "10551323-1047-47d7-a343-60d08c6377d3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "252b81cd-c562-4c18-8015-ca10f2e80380",
      "documentation": "Get a user's heatmap",
      "method": "get",
      "endpoint": "users/:username/heatmap",
      "responses": [
        {
          "uuid": "91da8628-6539-41e2-b253-0d946775fd54",
          "body": "[\n  {\n    \"contributions\": {{faker 'datatype.number'}},\n    \"timestamp\": {{faker 'datatype.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserHeatmapData",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3246037d-de32-4e7f-bbc2-7be61eb32d97",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c477b173-2f35-4ce6-a5a4-82b5ce9170f0",
      "documentation": "List the given user's public keys",
      "method": "get",
      "endpoint": "users/:username/keys",
      "responses": [
        {
          "uuid": "df0cbf59-eacd-44fa-bd1a-520e7066c0b5",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"fingerprint\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"key\": \"\",\n    \"key_type\": \"\",\n    \"read_only\": {{faker 'datatype.boolean'}},\n    \"title\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'datatype.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'datatype.number'}},\n      \"following_count\": {{faker 'datatype.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'datatype.number'}},\n      \"is_admin\": {{faker 'datatype.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'datatype.boolean'}},\n      \"restricted\": {{faker 'datatype.boolean'}},\n      \"starred_repos_count\": {{faker 'datatype.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKeyList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dfc61ded-6128-4cf6-bad8-b609384cf629",
      "documentation": "List a user's organizations",
      "method": "get",
      "endpoint": "users/:username/orgs",
      "responses": [
        {
          "uuid": "a9b2c318-837a-4909-850b-a25784a0ac9d",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'datatype.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'datatype.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "389b4315-100c-4165-b88c-803a399f954a",
      "documentation": "List the repos owned by the given user",
      "method": "get",
      "endpoint": "users/:username/repos",
      "responses": [
        {
          "uuid": "138f5d9e-3064-4860-95b9-ddfb74958eb5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "62f1b459-7144-4712-9005-a5811ff668c2",
      "documentation": "The repos that the given user has starred",
      "method": "get",
      "endpoint": "users/:username/starred",
      "responses": [
        {
          "uuid": "5ae95056-87c4-40d2-bde0-5f42082883c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c2ee767e-53e2-4649-81d0-2f8d359eace2",
      "documentation": "List the repositories watched by a user",
      "method": "get",
      "endpoint": "users/:username/subscriptions",
      "responses": [
        {
          "uuid": "d407723b-d680-4fa4-9300-b521a6f59391",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "154e57e0-156a-4b78-9fb2-9f6fd4bad501",
      "documentation": "List the authenticated user's access tokens",
      "method": "get",
      "endpoint": "users/:username/tokens",
      "responses": [
        {
          "uuid": "6e770949-05a7-4ec8-a855-ae9febb34ab5",
          "body": "[\n  {\n    \"id\": {{faker 'datatype.number'}},\n    \"name\": \"\",\n    \"sha1\": \"\",\n    \"token_last_eight\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "AccessTokenList represents a list of API access token.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1436af8e-bce6-4cc5-a449-d8ce0d1fd164",
      "documentation": "Create an access token",
      "method": "post",
      "endpoint": "users/:username/tokens",
      "responses": [
        {
          "uuid": "4d4e41e2-8cba-40d1-940f-8ffc870c4e11",
          "body": "{\n  \"id\": {{faker 'datatype.number'}},\n  \"name\": \"\",\n  \"sha1\": \"\",\n  \"token_last_eight\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "AccessToken represents an API access token.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9dca17a9-9241-4562-adc6-c7de52c88a00",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "af72399b-52da-4f32-b345-94929b39ec19",
      "documentation": "delete an access token",
      "method": "delete",
      "endpoint": "users/:username/tokens/:token",
      "responses": [
        {
          "uuid": "ef53f604-f28e-45d7-9def-7058c5615b15",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a3c87ad-2021-406d-ba42-6579fb9f2843",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c1f101b-f023-4ba8-818c-9b76000b650a",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ea88ce6b-e57c-41c8-bb44-85fccd4a380e",
      "documentation": "Returns the version of the Gitea application",
      "method": "get",
      "endpoint": "version",
      "responses": [
        {
          "uuid": "5bfbacc0-f184-483f-9757-eb33c4e65823",
          "body": "{\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServerVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}