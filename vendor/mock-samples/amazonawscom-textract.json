{
  "uuid": "e41c95a9-4cbf-43de-a8d6-e607e3b9f402",
  "lastMigration": 24,
  "name": "Amazon Textract",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "3e0d7318-bdf3-4f6a-b84e-0cec54fe6866",
      "documentation": "<p>Analyzes an input document for relationships between detected items. </p> <p>The types of information returned are as follows: </p> <ul> <li> <p>Form data (key-value pairs). The related information is returned in two <a>Block</a> objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i> contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the value.</p> </li> <li> <p>Table and table cell data. A TABLE <code>Block</code> object contains information about a detected table. A CELL <code>Block</code> object is returned for each cell in a table.</p> </li> <li> <p>Lines and words of text. A LINE <code>Block</code> object contains one or more WORD <code>Block</code> objects. All lines and words that are detected in the document are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>). </p> </li> </ul> <p>Selection elements such as check boxes and option buttons (radio buttons) can be detected in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains information about a selection element, including the selection status.</p> <p>You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code> list. </p> <p>The output is returned in a list of <code>Block</code> objects.</p> <p> <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously, use <a>StartDocumentAnalysis</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.AnalyzeDocument",
      "responses": [
        {
          "uuid": "7500fbf2-0bfc-431f-a0d7-ac3b95222187",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'datatype.number'}}\n  },\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'datatype.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'datatype.number'}},\n      \"ColumnIndex\": {{faker 'datatype.number'}},\n      \"RowSpan\": {{faker 'datatype.number'}},\n      \"ColumnSpan\": {{faker 'datatype.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'datatype.float'}},\n          \"Height\": {{faker 'datatype.float'}},\n          \"Left\": {{faker 'datatype.float'}},\n          \"Top\": {{faker 'datatype.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'datatype.float'}},\n            \"Y\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"HumanLoopActivationOutput\": {\n    \"HumanLoopArn\": \"\",\n    \"HumanLoopActivationReasons\": [\n      \"\"\n    ],\n    \"HumanLoopActivationConditionsEvaluationResults\": \"\"\n  },\n  \"AnalyzeDocumentModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aa818e0d-1c7d-4841-a88a-447d5cb88c55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b225ef61-b3c4-4dcd-ba4c-986e4065b4bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07073509-b0f6-478b-90fb-c4d6c261f14d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2d82ed73-cc7f-44ef-a40b-2aed8f10d0a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b9dd71f0-81bd-4de5-9dc2-57075b9e3558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa2de52d-2e5b-4ac9-8558-bc1936afb967",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0baa4bdc-6d29-46d8-ad6d-cb192ce77ebd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32153558-719a-45c8-ada7-f1d74f25288f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c198090-cc84-446c-90e6-49457645ab6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "494cf8d6-bde0-48ce-8add-c4481b10b18b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "HumanLoopQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a91aca05-5280-4385-943c-8358aaeab044",
      "documentation": "<p>Analyzes an input document for financially related relationships between text.</p> <p>Information is returned as <code>ExpenseDocuments</code> and seperated as follows.</p> <ul> <li> <p> <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store information about the lines of text, such as an item purchased and its price on a receipt.</p> </li> <li> <p> <code>SummaryFields</code>- Contains all other information a receipt, such as header information or the vendors name.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.AnalyzeExpense",
      "responses": [
        {
          "uuid": "b4073566-ab84-4454-aea0-db1d87070525",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'datatype.number'}}\n  },\n  \"ExpenseDocuments\": [\n    {\n      \"ExpenseIndex\": {{faker 'datatype.number'}},\n      \"SummaryFields\": [\n        {\n          \"Type\": {\n            \"Text\": \"\",\n            \"Confidence\": {{faker 'datatype.float'}}\n          },\n          \"LabelDetection\": {\n            \"Text\": \"\",\n            \"Geometry\": {\n              \"BoundingBox\": {\n                \"Width\": {{faker 'datatype.float'}},\n                \"Height\": {{faker 'datatype.float'}},\n                \"Left\": {{faker 'datatype.float'}},\n                \"Top\": {{faker 'datatype.float'}}\n              },\n              \"Polygon\": [\n                {\n                  \"X\": {{faker 'datatype.float'}},\n                  \"Y\": {{faker 'datatype.float'}}\n                }\n              ]\n            },\n            \"Confidence\": {{faker 'datatype.float'}}\n          },\n          \"ValueDetection\": {\n            \"Text\": \"\",\n            \"Geometry\": {\n              \"BoundingBox\": {\n                \"Width\": {{faker 'datatype.float'}},\n                \"Height\": {{faker 'datatype.float'}},\n                \"Left\": {{faker 'datatype.float'}},\n                \"Top\": {{faker 'datatype.float'}}\n              },\n              \"Polygon\": [\n                {\n                  \"X\": {{faker 'datatype.float'}},\n                  \"Y\": {{faker 'datatype.float'}}\n                }\n              ]\n            },\n            \"Confidence\": {{faker 'datatype.float'}}\n          },\n          \"PageNumber\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"LineItemGroups\": [\n        {\n          \"LineItemGroupIndex\": {{faker 'datatype.number'}},\n          \"LineItems\": [\n            {\n              \"LineItemExpenseFields\": [\n                {\n                  \"Type\": {\n                    \"Text\": \"\",\n                    \"Confidence\": {{faker 'datatype.float'}}\n                  },\n                  \"LabelDetection\": {\n                    \"Text\": \"\",\n                    \"Geometry\": {\n                      \"BoundingBox\": {\n                        \"Width\": {{faker 'datatype.float'}},\n                        \"Height\": {{faker 'datatype.float'}},\n                        \"Left\": {{faker 'datatype.float'}},\n                        \"Top\": {{faker 'datatype.float'}}\n                      },\n                      \"Polygon\": [\n                        {\n                          \"X\": {{faker 'datatype.float'}},\n                          \"Y\": {{faker 'datatype.float'}}\n                        }\n                      ]\n                    },\n                    \"Confidence\": {{faker 'datatype.float'}}\n                  },\n                  \"ValueDetection\": {\n                    \"Text\": \"\",\n                    \"Geometry\": {\n                      \"BoundingBox\": {\n                        \"Width\": {{faker 'datatype.float'}},\n                        \"Height\": {{faker 'datatype.float'}},\n                        \"Left\": {{faker 'datatype.float'}},\n                        \"Top\": {{faker 'datatype.float'}}\n                      },\n                      \"Polygon\": [\n                        {\n                          \"X\": {{faker 'datatype.float'}},\n                          \"Y\": {{faker 'datatype.float'}}\n                        }\n                      ]\n                    },\n                    \"Confidence\": {{faker 'datatype.float'}}\n                  },\n                  \"PageNumber\": {{faker 'datatype.number'}}\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "93f6209e-f101-473d-95b3-3f31c8b3ff2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe4b84fd-1bc6-4d35-8596-d3fbd2fa3e92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6182af6-d89f-4f8d-b7cb-8d8e3adff0b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b2f429a-86aa-4c4f-ae01-8c98f8e81ce0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a4a0a58-bde1-4023-ab3d-747c98171dfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cdc89481-244a-4d4d-a484-462d49b47b95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b639151-f3e9-4522-bd00-2d4f97487bf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c46057f-db94-4678-a209-37e0b98108f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd0f7f69-cdfe-4c4e-9fe0-415991c92a59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d72e72e1-d9c3-48d3-a714-a7f7062e3785",
      "documentation": "<p>Detects text in the input document. Amazon Textract can detect lines of text and the words that make up a line of text. The input document must be an image in JPEG or PNG format. <code>DetectDocumentText</code> returns the detected text in an array of <a>Block</a> objects. </p> <p>Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent the lines of detected text on a page. A LINE <code>Block</code> object is a parent for each word that makes up the line. Words are represented by <code>Block</code> objects of type WORD.</p> <p> <code>DetectDocumentText</code> is a synchronous operation. To analyze documents asynchronously, use <a>StartDocumentTextDetection</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.DetectDocumentText",
      "responses": [
        {
          "uuid": "96bea789-e888-4f8c-b7b2-81cd280a497e",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'datatype.number'}}\n  },\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'datatype.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'datatype.number'}},\n      \"ColumnIndex\": {{faker 'datatype.number'}},\n      \"RowSpan\": {{faker 'datatype.number'}},\n      \"ColumnSpan\": {{faker 'datatype.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'datatype.float'}},\n          \"Height\": {{faker 'datatype.float'}},\n          \"Left\": {{faker 'datatype.float'}},\n          \"Top\": {{faker 'datatype.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'datatype.float'}},\n            \"Y\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"DetectDocumentTextModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e776a52e-5ba0-4042-9009-c59fcf9585f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5152cbd8-3d49-472b-9c73-839838b36630",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30a30224-4f92-4b7d-ac32-1190ea434663",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9645aac6-99cb-449e-a572-ac75d31453e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb3a27b7-786a-4eb5-ab71-e8d87c7cc8c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f919f16f-9c1d-4aac-a59c-43fb00c8162b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3747fcdf-5b05-4dcd-a705-0d4e7e20af5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4791db8d-d246-4d19-bfee-32b546fb0d9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc324c5a-c0b0-4e82-93a1-8fd3be623691",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6500d67a-80ed-4282-92e9-c57269904696",
      "documentation": "<p>Gets the results for an Amazon Textract asynchronous operation that analyzes text in a document.</p> <p>You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which returns a job identifier (<code>JobId</code>). When the text analysis operation finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>. To get the results of the text-detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.</p> <p> <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following types of information are returned: </p> <ul> <li> <p>Form data (key-value pairs). The related information is returned in two <a>Block</a> objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i> contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the value.</p> </li> <li> <p>Table and table cell data. A TABLE <code>Block</code> object contains information about a detected table. A CELL <code>Block</code> object is returned for each cell in a table.</p> </li> <li> <p>Lines and words of text. A LINE <code>Block</code> object contains one or more WORD <code>Block</code> objects. All lines and words that are detected in the document are returned (including text that doesn't have a relationship with the value of the <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). </p> </li> </ul> <p>Selection elements such as check boxes and option buttons (radio buttons) can be detected in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains information about a selection element, including the selection status.</p> <p>Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned. If there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code> in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>, and populate the <code>NextToken</code> request parameter with the token value that's returned from the previous call to <code>GetDocumentAnalysis</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.GetDocumentAnalysis",
      "responses": [
        {
          "uuid": "7c617f70-acdc-47f1-838f-ca75872e32de",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'datatype.number'}}\n  },\n  \"JobStatus\": \"\",\n  \"NextToken\": \"\",\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'datatype.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'datatype.number'}},\n      \"ColumnIndex\": {{faker 'datatype.number'}},\n      \"RowSpan\": {{faker 'datatype.number'}},\n      \"ColumnSpan\": {{faker 'datatype.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'datatype.float'}},\n          \"Height\": {{faker 'datatype.float'}},\n          \"Left\": {{faker 'datatype.float'}},\n          \"Top\": {{faker 'datatype.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'datatype.float'}},\n            \"Y\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"Warnings\": [\n    {\n      \"ErrorCode\": \"\",\n      \"Pages\": [\n        {{faker 'datatype.number'}}\n      ]\n    }\n  ],\n  \"StatusMessage\": \"\",\n  \"AnalyzeDocumentModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a3c42669-dbc4-4e11-b48b-4927e0e5304c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e10d6b2d-a44f-425d-bee2-fd3a77a2a74b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4a3d0d6c-8327-42d8-aa42-838875ff1fbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa16ac4c-686a-45b8-a8b6-a0744d30b607",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidJobIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6048269-3784-4864-a01b-300be6928796",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c299d3a2-aef7-4b18-b847-5ff52abbbec6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8342aace-5aa3-4ac0-ab83-5fd0e5c6d073",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4bcfead3-3e1c-4043-8e59-36763ee72e08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ca8af32c-6cf3-4096-96e3-a323f289f752",
      "documentation": "<p>Gets the results for an Amazon Textract asynchronous operation that detects text in a document. Amazon Textract can detect lines of text and the words that make up a line of text.</p> <p>You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>, which returns a job identifier (<code>JobId</code>). When the text detection operation finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>. To get the results of the text-detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.</p> <p> <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. </p> <p>Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent the lines of detected text on a page. A LINE <code>Block</code> object is a parent for each word that makes up the line. Words are represented by <code>Block</code> objects of type WORD.</p> <p>Use the MaxResults parameter to limit the number of blocks that are returned. If there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code> in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call <code>GetDocumentTextDetection</code>, and populate the <code>NextToken</code> request parameter with the token value that's returned from the previous call to <code>GetDocumentTextDetection</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.GetDocumentTextDetection",
      "responses": [
        {
          "uuid": "41abfc82-1c3c-4553-8f15-43b09ce676e3",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'datatype.number'}}\n  },\n  \"JobStatus\": \"\",\n  \"NextToken\": \"\",\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'datatype.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'datatype.number'}},\n      \"ColumnIndex\": {{faker 'datatype.number'}},\n      \"RowSpan\": {{faker 'datatype.number'}},\n      \"ColumnSpan\": {{faker 'datatype.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'datatype.float'}},\n          \"Height\": {{faker 'datatype.float'}},\n          \"Left\": {{faker 'datatype.float'}},\n          \"Top\": {{faker 'datatype.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'datatype.float'}},\n            \"Y\": {{faker 'datatype.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"Warnings\": [\n    {\n      \"ErrorCode\": \"\",\n      \"Pages\": [\n        {{faker 'datatype.number'}}\n      ]\n    }\n  ],\n  \"StatusMessage\": \"\",\n  \"DetectDocumentTextModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc3f1ef7-f4f7-408b-942d-ebc514227954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10e3b72f-44c0-430f-9d76-a4e1dcccf0bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54764134-278a-4e7e-9028-748f7d5dff1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e71ae795-839c-467c-a363-94699708d5aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidJobIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "95929797-8ec4-4f67-9dfb-9eb5b48e45be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "15acc86c-12d2-4f86-b912-6f492ddf4893",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d5b44cc2-ccac-4a83-94c2-985475d8458f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da8ae60d-db98-4087-946d-d33734d6e6ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1949f55f-08e3-4565-9b9f-aba911fe6909",
      "documentation": "<p>Starts the asynchronous analysis of an input document for relationships between detected items such as key-value pairs, tables, and selection elements.</p> <p> <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name and file name of the document. </p> <p> <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>) that you use to get the results of the operation. When text analysis is finished, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the results of the text analysis operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.StartDocumentAnalysis",
      "responses": [
        {
          "uuid": "1742cbae-90cd-4ceb-9971-192f0cb1beb7",
          "body": "{\n  \"JobId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "90f9b39a-673b-4889-b4e1-1f1f7cefa7f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f42360ed-ea32-4d6d-b6b2-542ccc228d19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a62233d-9ef3-40a8-89a9-047bf8b3e7c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4639434c-14b2-4728-99ba-c88deaec2b7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c2cb98d-819a-41cf-b624-263de9bf39ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cd52f725-54ce-4500-b0cf-040702bfb844",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b9c6741-4529-43af-8f15-77dc2ec82d93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0a37198-ad70-4bd1-bf67-d66915517565",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "837e8bc0-db5c-4d02-84e5-9b83d4a8cae6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21289967-305d-462c-a3a7-67beba0ac699",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1daee00-a726-4efb-93a3-c2e4a973185c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4b1f11a-3a6a-4339-8696-7ae02aa8c5c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb150023-2ae0-4403-8985-8fa0669da6ee",
      "documentation": "<p>Starts the asynchronous detection of text in a document. Amazon Textract can detect lines of text and the words that make up a line of text.</p> <p> <code>StartDocumentTextDetection</code> can analyze text in documents that are in JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name and file name of the document. </p> <p> <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that you use to get the results of the operation. When text detection is finished, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the results of the text detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.StartDocumentTextDetection",
      "responses": [
        {
          "uuid": "4579b82e-09e8-4d4f-86ea-866dbc375a39",
          "body": "{\n  \"JobId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "687bc688-e92b-4908-a982-9738fe536d75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "196a1aa8-78b0-4bf2-b8a2-2f7dedfc2222",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1b02e2e-4526-45f2-bce0-7e4616e9b573",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2da31c97-885c-4645-8cbb-24957e695d99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cfb9b79c-039f-40f9-928e-31cbf692c5b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "739ff604-96ad-4e63-8d66-5e4716fc83d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aa0d6492-7b3b-4a8a-bfc8-8b962670f3a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4eca8a31-89dd-47f9-bff1-ee17365ac2d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7bfd3437-c642-42b3-845a-6543d3ad2a90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2cdd926a-1ea4-413f-b567-43b2ca0b20e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39dc6cd6-b622-432a-b306-ce998d5bfb8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "547db331-7749-4faa-919b-85a5cba31f1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}