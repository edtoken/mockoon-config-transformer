{
  "uuid": "d2389a0b-5ef9-4b65-a506-20d795a4556a",
  "lastMigration": 24,
  "name": "KeyVaultClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "58e38f9d-3c0e-493f-8ddb-2df7a4807d92",
      "documentation": "List certificates in a specified key vault",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "367c477e-43e1-4b4e-8142-3d308cdaa954",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificates along with a link to the next page of certificates.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a8881f99-895f-406e-b8be-98b2d355323d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "61c76cac-a9de-4ea3-a074-23a87865dfa0",
      "documentation": "Deletes the certificate contacts for a specified key vault.",
      "method": "delete",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "312d7626-f44a-4554-8c06-080111cc52ca",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c6aac0f0-a4a3-415f-a6e1-453fc96cb0f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2cd67020-c367-4fd2-93c2-14fcf6dca74b",
      "documentation": "Lists the certificate contacts for a specified key vault.",
      "method": "get",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "e855fa39-3538-4c58-9cd5-dd15bc769431",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6e966af7-e4d3-44a1-9370-6cf5c3ad1b72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "de1ed13b-6d02-417e-a9e1-b46f0d0f864b",
      "documentation": "Sets the certificate contacts for the specified key vault.",
      "method": "put",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "2ce4f6ba-c3d4-451d-bf4e-1272a504f51d",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "10bb2680-06fd-4465-bc22-76692c8bed79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aae0ce45-58dc-4e87-b74d-d82c59806c50",
      "documentation": "List certificate issuers for a specified key vault.",
      "method": "get",
      "endpoint": "certificates/issuers",
      "responses": [
        {
          "uuid": "cac7b027-7f83-4e85-8b76-7a1dc8c51285",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificate issuers in a key vault along with a link to the next page of certificate issuers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c19f35d-b112-4186-8ac5-fbb550111815",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "818d0b1c-f812-4775-93f6-d28ba2e78120",
      "documentation": "Deletes the specified certificate issuer.",
      "method": "delete",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "736fb0ca-a958-4db9-b865-2e6462ea1e5b",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d128fd0e-9d46-4dd6-8935-ae761039302f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5882c032-f08d-4c65-93f8-99ca1b59464f",
      "documentation": "Lists the specified certificate issuer.",
      "method": "get",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "c1bbaaab-688a-4c32-be37-0e3814096169",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ec5e1f3c-562b-4a22-bba3-53dc90343444",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4364415c-6f86-4488-8aa0-1fb7c3936170",
      "documentation": "Updates the specified certificate issuer.",
      "method": "patch",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "7e8ae397-ec5d-40db-85d6-5db43c8efc69",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f07038aa-0ef3-44cc-9563-dcac484867e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f7935619-331d-4b8e-b035-c13c5b63a1cd",
      "documentation": "Sets the specified certificate issuer.",
      "method": "put",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "54db6d53-82d5-4f02-9699-25b640125a21",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fde77c8f-7288-4e3f-b103-623a98003f84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2e439776-02fd-43c9-adea-b4ae7b459068",
      "documentation": "Restores a backed up certificate to a vault.",
      "method": "post",
      "endpoint": "certificates/restore",
      "responses": [
        {
          "uuid": "72afbd5e-2157-4867-a8bb-57cfc8bcea54",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"exp\": {{faker 'datatype.number'}},\n      \"nbf\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'datatype.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'datatype.boolean'}},\n      \"key_size\": {{faker 'datatype.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'datatype.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'datatype.number'}},\n          \"lifetime_percentage\": {{faker 'datatype.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'datatype.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored certificate bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "47e155c5-9c03-41d2-b5f5-c17716f71438",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e8d8df3c-54a7-4616-ae84-775cb0622c87",
      "documentation": "Deletes a certificate from a specified key vault.",
      "method": "delete",
      "endpoint": "certificates/{certificate-name}",
      "responses": [
        {
          "uuid": "f64a4b0f-36ed-4ae8-a760-802f6e6a710e",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"exp\": {{faker 'datatype.number'}},\n      \"nbf\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'datatype.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'datatype.boolean'}},\n      \"key_size\": {{faker 'datatype.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'datatype.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'datatype.number'}},\n          \"lifetime_percentage\": {{faker 'datatype.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'datatype.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a3202dea-9e82-4947-b5ea-ff2e785b5088",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83df7a60-d36e-4d1a-a2ab-a84da6168ef4",
      "documentation": "Backs up the specified certificate.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/backup",
      "responses": [
        {
          "uuid": "a97112b8-bd6d-4f77-a229-217a2c858081",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "95c892f1-13e0-4969-a642-071d6252a487",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a26d8b4-897a-4e3e-853c-59439dc57763",
      "documentation": "Creates a new certificate.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/create",
      "responses": [
        {
          "uuid": "1f695da7-a165-4764-93b3-fa8c2f143336",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 202,
          "label": "Created certificate bundle.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f4701184-f7c8-4963-8fa7-175a43f3ed02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd38b48d-3024-41ac-ae1f-75e4e0cf6b01",
      "documentation": "Imports a certificate into a specified key vault.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/import",
      "responses": [
        {
          "uuid": "4250b67f-77e1-41da-ace8-017dd2d3efce",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"exp\": {{faker 'datatype.number'}},\n      \"nbf\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'datatype.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'datatype.boolean'}},\n      \"key_size\": {{faker 'datatype.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'datatype.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'datatype.number'}},\n          \"lifetime_percentage\": {{faker 'datatype.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'datatype.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Imported certificate bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "94fd4c2a-a50a-4f99-be16-74b0f2d0c5b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "769b12e5-5940-41ca-9d20-1997245d7557",
      "documentation": "Deletes the creation operation for a specific certificate.",
      "method": "delete",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "a131b808-a948-4a82-8f99-c21a1786c789",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "A message containing the certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "85b9c0cf-3347-4bc2-baa9-aaf9e25f2b36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9115610a-d23e-475a-b170-a466ec699cb9",
      "documentation": "Gets the creation operation of a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "97612aa5-0739-42d2-8ea2-9a3733641ce6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2a35b6bb-6cf0-4ffe-b503-9da4da500ff4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f3bd4333-8a02-47b7-8e2b-92ec4aed222b",
      "documentation": "Updates a certificate operation.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "89c9fa3a-6dc6-42f3-a92c-c040c668da15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "A message containing the certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f20fb625-d57e-4125-b9c2-c503e1526930",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f15d8d19-f862-43d2-9c9a-249f3d4a4f14",
      "documentation": "Merges a certificate or a certificate chain with a key pair existing on the server.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/pending/merge",
      "responses": [
        {
          "uuid": "9d1a4acf-fd90-4a41-b7b9-14c98d745766",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"exp\": {{faker 'datatype.number'}},\n      \"nbf\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'datatype.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'datatype.boolean'}},\n      \"key_size\": {{faker 'datatype.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'datatype.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'datatype.number'}},\n          \"lifetime_percentage\": {{faker 'datatype.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'datatype.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Merged certificate bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6634d290-e869-4ba9-afdf-1873aa7c2019",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "49d5c315-975f-4591-8464-03e5607ef218",
      "documentation": "Lists the policy for a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/policy",
      "responses": [
        {
          "uuid": "c6018952-8c64-4072-85fd-22e1331ed0b8",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"id\": \"\",\n  \"issuer\": {\n    \"cert_transparency\": {{faker 'datatype.boolean'}},\n    \"cty\": \"\",\n    \"name\": \"\"\n  },\n  \"key_props\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"exportable\": {{faker 'datatype.boolean'}},\n    \"key_size\": {{faker 'datatype.number'}},\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"reuse_key\": {{faker 'datatype.boolean'}}\n  },\n  \"lifetime_actions\": [\n    {\n      \"action\": {\n        \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n      },\n      \"trigger\": {\n        \"days_before_expiry\": {{faker 'datatype.number'}},\n        \"lifetime_percentage\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"secret_props\": {\n    \"contentType\": \"\"\n  },\n  \"x509_props\": {\n    \"ekus\": [\n      \"\"\n    ],\n    \"key_usage\": [\n      \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n    ],\n    \"sans\": {\n      \"dns_names\": [\n        \"\"\n      ],\n      \"emails\": [\n        \"\"\n      ],\n      \"upns\": [\n        \"\"\n      ]\n    },\n    \"subject\": \"\",\n    \"validity_months\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f96c4d25-6d89-4617-8101-b628abbeb6aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cc8ddcc2-bcc0-47b0-959e-821d38c4b4da",
      "documentation": "Updates the policy for a certificate.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/policy",
      "responses": [
        {
          "uuid": "875c1352-dd0d-4592-8ccc-067311f9396e",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"id\": \"\",\n  \"issuer\": {\n    \"cert_transparency\": {{faker 'datatype.boolean'}},\n    \"cty\": \"\",\n    \"name\": \"\"\n  },\n  \"key_props\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"exportable\": {{faker 'datatype.boolean'}},\n    \"key_size\": {{faker 'datatype.number'}},\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"reuse_key\": {{faker 'datatype.boolean'}}\n  },\n  \"lifetime_actions\": [\n    {\n      \"action\": {\n        \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n      },\n      \"trigger\": {\n        \"days_before_expiry\": {{faker 'datatype.number'}},\n        \"lifetime_percentage\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"secret_props\": {\n    \"contentType\": \"\"\n  },\n  \"x509_props\": {\n    \"ekus\": [\n      \"\"\n    ],\n    \"key_usage\": [\n      \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n    ],\n    \"sans\": {\n      \"dns_names\": [\n        \"\"\n      ],\n      \"emails\": [\n        \"\"\n      ],\n      \"upns\": [\n        \"\"\n      ]\n    },\n    \"subject\": \"\",\n    \"validity_months\": {{faker 'datatype.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate policy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7272dd97-5510-4795-84a5-cca275d43775",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "748b0001-2f1b-4daf-bd40-40fe7d3242e5",
      "documentation": "List the versions of a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/versions",
      "responses": [
        {
          "uuid": "1154fdac-5455-47f6-80cf-cdce2891b492",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificates in the key vault along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1e7c7459-73ee-48c5-a974-12a6dbb4ecba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50d324a5-6920-46fb-99e8-13d0af1baa26",
      "documentation": "Gets information about a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/{certificate-version}",
      "responses": [
        {
          "uuid": "c209694f-263c-4a28-be2a-eb2a2be4e932",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"exp\": {{faker 'datatype.number'}},\n      \"nbf\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'datatype.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'datatype.boolean'}},\n      \"key_size\": {{faker 'datatype.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'datatype.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'datatype.number'}},\n          \"lifetime_percentage\": {{faker 'datatype.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'datatype.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b27ec414-15c4-45e8-a53e-907569fca6a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c7566709-63e0-4a38-b2d8-d2290d177b18",
      "documentation": "Updates the specified attributes associated with the given certificate.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/{certificate-version}",
      "responses": [
        {
          "uuid": "0748a878-7d4a-4952-aa5a-a935d0d8681a",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"exp\": {{faker 'datatype.number'}},\n      \"nbf\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'datatype.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'datatype.boolean'}},\n      \"key_size\": {{faker 'datatype.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'datatype.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'datatype.number'}},\n          \"lifetime_percentage\": {{faker 'datatype.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'datatype.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "28c8e1a1-479e-4644-8f4c-d447939de649",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8dd0ea1a-063e-43e7-af77-93f83be40b70",
      "documentation": "Lists the deleted certificates in the specified vault currently available for recovery.",
      "method": "get",
      "endpoint": "deletedcertificates",
      "responses": [
        {
          "uuid": "39f698b5-6c74-452d-93d3-328d39a4506e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted certificates in the vault along with a link to the next page of deleted certificates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1913c310-b709-4543-8634-1a61de7371e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cc8b2eea-9183-40ba-9e0c-4d4149ce1035",
      "documentation": "Permanently deletes the specified deleted certificate.",
      "method": "delete",
      "endpoint": "deletedcertificates/{certificate-name}",
      "responses": [
        {
          "uuid": "dcf24cd8-bac6-4f06-a707-d2f91c29fa9c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the certificate was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "963bc581-5538-46fc-84ad-e163635ae480",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "70143f47-14c1-4eb8-8b40-091ce4cccddb",
      "documentation": "Retrieves information about the specified deleted certificate.",
      "method": "get",
      "endpoint": "deletedcertificates/{certificate-name}",
      "responses": [
        {
          "uuid": "8b8dbe16-c4a3-46b8-b0dc-0e4c8bb937f5",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"exp\": {{faker 'datatype.number'}},\n      \"nbf\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'datatype.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'datatype.boolean'}},\n      \"key_size\": {{faker 'datatype.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'datatype.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'datatype.number'}},\n          \"lifetime_percentage\": {{faker 'datatype.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'datatype.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Certificate bundle of the certificate and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7a7c2bac-eed2-47e4-8767-417fe368d5bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c8f1c226-77f8-483e-9c6c-737d7a015fd1",
      "documentation": "Recovers the deleted certificate back to its current version under /certificates.",
      "method": "post",
      "endpoint": "deletedcertificates/{certificate-name}/recover",
      "responses": [
        {
          "uuid": "f802dd0b-388f-43ba-ba98-dee309480005",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'datatype.number'}},\n      \"enabled\": {{faker 'datatype.boolean'}},\n      \"exp\": {{faker 'datatype.number'}},\n      \"nbf\": {{faker 'datatype.number'}},\n      \"updated\": {{faker 'datatype.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'datatype.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'datatype.boolean'}},\n      \"key_size\": {{faker 'datatype.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'datatype.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'datatype.number'}},\n          \"lifetime_percentage\": {{faker 'datatype.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'datatype.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Certificate bundle of the original certificate and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "21b0ef1c-6ef1-44b0-b2de-b4bf8be06d90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0bcd363e-4f5c-4db5-96a8-7bb3e451ce20",
      "documentation": "Lists the deleted keys in the specified vault.",
      "method": "get",
      "endpoint": "deletedkeys",
      "responses": [
        {
          "uuid": "3aa8bade-15c0-418e-b7e3-f50cb04153b0",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'datatype.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted keys in the vault along with a link to the next page of deleted keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2c67f6ab-2363-4643-8bd6-979d7a9b6ab6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6b9f2fac-4d96-4611-a0c6-d6807a8252ec",
      "documentation": "Permanently deletes the specified key.",
      "method": "delete",
      "endpoint": "deletedkeys/{key-name}",
      "responses": [
        {
          "uuid": "1867c28b-dee9-4f0a-8e7e-02a733212058",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content, signaling that the key was permanently purged.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1b7d6bd1-d326-4cfa-9a40-ece8e1cef69c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bfa70741-7f25-4ca8-ab08-0ac9c55d7422",
      "documentation": "Gets the public part of a deleted key.",
      "method": "get",
      "endpoint": "deletedkeys/{key-name}",
      "responses": [
        {
          "uuid": "e0ce28d8-ad77-41e5-a0b2-fa86b6d1a355",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "83124733-c0ee-408e-8802-9f6d3710faba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d95daba5-fd6f-427f-8b7b-9545fc0837e3",
      "documentation": "Recovers the deleted key to its latest version.",
      "method": "post",
      "endpoint": "deletedkeys/{key-name}/recover",
      "responses": [
        {
          "uuid": "82c790fa-f954-4877-977b-632acdc431ac",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Key bundle of the original key and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bc79e8f8-fcaa-4e02-9926-fa448feb89f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b349f4d1-3925-43d6-a352-756822703f53",
      "documentation": "Lists deleted secrets for the specified vault.",
      "method": "get",
      "endpoint": "deletedsecrets",
      "responses": [
        {
          "uuid": "d6d9c570-2ea8-44b8-a7e3-dfbce2e8c644",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'datatype.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted secrets in the vault, along with a link to the next page of deleted secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "47109b35-2087-4d8d-b13c-238524f6fade",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c2a5fa66-1f8b-4394-ad37-5c8f2f88a3bc",
      "documentation": "Permanently deletes the specified secret.",
      "method": "delete",
      "endpoint": "deletedsecrets/{secret-name}",
      "responses": [
        {
          "uuid": "37dd5799-e7cf-466d-8cdd-7cb9fba0ae5c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the secret was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "220a3988-5901-41cf-b215-39bea7183509",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d2956b96-327f-4933-a53e-86ec6f322649",
      "documentation": "Gets the specified deleted secret.",
      "method": "get",
      "endpoint": "deletedsecrets/{secret-name}",
      "responses": [
        {
          "uuid": "2cdb21d7-72d1-4412-887a-968caf420096",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A secret bundle of the secret and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a8d4cc35-ae63-4af3-8f1a-6670dab3effe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e9ba1d51-60de-4d25-adf2-4039cf3cf4a5",
      "documentation": "Recovers the deleted secret to the latest version.",
      "method": "post",
      "endpoint": "deletedsecrets/{secret-name}/recover",
      "responses": [
        {
          "uuid": "3e61b717-23bf-48cb-bfe7-b762755e006d",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Secret bundle of the original secret and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "88b8d28a-43c5-4810-9be7-fe7125e09236",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cc1e01e8-61a4-4ef0-9cb2-4eff5ecd5b4e",
      "documentation": "Lists deleted storage accounts for the specified vault.",
      "method": "get",
      "endpoint": "deletedstorage",
      "responses": [
        {
          "uuid": "4f68ae54-747d-4ec6-9257-518e1e398dec",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"id\": \"\",\n      \"resourceId\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted storage accounts in the vault, along with a link to the next page of deleted storage accounts.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "00aa5aa1-f6dd-470c-b2f5-58a1d9aa1b97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d6835694-5dcb-4122-8271-319b848227bb",
      "documentation": "Permanently deletes the specified storage account.",
      "method": "delete",
      "endpoint": "deletedstorage/{storage-account-name}",
      "responses": [
        {
          "uuid": "e5059309-1dc5-40d2-91c3-ab8e1c0528eb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the storage account was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fbc34ec4-e81e-4b6c-8030-7f68ccc64869",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2b5b4782-dc46-4314-8e76-53d9478e59ab",
      "documentation": "Gets the specified deleted storage account.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}",
      "responses": [
        {
          "uuid": "84340b51-1a07-4bf5-a7a9-89d26593b666",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted storage account and information on when it will be purged, and how to recover the deleted storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "afa79690-ce53-4e26-beab-999138933551",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a517ce60-ee2a-43c3-b7fd-5669c1257caa",
      "documentation": "Recovers the deleted storage account.",
      "method": "post",
      "endpoint": "deletedstorage/{storage-account-name}/recover",
      "responses": [
        {
          "uuid": "3beb52ac-44af-462a-9b08-46b66788153d",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A storage bundle of the original storage account and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5bd96599-cd9a-485e-a4f1-ffdba9bdc275",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fded1920-6152-4273-a216-0efc33aaacbf",
      "documentation": "Lists deleted SAS definitions for the specified vault and storage account.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}/sas",
      "responses": [
        {
          "uuid": "00f81c3e-ac0c-4827-9088-6931c3f73a32",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"id\": \"\",\n      \"sid\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted SAS definitions for the storage account, along with a link to the next page of deleted SAS definitions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "324f3667-04e8-4b50-b3ea-a3beae3bd4e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f1d59f03-8a0c-4c80-8269-f483e34ee56d",
      "documentation": "Gets the specified deleted sas definition.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "139aa6a1-36f9-4e20-8518-cae464399c31",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted SAS definition and information on when the it will be purged, and how to recover the deleted SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4bf0f2c8-1817-481e-9432-ffa43fd80d74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54c116c8-e29f-4e5d-a82a-8d008c720050",
      "documentation": "Recovers the deleted SAS definition.",
      "method": "post",
      "endpoint": "deletedstorage/{storage-account-name}/sas/{sas-definition-name}/recover",
      "responses": [
        {
          "uuid": "bf09ca9f-9761-4f36-addb-d5a69537c260",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A SAS definition bundle of the original SAS definition and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7fec7adb-1809-4c82-a451-31db55a6db59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9c8b2ad-dd37-4165-a451-568b36653ea2",
      "documentation": "List keys in the specified vault.",
      "method": "get",
      "endpoint": "keys",
      "responses": [
        {
          "uuid": "29a9c16d-f4d3-4cb1-9fcb-03d5b8f31963",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'datatype.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of keys in the vault along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4fc26a06-c405-4fb4-a473-55812a1f9d9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cf172901-42d1-484b-a4fa-2e04e0d3501a",
      "documentation": "Restores a backed up key to a vault.",
      "method": "post",
      "endpoint": "keys/restore",
      "responses": [
        {
          "uuid": "33bde649-3b6a-428b-8996-c4c24e7031e4",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored key bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4b714c69-ddb6-4c22-946b-83c33d119071",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8f9dc7b0-94b4-484a-9123-01b55c079784",
      "documentation": "Deletes a key of any type from storage in Azure Key Vault.",
      "method": "delete",
      "endpoint": "keys/{key-name}",
      "responses": [
        {
          "uuid": "9d61abd3-661a-4e3b-840d-18cca8e65d42",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The public part of the deleted key and deletion information on when the key will be purged.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "34de290c-51e6-4701-8db3-ced2c9aff9d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a6384d9-33c6-4395-ab69-1d5fba8c93c3",
      "documentation": "Imports an externally created key, stores it, and returns key parameters and attributes to the client.",
      "method": "put",
      "endpoint": "keys/{key-name}",
      "responses": [
        {
          "uuid": "9ea7b885-9abb-481b-a17c-6c0525fc16e5",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Imported key bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc6dacdd-5bec-4461-8a8e-dda62cf7917c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "14c50591-d178-4522-bca3-19bf70d7b16b",
      "documentation": "Requests that a backup of the specified key be downloaded to the client.",
      "method": "post",
      "endpoint": "keys/{key-name}/backup",
      "responses": [
        {
          "uuid": "b73adbc5-c9d1-4ebc-b02e-e9a74c8a0f18",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "84fb750e-27cf-49d0-83ed-ed6c4893a272",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e4cf4416-f75d-4814-a0fe-2576864f38a0",
      "documentation": "Creates a new key, stores it, then returns key parameters and attributes to the client.",
      "method": "post",
      "endpoint": "keys/{key-name}/create",
      "responses": [
        {
          "uuid": "39306720-d0e9-4608-b720-ce16963d8284",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A key bundle containing the result of the create key request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "63332498-d85e-4a71-98da-20467dc6ba6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce108ae1-c513-4171-b97c-aa388a780e36",
      "documentation": "Retrieves a list of individual key versions with the same key name.",
      "method": "get",
      "endpoint": "keys/{key-name}/versions",
      "responses": [
        {
          "uuid": "1425c5b9-e7a5-45bc-b7c8-0f585bfcaaa4",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'datatype.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of keys along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a7079d8c-1953-45a1-b792-26b1996a88a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2645ab07-d764-4f9e-9c8b-2a1ce38fb823",
      "documentation": "Gets the public part of a stored key.",
      "method": "get",
      "endpoint": "keys/{key-name}/{key-version}",
      "responses": [
        {
          "uuid": "240c93a6-4c79-4a49-a46e-da68e4b0d90b",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A key bundle containing the key and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "900f1596-2c85-4c7d-bd21-1b749bbeb145",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d68971b6-8c03-4874-b30d-b277fbfab9eb",
      "documentation": "The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault.",
      "method": "patch",
      "endpoint": "keys/{key-name}/{key-version}",
      "responses": [
        {
          "uuid": "2c0ac9c5-3ff6-427a-9758-37a5ee3ff5ea",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d6b35244-6b16-4039-a92a-056de4ff7dc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba4b97d4-845c-4630-a3a5-6b709e862d45",
      "documentation": "Decrypts a single block of encrypted data.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/decrypt",
      "responses": [
        {
          "uuid": "da1f0eca-cd00-45c2-aae5-0bed8fd02217",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The decryption result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3453a953-4043-4ec0-a829-006d97246f31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e392fb6b-4c7f-4554-95ff-d04e6edc9e00",
      "documentation": "Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/encrypt",
      "responses": [
        {
          "uuid": "b52da33e-01ca-4e2e-87ed-aff0a5b22367",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The encryption result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5623f546-301e-4ec8-b20f-0e3892ace72b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "53d578c7-4809-45d3-ac8d-3738f9daec7e",
      "documentation": "Creates a signature from a digest using the specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/sign",
      "responses": [
        {
          "uuid": "52e78916-c1d1-42b5-8d16-bd6bf8c71637",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The signature value.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "592cb28a-be89-4549-8e53-1a71c53873e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "af65ae28-ee12-4168-95e5-529286d4f086",
      "documentation": "Unwraps a symmetric key using the specified key that was initially used for wrapping that key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/unwrapkey",
      "responses": [
        {
          "uuid": "5cb594c1-02e2-4d27-9650-492d23f0f248",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The unwrapped symmetric key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11b72e53-613e-4c06-8477-c6d7b8de6ce6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1ae7235f-55ec-4287-abc9-eafae74cf515",
      "documentation": "Verifies a signature using a specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/verify",
      "responses": [
        {
          "uuid": "ba4d3763-f02c-4ea9-a5d1-d277c0935287",
          "body": "{\n  \"value\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The verification result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b53f3322-35d4-4656-a504-d6ab8663b798",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "30f5f7db-4d34-4b6b-858e-6f4229ffee84",
      "documentation": "Wraps a symmetric key using a specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/wrapkey",
      "responses": [
        {
          "uuid": "82aaed2e-4164-4c68-b249-599312521bf8",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The wrapped symmetric key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4e0a0eef-ffa9-49c3-9d62-65d4bc954c67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "19beca81-5e75-4361-adea-aa8842084d03",
      "documentation": "List secrets in a specified key vault.",
      "method": "get",
      "endpoint": "secrets",
      "responses": [
        {
          "uuid": "b50378b9-bafc-4589-9630-c9ec7e514367",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'datatype.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of secrets in the vault along with a link to the next page of secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1f9ed2b6-91a3-4ce2-a3f3-0e57c89b4d3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8aca19ec-ea70-4496-81ab-3a9af7d99538",
      "documentation": "Restores a backed up secret to a vault.",
      "method": "post",
      "endpoint": "secrets/restore",
      "responses": [
        {
          "uuid": "9b722fb4-727f-4031-9f95-3ec6f2301a55",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored secret bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2c674661-794d-4d1b-aca3-cee05fcd9d15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "adac39ea-175c-4ce3-b794-8dfc602ca103",
      "documentation": "Deletes a secret from a specified key vault.",
      "method": "delete",
      "endpoint": "secrets/{secret-name}",
      "responses": [
        {
          "uuid": "39414ed9-9c8b-420d-aa1f-48b8e6e288bb",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted secret and information on when the secret will be deleted, and how to recover the deleted secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf9d55ba-d650-48c1-ba42-71dda0371605",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "834d3a15-a921-4994-b001-2499d42ec434",
      "documentation": "Sets a secret in a specified key vault.",
      "method": "put",
      "endpoint": "secrets/{secret-name}",
      "responses": [
        {
          "uuid": "02620faf-e669-4fb5-a771-b5797f22e8ec",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A secret bundle containing the result of the set secret request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f7b48fef-a7bb-4651-be4a-e7b484704fe7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3dfe00b6-247b-4005-9db9-96aa6428f097",
      "documentation": "Backs up the specified secret.",
      "method": "post",
      "endpoint": "secrets/{secret-name}/backup",
      "responses": [
        {
          "uuid": "1d3ce320-f927-4f0e-a578-3801987228e8",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "957d7b56-8a1c-4a56-bce0-4b59f2ff6936",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e92d4e2-99c3-40e9-9b76-fcac6c29d456",
      "documentation": "List all versions of the specified secret.",
      "method": "get",
      "endpoint": "secrets/{secret-name}/versions",
      "responses": [
        {
          "uuid": "52fb1fb4-77ff-4cc7-a71d-f2a2ed441e4f",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"exp\": {{faker 'datatype.number'}},\n        \"nbf\": {{faker 'datatype.number'}},\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'datatype.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of secrets along with a link to the next page of secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5bde62df-d6a3-46c1-8841-ceb7ec86745b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9f4ee339-058e-4be2-9f7d-cfb60aad0809",
      "documentation": "Get a specified secret from a given key vault.",
      "method": "get",
      "endpoint": "secrets/{secret-name}/{secret-version}",
      "responses": [
        {
          "uuid": "0786b930-26d9-438a-aacf-1fee3daa16f0",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a001c3f2-02bd-4563-95d3-145254e4b673",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b1181cf6-41b7-484a-88a8-2c887949b8d1",
      "documentation": "Updates the attributes associated with a specified secret in a given key vault.",
      "method": "patch",
      "endpoint": "secrets/{secret-name}/{secret-version}",
      "responses": [
        {
          "uuid": "df558392-dad0-4875-8a0c-11e215a1658b",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"exp\": {{faker 'datatype.number'}},\n    \"nbf\": {{faker 'datatype.number'}},\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'datatype.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cc92fefc-72b2-4ecf-83f4-b9a829cb5feb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6af37e4-fa8d-4142-b10a-679a9e3c38d2",
      "documentation": "List storage accounts managed by the specified key vault. This operation requires the storage/list permission.",
      "method": "get",
      "endpoint": "storage",
      "responses": [
        {
          "uuid": "326e5f9d-7c3d-46f8-8217-0f729265c03e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"id\": \"\",\n      \"resourceId\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of storage accounts along with a link to the next page of storage accounts.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "96d188ee-d064-4c0e-99ad-e74b074f908a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5588d653-2ed1-4791-bd2f-65b7f60340bb",
      "documentation": "Restores a backed up storage account to a vault.",
      "method": "post",
      "endpoint": "storage/restore",
      "responses": [
        {
          "uuid": "8bc5742f-b84e-41b3-833f-561f69ee936f",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored storage account bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "51a45007-2a4a-48b3-80b7-92ec57f62ae5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "355594ae-1fa9-450f-bcbe-bf446f211b5b",
      "documentation": "Deletes a storage account. This operation requires the storage/delete permission.",
      "method": "delete",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "5d565e81-7e7c-4d90-870f-2d89fec3663a",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted storage account and information on when the storage account will be deleted, and how to recover the deleted storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3efc01a0-feb1-42b9-821e-5cab8c925fdb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0b6fc132-da10-4b57-9360-06f7fd78177b",
      "documentation": "Gets information about a specified storage account. This operation requires the storage/get permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "0af067a1-f76d-4d52-be26-ddcbf3cf4ae0",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ce41cc3-6b2f-41b6-9c79-39249ea03198",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c70c0d5c-12b6-4efd-b240-5b05489900f0",
      "documentation": "Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.",
      "method": "patch",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "df95eb64-6366-4d47-ad2d-a33cfefb122f",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6a0d6161-dea8-40a1-9d9b-511f20c38231",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a366bf35-4ed2-4528-b134-c49420137436",
      "documentation": "Creates or updates a new storage account. This operation requires the storage/set permission.",
      "method": "put",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "a922f63e-c2f4-4887-aae5-f9b92a86a4ad",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The created storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e6ba6364-a90b-4db2-9e8b-0b731a2d30a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f6900c7f-5b62-4bf2-b8f4-eac7d36c0d6b",
      "documentation": "Backs up the specified storage account.",
      "method": "post",
      "endpoint": "storage/{storage-account-name}/backup",
      "responses": [
        {
          "uuid": "47ba928d-3157-46b9-ae13-c60f4941a60e",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d2f23572-b017-4a55-9fba-3152d16a44f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6473de66-f8c9-4fa6-a782-016476ab16d1",
      "documentation": "Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.",
      "method": "post",
      "endpoint": "storage/{storage-account-name}/regeneratekey",
      "responses": [
        {
          "uuid": "ba9cf359-272a-4e40-9bf7-71c5d5d9ecb3",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'datatype.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9f64ad09-b213-4ce1-bffe-a4d71013fc3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bcd427f2-a4f8-470c-8c5a-8921b73805e9",
      "documentation": "List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}/sas",
      "responses": [
        {
          "uuid": "5dc4846d-cfd1-49c6-a4ea-ab0c2e5819d7",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'datatype.number'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'datatype.number'}}\n      },\n      \"id\": \"\",\n      \"sid\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ca22676-5f15-4fdc-99ad-574f67e2d75a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0a53e1d7-c95a-4bbd-93cb-e41503089fbc",
      "documentation": "Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.",
      "method": "delete",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "a4414732-a606-4038-899b-8611ecf498ad",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted SAS definition and information on when the SAS definition will be deleted, and how to recover the deleted SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b498d60e-f5d9-4d21-ad75-e974740c75ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "54726d17-eb78-41d9-a27e-02b42198db36",
      "documentation": "Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "9bc5cac0-d1a9-435e-87ca-56221a2764bb",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "adccb380-c2e0-40b0-8593-c18f3ae2ee31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27a90c78-0808-4388-b148-4a36cd9485ef",
      "documentation": "Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.",
      "method": "patch",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "01ed044d-7c47-4756-ab46-498f10af7dfe",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c48c0eaf-c18c-4f36-8de3-4a6253479d7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "762e875d-e1eb-4470-a6ba-2779091b0b1d",
      "documentation": "Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.",
      "method": "put",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "baec5f64-146d-40c1-9128-06940eab2e9d",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'datatype.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The created SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e47e47d1-7bf4-4b75-9776-91fcd6d687a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}