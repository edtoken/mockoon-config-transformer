{
  "uuid": "682a5351-4a68-4dd4-9646-4e1af45df912",
  "lastMigration": 24,
  "name": "Car Configurator",
  "endpointPrefix": "configurator_tryout/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f8b5b0cc-f1bf-4de7-8111-8f25a6a7293a",
      "documentation": "Get all available markets.",
      "method": "get",
      "endpoint": "markets",
      "responses": [
        {
          "uuid": "d9e7cfd3-52ec-4471-86e7-120f33a7b4c5",
          "body": "[\n  {\n    \"_links\": {\n      \"bodies\": {\n        \"href\": \"\"\n      },\n      \"classes\": {\n        \"href\": \"\"\n      },\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"productgroups\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"country\": \"\",\n    \"language\": \"\",\n    \"marketId\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0b7a428f-d4f2-45e3-8fed-635c56417c3c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters language and/or country",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5392a5e-09cf-4654-972d-adfd823935be",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * Language parameter is not valid\n * Country parameter is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1417223c-1bbb-477f-84a1-36922a5235e0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b2a2e47e-c56a-4f87-bb2f-149e0023c56f",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fbac5557-2e2b-4dcb-8547-83e2d313f94a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4aa19172-bd91-4b7e-b597-461e700bcfe1",
      "documentation": "Get the market with the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId",
      "responses": [
        {
          "uuid": "4c1c96bc-0075-4317-8640-21909f9f36df",
          "body": "{\n  \"_links\": {\n    \"bodies\": {\n      \"href\": \"\"\n    },\n    \"classes\": {\n      \"href\": \"\"\n    },\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"productgroups\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"country\": \"\",\n  \"language\": \"\",\n  \"marketId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d1d98d8b-6af1-47b9-b083-a585a17e1ab0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "MarketId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "775d9ff6-97ed-4835-b23f-b19ed10b9eef",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2733e4a1-3b89-43b4-b418-49a72600d060",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found for requested marketId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a40e49a-c344-4579-b283-f017fa7f6446",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4bde626-95e7-457b-9dcb-d28c87c911ac",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d89d2e60-4e0d-418c-89fa-0d6d82a6d0ff",
      "documentation": "Get all available bodies for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/bodies",
      "responses": [
        {
          "uuid": "96b53274-068e-4b3d-a815-e318f7c0360c",
          "body": "[\n  {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"bodyId\": \"\",\n    \"bodyName\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a67124d9-5239-4d1a-b81b-30cf2d5a2d9f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "963b398a-0cd2-41bd-8fe2-3255750a3940",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * ProductGroups is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ea280fd-92bf-4d08-824a-d34dcc77b544",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ac7dc1bf-a6e7-4515-952f-ee3db12da84e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d6789112-3b14-4991-b65d-1f41c2079329",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4e75d497-7d94-4721-84b4-69e552b1a716",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e36bb2aa-4cc0-4ea2-84ed-ffe00161fdb9",
      "documentation": "Get the body for the given marketId and bodyId.",
      "method": "get",
      "endpoint": "markets/:marketId/bodies/:bodyId",
      "responses": [
        {
          "uuid": "3f3610ef-16f3-44b1-94a2-a613b1c5e19f",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"bodyId\": \"\",\n  \"bodyName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "da044ffa-eb27-467e-92df-fd2a71057be2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * BodyId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8942512e-8a65-4298-b783-2176fc761393",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0d2a288-b639-43df-9c6e-f1e006c102cf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or VehicleBody not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8dc39748-190e-4b14-98ae-007445e50a54",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4d45a36-8fff-408c-b879-a5bae6eee4e8",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "56157209-7ff9-44eb-acc5-bca45897266d",
      "documentation": "Get all available classes for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/classes",
      "responses": [
        {
          "uuid": "4eb3acde-04a4-405e-8336-f6bbe3ecd1d9",
          "body": "[\n  {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"classId\": \"\",\n    \"className\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3b3af771-f255-40e3-b64f-ce370b99d25a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55ed1b98-fb65-40b1-86c3-7994ba0a8e01",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * Product group is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6fbc93cf-e2fe-4dab-8b51-78fc3a55f7dd",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "70c67aa4-b841-4b93-85c3-0ffe43468291",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16fc7851-8914-4e9f-adcc-250add0315f4",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c1a1456-fc5b-4ef8-b191-521d4b95be60",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "41407d75-0942-49ba-a4a8-d3ea3219e9c8",
      "documentation": "Get the class for the given marketId and classId.",
      "method": "get",
      "endpoint": "markets/:marketId/classes/:classId",
      "responses": [
        {
          "uuid": "2be01c5f-c524-42b3-9ab2-a8c7856e25ad",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"classId\": \"\",\n  \"className\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2555c883-1dc8-4854-96f5-b6191ec59ed7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3817d765-da51-4aef-ac6c-6d68d728e8c6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb988526-069e-448c-a39c-9aaa6d1e8f9c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or VehicleClass not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4b583a4-4f8b-4a7d-8d19-0f782547d698",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51a28718-681e-4afe-824e-e3da6f121d87",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "10da82d5-fadf-4a76-a8ca-d2f502ad963b",
      "documentation": "Get all available models for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/models",
      "responses": [
        {
          "uuid": "ff254ef2-d563-4ee9-82d4-f8ac54c1df64",
          "body": "[\n  {\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"baumuster\": \"\",\n    \"modelId\": \"\",\n    \"name\": \"\",\n    \"nationalSalesType\": \"\",\n    \"priceInformation\": {\n      \"currency\": \"\",\n      \"instalmentPrice\": {{faker 'datatype.number'}},\n      \"netPrice\": {{faker 'datatype.number'}},\n      \"price\": {{faker 'datatype.number'}},\n      \"taxes\": [\n        {\n          \"amount\": {{faker 'datatype.number'}},\n          \"baseAmount\": {{faker 'datatype.number'}},\n          \"charge\": {{faker 'datatype.number'}},\n          \"id\": \"\",\n          \"rate\": {{faker 'datatype.number'}}\n        }\n      ]\n    },\n    \"productGroup\": \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\",\n    \"shortName\": \"\",\n    \"vehicleBody\": {\n      \"_links\": {\n        \"models\": {\n          \"href\": \"\"\n        },\n        \"self\": {\n          \"href\": \"\"\n        }\n      },\n      \"bodyId\": \"\",\n      \"bodyName\": \"\"\n    },\n    \"vehicleClass\": {\n      \"_links\": {\n        \"models\": {\n          \"href\": \"\"\n        },\n        \"self\": {\n          \"href\": \"\"\n        }\n      },\n      \"classId\": \"\",\n      \"className\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c9f2f872-657d-41b8-a0df-f906e793239a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId, baumuster4prefix, baumuster, nationalSalesType and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f3af354-38a1-4d4b-bfc2-5dbe6c049d9c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * Product group is not valid\n * baumuster4prefix is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb47c784-21ed-4428-9caa-2d5959a4c7ea",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7eb77c8e-9df6-490e-aa39-7667a75d1877",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fda7e59-1b4e-402a-b8db-82c2d9b500d6",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0f99487-9739-4a21-99ae-3d4dd71f9de7",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "00abd302-0a7a-441f-83bf-fea33722ddeb",
      "documentation": "Get the model for the given marketId and modelId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId",
      "responses": [
        {
          "uuid": "8a4ccbce-e204-4965-8ad7-503e23b43845",
          "body": "{\n  \"_links\": {\n    \"configuration\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"baumuster\": \"\",\n  \"modelId\": \"\",\n  \"name\": \"\",\n  \"nationalSalesType\": \"\",\n  \"priceInformation\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'datatype.number'}},\n    \"netPrice\": {{faker 'datatype.number'}},\n    \"price\": {{faker 'datatype.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'datatype.number'}},\n        \"baseAmount\": {{faker 'datatype.number'}},\n        \"charge\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"productGroup\": \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\",\n  \"shortName\": \"\",\n  \"vehicleBody\": {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"bodyId\": \"\",\n    \"bodyName\": \"\"\n  },\n  \"vehicleClass\": {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"classId\": \"\",\n    \"className\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "63d917b5-ffd5-4bf1-9be5-19b762fe1b0a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2d783d1-4683-48ca-b495-03dae1d56b95",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e05a530a-eb95-4afc-a0b3-1bb8a32cef06",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or Model not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4da2056c-b17b-4cd7-9284-4a045e69c513",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c78d42e6-5a7a-4801-9367-c17769b604f3",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "59dc406a-c0e0-4bf2-bb2b-6b5925214868",
      "documentation": "Get the initial configuration for the given marketId and modelId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/initial",
      "responses": [
        {
          "uuid": "b030b792-5285-4d9d-841e-b7f2f7681b3d",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'datatype.number'}},\n    \"netPrice\": {{faker 'datatype.number'}},\n    \"price\": {{faker 'datatype.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'datatype.number'}},\n        \"baseAmount\": {{faker 'datatype.number'}},\n        \"charge\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'datatype.number'}},\n    \"netPrice\": {{faker 'datatype.number'}},\n    \"price\": {{faker 'datatype.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'datatype.number'}},\n        \"baseAmount\": {{faker 'datatype.number'}},\n        \"charge\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'datatype.number'}}\n    },\n    \"doors\": {{faker 'datatype.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'datatype.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'datatype.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'datatype.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'datatype.boolean'}},\n      \"hidden\": {{faker 'datatype.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'datatype.number'}},\n        \"netPrice\": {{faker 'datatype.number'}},\n        \"price\": {{faker 'datatype.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'datatype.number'}},\n            \"baseAmount\": {{faker 'datatype.number'}},\n            \"charge\": {{faker 'datatype.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'datatype.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'datatype.boolean'}},\n      \"selected\": {{faker 'datatype.boolean'}},\n      \"standard\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0b42bcb5-a842-4f98-bb3e-aa04102deaf2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9316611-556c-4f2d-a8ed-4e64befeef90",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d387038b-220a-499d-ac27-18c8251d9880",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or Model not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9537e1d-1e2f-4e41-ad52-6547ee828bdd",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1ff9e08-0051-4a91-9a10-904fcfcecee0",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4bd2f012-90d9-439d-93de-434fc1ce44ec",
      "documentation": "Get the configuration for the given marketId, modelId and configurationId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId",
      "responses": [
        {
          "uuid": "9376d1c7-fe07-438b-bac0-8ef7b5a19284",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'datatype.number'}},\n    \"netPrice\": {{faker 'datatype.number'}},\n    \"price\": {{faker 'datatype.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'datatype.number'}},\n        \"baseAmount\": {{faker 'datatype.number'}},\n        \"charge\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'datatype.number'}},\n    \"netPrice\": {{faker 'datatype.number'}},\n    \"price\": {{faker 'datatype.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'datatype.number'}},\n        \"baseAmount\": {{faker 'datatype.number'}},\n        \"charge\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'datatype.number'}}\n    },\n    \"doors\": {{faker 'datatype.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'datatype.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'datatype.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'datatype.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'datatype.boolean'}},\n      \"hidden\": {{faker 'datatype.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'datatype.number'}},\n        \"netPrice\": {{faker 'datatype.number'}},\n        \"price\": {{faker 'datatype.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'datatype.number'}},\n            \"baseAmount\": {{faker 'datatype.number'}},\n            \"charge\": {{faker 'datatype.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'datatype.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'datatype.boolean'}},\n      \"selected\": {{faker 'datatype.boolean'}},\n      \"standard\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d9729377-f668-40a1-89cd-734ec490b13c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bede10e-9ab1-48e4-9ea7-787741710f84",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8c4eace6-5c8d-40f6-96ed-bec3872bbbee",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7d514cd-bf38-4e01-9fb5-cfc1247bc26b",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c78353b1-ed43-4e5c-aa89-34affa805222",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27dd07aa-3feb-4d0c-9fff-cc999de07108",
      "documentation": "Get the alternatives for the given marketId, modelId, configurationId and componentList.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/alternatives/:componentList",
      "responses": [
        {
          "uuid": "71623246-4810-444d-888f-6e96161aa941",
          "body": "[\n  {\n    \"_links\": {\n      \"imageapi_vehicle\": {\n        \"href\": \"\"\n      },\n      \"selectables\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"addedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'datatype.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'datatype.boolean'}},\n        \"hidden\": {{faker 'datatype.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'datatype.number'}},\n          \"netPrice\": {{faker 'datatype.number'}},\n          \"price\": {{faker 'datatype.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'datatype.number'}},\n              \"baseAmount\": {{faker 'datatype.number'}},\n              \"charge\": {{faker 'datatype.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'datatype.boolean'}},\n        \"selected\": {{faker 'datatype.boolean'}},\n        \"standard\": {{faker 'datatype.boolean'}}\n      }\n    ],\n    \"configurationId\": \"\",\n    \"marketId\": \"\",\n    \"modelId\": \"\",\n    \"priceInformation\": {},\n    \"removedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'datatype.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'datatype.boolean'}},\n        \"hidden\": {{faker 'datatype.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'datatype.number'}},\n          \"netPrice\": {{faker 'datatype.number'}},\n          \"price\": {{faker 'datatype.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'datatype.number'}},\n              \"baseAmount\": {{faker 'datatype.number'}},\n              \"charge\": {{faker 'datatype.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'datatype.boolean'}},\n        \"selected\": {{faker 'datatype.boolean'}},\n        \"standard\": {{faker 'datatype.boolean'}}\n      }\n    ],\n    \"updatedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'datatype.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'datatype.boolean'}},\n        \"hidden\": {{faker 'datatype.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'datatype.number'}},\n          \"netPrice\": {{faker 'datatype.number'}},\n          \"price\": {{faker 'datatype.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'datatype.number'}},\n              \"baseAmount\": {{faker 'datatype.number'}},\n              \"charge\": {{faker 'datatype.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'datatype.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'datatype.boolean'}},\n        \"selected\": {{faker 'datatype.boolean'}},\n        \"standard\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "78a2158e-cc38-4b1e-a6b3-90cb6441ea68",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid\n * ComponentList is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7c5cf67-a475-4184-b351-8e7a6b636405",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f82f9347-c16f-45c3-8d68-400ee6c78f83",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7ffa1ed-d13b-4bf0-b7e9-2ad968060adb",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b0595f19-a5bb-45a3-a8ab-1ba5c1e4a132",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "099f5c2b-5306-4462-b7c7-7a429accae79",
      "documentation": "Returns URLs pointing to images in JPG format in the highest available resolution (depending on the component) of the vehicle's:\n  * engine (1024x576 px),\n  * rim (710x710 px),\n  * trim (800x600 px),\n  * paints (800x600 px),\n  * upholstery (800x600 px) and\n  * equipments (740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components",
      "responses": [
        {
          "uuid": "69282b97-4f65-4354-a636-12eca0373429",
          "body": "{\n  \"components\": {\n    \"engine\": {\n      \"url\": \"\"\n    },\n    \"equipments\": {},\n    \"paint\": {\n      \"paint1\": {\n        \"code\": \"\",\n        \"url\": \"\"\n      },\n      \"paint2\": {\n        \"code\": \"\",\n        \"url\": \"\"\n      }\n    },\n    \"rim\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"trim\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"upholstery\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b6643ca5-8320-4d2b-85bb-067669b58fc3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f33cdb41-47a5-453b-b353-78982f65bb57",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ce4252b-84a0-4806-b4d3-517bc7e3e275",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a0cc628f-2278-459c-b181-67544c63f61c",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "570cb017-9e84-44db-be26-8b0e0ebf96d8",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b98ec0eb-376b-4967-b584-5e3be2c28e7f",
      "documentation": "Returns a URL pointing to an image of the vehicles engine.  These images are available in the resolution 1024x576 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/engine",
      "responses": [
        {
          "uuid": "f6b7f75e-fcb4-4568-aa4a-2a1afd254ecb",
          "body": "{\n  \"engine\": {\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "71618eb9-1dad-4533-bfc9-7014fa8a55e6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0959b24f-bea6-409e-8dec-b54a6648f345",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f2316b6-cad3-43cc-a36f-36a57eb0463e",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20ff78be-a39c-458b-8341-f44632220795",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44d0eeab-ddc6-4122-8037-ebf8105da9c4",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4cda8cf0-da77-48ec-b716-a2c760b26ad0",
      "documentation": "Returns URLs pointing to images of this vehicle's equipments. The images are available in the highest possible resolution (usually 740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/equipments",
      "responses": [
        {
          "uuid": "762153df-f4c7-457d-b014-22cce2bca744",
          "body": "{\n  \"equipments\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "371b4c76-0232-4642-a9f7-a4b4d25f820f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d34ae253-2466-4b3c-8e71-c6d0b259f7ba",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b71f2dcb-a80a-4956-b28d-384d3d7665cd",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48884898-8dad-4744-8424-222647cb0a5c",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cec1a15b-8558-4a54-bca1-a80b65a8521f",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fa7e7e05-d07b-4c08-ad05-d314c913d7b2",
      "documentation": "Returns URLs pointing to images of this vehicle's equipments. The images are available in the highest possible resolution (usually 740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/equipments/:componentCode",
      "responses": [
        {
          "uuid": "5257156b-9f2b-45c3-92d5-e7fe20d56c9a",
          "body": "{\n  \"equipment\": {\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1fb2f2f0-ca2e-4c80-a457-c307062b1981",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3520cc68-d7f5-4e1c-bf70-666df39e8e0a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ba00f95-fe48-4090-b05d-25228e3bd909",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a7a3253-ae03-4b3c-8b97-b7df35a7c046",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c119f89f-ff28-40a2-95d0-03b2775dbef5",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c6723d4-bffd-4a3e-83cf-70b1f0ee260b",
      "documentation": "Returns URLs pointing to images of this vehicles paint.  These images are available in resolution 800x600 px.  Note there might be two paints (e.g. Smart, 'paint' for body panel and 'paint2' for the tridion cell)",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/paint",
      "responses": [
        {
          "uuid": "d63ed705-f9c8-4aa1-90e5-a062d0722e02",
          "body": "{\n  \"paint\": {\n    \"paint1\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"paint2\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7444adcc-ccad-46e0-8ccd-0fee652379fb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eab88641-cdd4-47e3-9694-a47b224460ed",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb4a8305-5f98-4293-bc3a-22c0c197f9b3",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "742c1223-0e60-4b0d-82e2-7bd039614175",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "956d7345-ff03-4b6e-9055-57d1f95a5da1",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b066dc0e-9a21-43a6-91ba-a1f293fd198a",
      "documentation": "Returns a URL pointing to an image of the vehicles rim.  These images are available in the resolution 710x710 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/rim",
      "responses": [
        {
          "uuid": "9f87a556-e1a0-4d8f-a57b-9105af51a5f6",
          "body": "{\n  \"rim\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "56bebb9f-02a0-46f8-81a1-2e1f535e8a1a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54936a93-98be-47e7-a04f-e9d84c28d770",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b847cc81-d55c-4ab3-8c36-16d859aec004",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da4e40eb-ca16-44bb-a499-92382835c194",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4edc03e9-c642-469c-a956-cffe2ec6cfdb",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "63c56923-7f8e-4227-a782-31e992c68b7e",
      "documentation": "Returns a URL pointing to an image of this vehicles trim.  These images are available in resolution 800x600 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/trim",
      "responses": [
        {
          "uuid": "da6b36f2-b178-46fb-97d1-c921a6f6e37b",
          "body": "{\n  \"trim\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1dc1c91b-a46c-40bb-99ff-f5fc281dc602",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d77f4de5-9d07-467f-a933-1ee4b01b2c7e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a77c788b-334e-4786-b42d-d058b25b0a15",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b7a77cd0-8360-4c71-bfd5-5c50918f8ea7",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf949e44-0c1b-4cbc-bab3-fdcc779962b5",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "46db178d-7853-4bad-86be-992c6f940102",
      "documentation": "Returns URLs pointing to images of the vehicle's upholsteries. Tge images are available in the highest possible resolution (usually 800x600 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/upholstery",
      "responses": [
        {
          "uuid": "dca13128-4f61-45ac-b5cd-fef3b053cfeb",
          "body": "{\n  \"upholstery\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2fee1ac4-b8e2-4606-a77b-1063b651a4ea",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fae2d61e-c49e-45e8-b596-5ac7cac2a22b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b53ece81-9d32-46e6-885b-433d4a996a4d",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d0192840-8e13-418d-9857-b77363460b9a",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8708321c-4f85-4bb7-8c3b-4c894c70b5cb",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa755a5f-4be5-4e72-99ea-e720170c2fe2",
      "documentation": "Returns URLs pointing to PNG images of a vehicle with a white background.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/vehicle",
      "responses": [
        {
          "uuid": "197b844c-dce1-4f51-b0a1-71997d59b64b",
          "body": "{\n  \"vehicle\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "aa5a5798-569d-4de4-a425-325803727203",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "facced08-938b-455e-aa77-ff9d4554ad82",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "One of the provided parameters was invalid. Verify your query and inspect the global error object in the response for further information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8696cce2-424e-49ef-8628-64f1e837b55c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e25edaf-0328-4c73-bdf7-2d1bd42a4c4d",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "080eb142-f4c6-4119-955f-ac4540709e36",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a09f98fe-1346-44c2-ad2a-a3418327e627",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c0e77fd6-6b97-4a68-92be-9ba9af61cce5",
      "documentation": "Get the selectable components for the given marketId, modelId and configurationId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/selectables",
      "responses": [
        {
          "uuid": "a3e9f130-939b-4b16-80e2-95b73812b817",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "520fbd9b-d914-4247-9e65-1dddae850bed",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested componentTypes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0cd0124e-db61-4357-90b2-9878a6e0a181",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid\n * ComponentTypes is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b7b0735-ad68-4f3c-8a82-b0f873a14370",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9cb3e64-c74a-441a-9278-7bf62ddd7ae0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73b81fed-a44a-4fa3-82db-36358ae06788",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "74a9a464-b17d-4e59-9bdd-b4d88fc0c7c6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0944b1fd-b90b-4986-a9ef-9fd5036e9851",
      "documentation": "Stores the configuration of the given configurationId and modelId",
      "method": "post",
      "endpoint": "markets/:marketId/onlinecode",
      "responses": [
        {
          "uuid": "4fa5a060-0f6b-4b37-aab1-7b8623b10f84",
          "body": "{\n  \"onlineCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c09dffb-ea91-4bf8-bccb-ebda799a91b4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "72c63344-4fee-4ee3-8e83-7b4fc271efbc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e01aa7a-8be8-42e7-8368-a5ef93651f44",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Configuration has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b75e1e2d-8227-49c4-ac54-7d8bfd359bba",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c08fd4a-e54b-4817-aeec-1a05d09845c7",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9fc841e4-0b0f-4377-93f8-007d93d4415f",
      "documentation": "Get the configuration of the given onlineCode and marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/onlinecode/:onlineCode",
      "responses": [
        {
          "uuid": "f6275acb-801f-4afd-b255-f83e7537d2b6",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'datatype.number'}},\n    \"netPrice\": {{faker 'datatype.number'}},\n    \"price\": {{faker 'datatype.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'datatype.number'}},\n        \"baseAmount\": {{faker 'datatype.number'}},\n        \"charge\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'datatype.number'}},\n    \"netPrice\": {{faker 'datatype.number'}},\n    \"price\": {{faker 'datatype.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'datatype.number'}},\n        \"baseAmount\": {{faker 'datatype.number'}},\n        \"charge\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'datatype.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'datatype.number'}}\n    },\n    \"doors\": {{faker 'datatype.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'datatype.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'datatype.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'datatype.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'datatype.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'datatype.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'datatype.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'datatype.boolean'}},\n      \"hidden\": {{faker 'datatype.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'datatype.number'}},\n        \"netPrice\": {{faker 'datatype.number'}},\n        \"price\": {{faker 'datatype.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'datatype.number'}},\n            \"baseAmount\": {{faker 'datatype.number'}},\n            \"charge\": {{faker 'datatype.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'datatype.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'datatype.boolean'}},\n      \"selected\": {{faker 'datatype.boolean'}},\n      \"standard\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f9c9e5f7-049f-48a9-a3f1-834ad9d8a779",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * OnlineCode is not valid\n * Fields is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ac91f44-e685-4fa5-a4d2-2f02fd1474f0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cad7a800-5d3f-4e7e-a333-768d36e5f929",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Configuration or Market has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "95fa9e11-0eab-43f3-bb25-97d3a055c3cc",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0392ece6-ccac-49fa-9c2f-54dd098a88d6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aec704d6-65d8-4fb1-9fb6-b9e3f6ceae07",
      "documentation": "Get all configured active product groups for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/productgroups",
      "responses": [
        {
          "uuid": "4398425e-62d0-484c-aba6-62f4284ed5d9",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"market\": {\n    \"_links\": {\n      \"bodies\": {\n        \"href\": \"\"\n      },\n      \"classes\": {\n        \"href\": \"\"\n      },\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"productgroups\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"country\": \"\",\n    \"language\": \"\",\n    \"marketId\": \"\"\n  },\n  \"productGroups\": [\n    \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "18f51135-3512-4933-8071-b9fb06fb3376",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "MarketId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4994064-1b69-406c-85e9-4a0f0f13b75d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8f8acd01-b4d5-44d3-8812-37bf8e4501fa",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "193566e0-3c80-490e-9dd4-4753fc59ceb6",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "708ece14-c950-4ebd-afc7-755182f42d8e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}