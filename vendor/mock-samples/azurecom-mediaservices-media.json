{
  "uuid": "0b232cd7-9b65-4092-ae53-19489970f1a9",
  "lastMigration": 24,
  "name": "MediaServicesManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "0a0d7428-8302-473f-a07f-89d6a9629591",
      "documentation": "Lists all of the available Media Services REST API operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.Media/operations",
      "responses": [
        {
          "uuid": "5eb32c35-0a91-4027-b060-a70b791de9ac",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. Returns a list of operations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "da0d7ae0-12f4-4b96-85d3-337f6c071348",
      "documentation": "Checks whether the Media Service resource name is available. The name must be globally unique.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Media/CheckNameAvailability",
      "responses": [
        {
          "uuid": "89fdea70-5098-4e30-bb06-b0fd67887559",
          "body": "{\n  \"message\": \"\",\n  \"nameAvailable\": {{faker 'datatype.boolean'}},\n  \"reason\": \"{{oneOf (array 'None' 'Invalid' 'AlreadyExists')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. Returns details about whether a Media Service resource name is available.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "34de850f-0cae-455b-8cb2-1dcd09cdb58e",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "CheckNameAvailability of a Media Service failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "89d82938-47c3-4d80-b4db-7954d8377eb1",
      "documentation": "Lists all of the Media Services in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices",
      "responses": [
        {
          "uuid": "baab0262-de72-46c6-ad51-93b2a2bcfbed",
          "body": "{\n  \"value\": [\n    {\n      \"location\": \"West US\",\n      \"properties\": {\n        \"storageAccounts\": [\n          {\n            \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n            \"isPrimary\": true\n          }\n        ]\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. Returns a list of all of the Media Services accounts in a resource group.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "81fc2a24-6897-44c1-ba9c-c45a00d29e82",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c4632489-88ac-4d85-a409-15dffb16a2b0",
      "documentation": "Deletes a Media Service.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName",
      "responses": [
        {
          "uuid": "c0f46a14-cdb1-41ad-9d4a-22d759707a19",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The Media Services account was deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "eefeebca-3779-46fe-a503-711cf126a4ae",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content. The account name does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a11e6e4-8289-403e-8ac5-0348cb80d5d2",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e520d2cd-c17d-4779-9dca-133b6d8cea01",
      "documentation": "Gets a Media Service.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName",
      "responses": [
        {
          "uuid": "4d176f90-f1b9-4d74-bc44-52ff0838800b",
          "body": "{\n  \"location\": \"West US\",\n  \"properties\": {\n    \"storageAccounts\": [\n      {\n        \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n        \"isPrimary\": true\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. Returns the details of the Media Services account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6f675f60-572f-4ad0-bf0d-d45237dca3e8",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a3855059-ff83-42b7-95dd-de1ecb9331f2",
      "documentation": "Updates a Media Service.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName",
      "responses": [
        {
          "uuid": "85f4dd24-9092-4e13-9a2a-fe071e1c5095",
          "body": "{\n  \"location\": \"West US\",\n  \"properties\": {\n    \"storageAccounts\": [\n      {\n        \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n        \"isPrimary\": true\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The Media Services account was updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "41b28783-8f98-412e-bcba-6ab2cacdf411",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fac89e75-da2e-47f4-a91e-251495b68757",
      "documentation": "Creates a Media Service.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName",
      "responses": [
        {
          "uuid": "7332b3c9-e079-4e09-9512-75250acd82c2",
          "body": "{\n  \"location\": \"West US\",\n  \"properties\": {\n    \"storageAccounts\": [\n      {\n        \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n        \"isPrimary\": true\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success. Returns the new Media Services account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cfe93de2-bc38-498a-ad30-7d764df09f29",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f1d536a9-0b33-4a4d-9e37-914c1820e246",
      "documentation": "Lists the keys for a Media Service.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName/listKeys",
      "responses": [
        {
          "uuid": "ccb6ceb0-3c1a-4d08-bfbb-fc2234de8d6d",
          "body": "{\n  \"primaryAuthEndpoint\": \"https://wamsprodglobal001acs.accesscontrol.windows.net/\",\n  \"primaryKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\",\n  \"scope\": \"urn:windowsazuremediaservices\",\n  \"secondaryAuthEndpoint\": \"https://wamsprodglobal002acs.accesscontrol.windows.net/\",\n  \"secondaryKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The keys for the Media Services account were listed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5d7ad559-d1dc-475f-be9d-5a855b8da8c2",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List Media Service keys failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "77fe54bb-0ce6-4abf-a6f4-a99a54a6f688",
      "documentation": "Regenerates a primary or secondary key for a Media Service.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName/regenerateKey",
      "responses": [
        {
          "uuid": "9851a6c6-4084-42d7-b148-3d3dff06520b",
          "body": "{\n  \"key\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The Media Services key specified in the input was regenerated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5e095db6-6c7a-45d7-809f-d02b78eaf584",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Regenerate Media Service key failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1db18612-54a1-4ffb-a2f8-0ba7762f2a40",
      "documentation": "Synchronizes storage account keys for a storage account associated with the Media Service account.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName/syncStorageKeys",
      "responses": [
        {
          "uuid": "d7aca7a7-46eb-403f-a1f5-8c93b9ae3475",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The keys for the storage account were synchronized.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "72131804-619b-4f2c-b6aa-4602f510e3ce",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Synch Media Service storage keys failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}