{
  "uuid": "1f471b81-085e-4e61-a618-7ef4ed4d3885",
  "lastMigration": 24,
  "name": "Batch API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7635016d-9801-436d-b204-74f8b4063f41",
      "documentation": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "7ed27321-f280-4a5a-aaaf-8b1e265f743a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9e2e3501-1610-45b5-8dbb-84735e4a4075",
      "documentation": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "542d4944-ecf9-4172-96b0-5fa7e724431c",
          "body": "{\n  \"done\": {{faker 'datatype.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6a30c1ff-230a-41b7-8bb3-e9cdfb0ad748",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1/:name/locations",
      "responses": [
        {
          "uuid": "aedad80c-0bd9-4063-9792-f59e7ca42086",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4979a79f-54d5-4f92-bf5b-895b8c83b7b0",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1/:name/operations",
      "responses": [
        {
          "uuid": "acf9fa13-58d7-4da2-86a0-0bee8974e2d8",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'datatype.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b4b89c82-397c-494b-97d7-7aee36d0c82c",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1/:name:cancel",
      "responses": [
        {
          "uuid": "94181df7-8934-4378-a84a-5a52dd4c9f8a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16c5a46b-3904-4586-b6ed-4a6071821aa0",
      "documentation": "List all Jobs for a project within a region.",
      "method": "get",
      "endpoint": "v1/:parent/jobs",
      "responses": [
        {
          "uuid": "2060a05d-2cc1-4089-a064-c62a7f0ef91c",
          "body": "{\n  \"jobs\": [\n    {\n      \"allocationPolicy\": {\n        \"instances\": [\n          {\n            \"installGpuDrivers\": {{faker 'datatype.boolean'}},\n            \"instanceTemplate\": \"\",\n            \"policy\": {\n              \"accelerators\": [\n                {\n                  \"count\": \"\",\n                  \"installGpuDrivers\": {{faker 'datatype.boolean'}},\n                  \"type\": \"\"\n                }\n              ],\n              \"disks\": [\n                {\n                  \"deviceName\": \"\",\n                  \"existingDisk\": \"\",\n                  \"newDisk\": {\n                    \"diskInterface\": \"\",\n                    \"image\": \"\",\n                    \"sizeGb\": \"\",\n                    \"snapshot\": \"\",\n                    \"type\": \"\"\n                  }\n                }\n              ],\n              \"machineType\": \"\",\n              \"minCpuPlatform\": \"\",\n              \"provisioningModel\": \"{{oneOf (array 'PROVISIONING_MODEL_UNSPECIFIED' 'STANDARD' 'SPOT' 'PREEMPTIBLE')}}\"\n            }\n          }\n        ],\n        \"labels\": {},\n        \"location\": {\n          \"allowedLocations\": [\n            \"\"\n          ]\n        },\n        \"network\": {\n          \"networkInterfaces\": [\n            {\n              \"network\": \"\",\n              \"noExternalIpAddress\": {{faker 'datatype.boolean'}},\n              \"subnetwork\": \"\"\n            }\n          ]\n        },\n        \"serviceAccount\": {\n          \"email\": \"\"\n        }\n      },\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"logsPolicy\": {\n        \"destination\": \"{{oneOf (array 'DESTINATION_UNSPECIFIED' 'CLOUD_LOGGING' 'PATH')}}\",\n        \"logsPath\": \"\"\n      },\n      \"name\": \"\",\n      \"notifications\": [\n        {\n          \"message\": {\n            \"newJobState\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'QUEUED' 'SCHEDULED' 'RUNNING' 'SUCCEEDED' 'FAILED' 'DELETION_IN_PROGRESS')}}\",\n            \"newTaskState\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'ASSIGNED' 'RUNNING' 'FAILED' 'SUCCEEDED')}}\",\n            \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'JOB_STATE_CHANGED' 'TASK_STATE_CHANGED')}}\"\n          },\n          \"pubsubTopic\": \"\"\n        }\n      ],\n      \"priority\": \"\",\n      \"status\": {\n        \"runDuration\": \"\",\n        \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'QUEUED' 'SCHEDULED' 'RUNNING' 'SUCCEEDED' 'FAILED' 'DELETION_IN_PROGRESS')}}\",\n        \"statusEvents\": [\n          {\n            \"description\": \"\",\n            \"eventTime\": \"\",\n            \"taskExecution\": {\n              \"exitCode\": {{faker 'datatype.number'}}\n            },\n            \"type\": \"\"\n          }\n        ],\n        \"taskGroups\": {}\n      },\n      \"taskGroups\": [\n        {\n          \"name\": \"\",\n          \"parallelism\": \"\",\n          \"permissiveSsh\": {{faker 'datatype.boolean'}},\n          \"requireHostsFile\": {{faker 'datatype.boolean'}},\n          \"taskCount\": \"\",\n          \"taskCountPerNode\": \"\",\n          \"taskEnvironments\": [\n            {\n              \"variables\": {}\n            }\n          ],\n          \"taskSpec\": {\n            \"computeResource\": {\n              \"bootDiskMib\": \"\",\n              \"cpuMilli\": \"\",\n              \"memoryMib\": \"\"\n            },\n            \"environment\": {\n              \"variables\": {}\n            },\n            \"environments\": {},\n            \"lifecyclePolicies\": [\n              {\n                \"action\": \"{{oneOf (array 'ACTION_UNSPECIFIED' 'RETRY_TASK' 'FAIL_TASK')}}\",\n                \"actionCondition\": {\n                  \"exitCodes\": [\n                    {{faker 'datatype.number'}}\n                  ]\n                }\n              }\n            ],\n            \"maxRetryCount\": {{faker 'datatype.number'}},\n            \"maxRunDuration\": \"\",\n            \"runnables\": [\n              {\n                \"alwaysRun\": {{faker 'datatype.boolean'}},\n                \"background\": {{faker 'datatype.boolean'}},\n                \"barrier\": {\n                  \"name\": \"\"\n                },\n                \"container\": {\n                  \"blockExternalNetwork\": {{faker 'datatype.boolean'}},\n                  \"commands\": [\n                    \"\"\n                  ],\n                  \"entrypoint\": \"\",\n                  \"imageUri\": \"\",\n                  \"options\": \"\",\n                  \"password\": \"\",\n                  \"username\": \"\",\n                  \"volumes\": [\n                    \"\"\n                  ]\n                },\n                \"environment\": {\n                  \"variables\": {}\n                },\n                \"ignoreExitStatus\": {{faker 'datatype.boolean'}},\n                \"script\": {\n                  \"path\": \"\",\n                  \"text\": \"\"\n                },\n                \"timeout\": \"\"\n              }\n            ],\n            \"volumes\": [\n              {\n                \"deviceName\": \"\",\n                \"gcs\": {\n                  \"remotePath\": \"\"\n                },\n                \"mountOptions\": [\n                  \"\"\n                ],\n                \"mountPath\": \"\",\n                \"nfs\": {\n                  \"remotePath\": \"\",\n                  \"server\": \"\"\n                }\n              }\n            ]\n          }\n        }\n      ],\n      \"uid\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "970fe173-e8d7-4781-991c-ab9a1b0c84fc",
      "documentation": "Create a Job.",
      "method": "post",
      "endpoint": "v1/:parent/jobs",
      "responses": [
        {
          "uuid": "bed300fe-dfcd-484e-8d5a-2c7966055e3f",
          "body": "{\n  \"allocationPolicy\": {\n    \"instances\": [\n      {\n        \"installGpuDrivers\": {{faker 'datatype.boolean'}},\n        \"instanceTemplate\": \"\",\n        \"policy\": {\n          \"accelerators\": [\n            {\n              \"count\": \"\",\n              \"installGpuDrivers\": {{faker 'datatype.boolean'}},\n              \"type\": \"\"\n            }\n          ],\n          \"disks\": [\n            {\n              \"deviceName\": \"\",\n              \"existingDisk\": \"\",\n              \"newDisk\": {\n                \"diskInterface\": \"\",\n                \"image\": \"\",\n                \"sizeGb\": \"\",\n                \"snapshot\": \"\",\n                \"type\": \"\"\n              }\n            }\n          ],\n          \"machineType\": \"\",\n          \"minCpuPlatform\": \"\",\n          \"provisioningModel\": \"{{oneOf (array 'PROVISIONING_MODEL_UNSPECIFIED' 'STANDARD' 'SPOT' 'PREEMPTIBLE')}}\"\n        }\n      }\n    ],\n    \"labels\": {},\n    \"location\": {\n      \"allowedLocations\": [\n        \"\"\n      ]\n    },\n    \"network\": {\n      \"networkInterfaces\": [\n        {\n          \"network\": \"\",\n          \"noExternalIpAddress\": {{faker 'datatype.boolean'}},\n          \"subnetwork\": \"\"\n        }\n      ]\n    },\n    \"serviceAccount\": {\n      \"email\": \"\"\n    }\n  },\n  \"createTime\": \"\",\n  \"labels\": {},\n  \"logsPolicy\": {\n    \"destination\": \"{{oneOf (array 'DESTINATION_UNSPECIFIED' 'CLOUD_LOGGING' 'PATH')}}\",\n    \"logsPath\": \"\"\n  },\n  \"name\": \"\",\n  \"notifications\": [\n    {\n      \"message\": {\n        \"newJobState\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'QUEUED' 'SCHEDULED' 'RUNNING' 'SUCCEEDED' 'FAILED' 'DELETION_IN_PROGRESS')}}\",\n        \"newTaskState\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'ASSIGNED' 'RUNNING' 'FAILED' 'SUCCEEDED')}}\",\n        \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'JOB_STATE_CHANGED' 'TASK_STATE_CHANGED')}}\"\n      },\n      \"pubsubTopic\": \"\"\n    }\n  ],\n  \"priority\": \"\",\n  \"status\": {\n    \"runDuration\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'QUEUED' 'SCHEDULED' 'RUNNING' 'SUCCEEDED' 'FAILED' 'DELETION_IN_PROGRESS')}}\",\n    \"statusEvents\": [\n      {\n        \"description\": \"\",\n        \"eventTime\": \"\",\n        \"taskExecution\": {\n          \"exitCode\": {{faker 'datatype.number'}}\n        },\n        \"type\": \"\"\n      }\n    ],\n    \"taskGroups\": {}\n  },\n  \"taskGroups\": [\n    {\n      \"name\": \"\",\n      \"parallelism\": \"\",\n      \"permissiveSsh\": {{faker 'datatype.boolean'}},\n      \"requireHostsFile\": {{faker 'datatype.boolean'}},\n      \"taskCount\": \"\",\n      \"taskCountPerNode\": \"\",\n      \"taskEnvironments\": [\n        {\n          \"variables\": {}\n        }\n      ],\n      \"taskSpec\": {\n        \"computeResource\": {\n          \"bootDiskMib\": \"\",\n          \"cpuMilli\": \"\",\n          \"memoryMib\": \"\"\n        },\n        \"environment\": {\n          \"variables\": {}\n        },\n        \"environments\": {},\n        \"lifecyclePolicies\": [\n          {\n            \"action\": \"{{oneOf (array 'ACTION_UNSPECIFIED' 'RETRY_TASK' 'FAIL_TASK')}}\",\n            \"actionCondition\": {\n              \"exitCodes\": [\n                {{faker 'datatype.number'}}\n              ]\n            }\n          }\n        ],\n        \"maxRetryCount\": {{faker 'datatype.number'}},\n        \"maxRunDuration\": \"\",\n        \"runnables\": [\n          {\n            \"alwaysRun\": {{faker 'datatype.boolean'}},\n            \"background\": {{faker 'datatype.boolean'}},\n            \"barrier\": {\n              \"name\": \"\"\n            },\n            \"container\": {\n              \"blockExternalNetwork\": {{faker 'datatype.boolean'}},\n              \"commands\": [\n                \"\"\n              ],\n              \"entrypoint\": \"\",\n              \"imageUri\": \"\",\n              \"options\": \"\",\n              \"password\": \"\",\n              \"username\": \"\",\n              \"volumes\": [\n                \"\"\n              ]\n            },\n            \"environment\": {\n              \"variables\": {}\n            },\n            \"ignoreExitStatus\": {{faker 'datatype.boolean'}},\n            \"script\": {\n              \"path\": \"\",\n              \"text\": \"\"\n            },\n            \"timeout\": \"\"\n          }\n        ],\n        \"volumes\": [\n          {\n            \"deviceName\": \"\",\n            \"gcs\": {\n              \"remotePath\": \"\"\n            },\n            \"mountOptions\": [\n              \"\"\n            ],\n            \"mountPath\": \"\",\n            \"nfs\": {\n              \"remotePath\": \"\",\n              \"server\": \"\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"uid\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4d93a6ca-f457-4957-96f0-9fc48cdd3275",
      "documentation": "Report agent's state, e.g. agent status and tasks information",
      "method": "post",
      "endpoint": "v1/:parent/state:report",
      "responses": [
        {
          "uuid": "68ce8326-2db0-4cb7-851f-9023a9b7c5dc",
          "body": "{\n  \"tasks\": [\n    {\n      \"intendedState\": \"{{oneOf (array 'INTENDED_STATE_UNSPECIFIED' 'ASSIGNED' 'CANCELLED' 'DELETED')}}\",\n      \"reachedBarrier\": \"\",\n      \"spec\": {\n        \"computeResource\": {\n          \"bootDiskMib\": \"\",\n          \"cpuMilli\": \"\",\n          \"memoryMib\": \"\"\n        },\n        \"environment\": {\n          \"variables\": {}\n        },\n        \"environments\": {},\n        \"lifecyclePolicies\": [\n          {\n            \"action\": \"{{oneOf (array 'ACTION_UNSPECIFIED' 'RETRY_TASK' 'FAIL_TASK')}}\",\n            \"actionCondition\": {\n              \"exitCodes\": [\n                {{faker 'datatype.number'}}\n              ]\n            }\n          }\n        ],\n        \"maxRetryCount\": {{faker 'datatype.number'}},\n        \"maxRunDuration\": \"\",\n        \"runnables\": [\n          {\n            \"alwaysRun\": {{faker 'datatype.boolean'}},\n            \"background\": {{faker 'datatype.boolean'}},\n            \"barrier\": {\n              \"name\": \"\"\n            },\n            \"container\": {\n              \"blockExternalNetwork\": {{faker 'datatype.boolean'}},\n              \"commands\": [\n                \"\"\n              ],\n              \"entrypoint\": \"\",\n              \"imageUri\": \"\",\n              \"options\": \"\",\n              \"password\": \"\",\n              \"username\": \"\",\n              \"volumes\": [\n                \"\"\n              ]\n            },\n            \"environment\": {\n              \"variables\": {}\n            },\n            \"ignoreExitStatus\": {{faker 'datatype.boolean'}},\n            \"script\": {\n              \"path\": \"\",\n              \"text\": \"\"\n            },\n            \"timeout\": \"\"\n          }\n        ],\n        \"volumes\": [\n          {\n            \"deviceName\": \"\",\n            \"gcs\": {\n              \"remotePath\": \"\"\n            },\n            \"mountOptions\": [\n              \"\"\n            ],\n            \"mountPath\": \"\",\n            \"nfs\": {\n              \"remotePath\": \"\",\n              \"server\": \"\"\n            }\n          }\n        ]\n      },\n      \"status\": {\n        \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'ASSIGNED' 'RUNNING' 'FAILED' 'SUCCEEDED')}}\",\n        \"statusEvents\": [\n          {\n            \"description\": \"\",\n            \"eventTime\": \"\",\n            \"taskExecution\": {\n              \"exitCode\": {{faker 'datatype.number'}}\n            },\n            \"type\": \"\"\n          }\n        ]\n      },\n      \"task\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ad6da72f-96bc-4b27-8821-e03ddba1c413",
      "documentation": "List Tasks associated with a job.",
      "method": "get",
      "endpoint": "v1/:parent/tasks",
      "responses": [
        {
          "uuid": "98d780b3-0003-4c8b-a445-a7e8ff28995b",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"tasks\": [\n    {\n      \"name\": \"\",\n      \"status\": {\n        \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'ASSIGNED' 'RUNNING' 'FAILED' 'SUCCEEDED')}}\",\n        \"statusEvents\": [\n          {\n            \"description\": \"\",\n            \"eventTime\": \"\",\n            \"taskExecution\": {\n              \"exitCode\": {{faker 'datatype.number'}}\n            },\n            \"type\": \"\"\n          }\n        ]\n      }\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "790e4aa4-7957-42a5-a14d-7d9e25442ec8",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "fec35cc8-554d-4c5e-9f6e-ca18acc2d4c4",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fb297484-2a12-48a9-9645-173beefb4f05",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "057501a6-30bc-48dd-b927-d5997ceb81c4",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c89bd49-51f7-422b-b250-e52b99fda054",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "a62a07b9-cb3a-4e69-881a-f171dfded440",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}