{
  "uuid": "0eed30a5-51da-4ac9-9136-d2c95bf5cec2",
  "lastMigration": 24,
  "name": "AWS Glue",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c2da65ec-f8ef-4cd5-9acf-7c86346c9e60",
      "documentation": "Creates one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchCreatePartition",
      "responses": [
        {
          "uuid": "82247607-2ff6-4d5b-8276-b22c4d0422b0",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValues\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f99618f2-2410-466a-b976-86ace4de4a98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c9409180-d8ce-452d-857b-5bbf3a16dea5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "81ce7bb7-a2a9-46b9-8b2f-3893f89b3a44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3589beb-5c71-4c63-9837-117df9cb758c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "805c908d-e24d-43c8-b41d-eb23582fe903",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f144c6b3-ecbd-4448-a54f-e3a3421253b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fe930d93-2cad-4de4-931e-78ba49514e9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "783eeadc-11a1-4b22-af3b-8604316aba9f",
      "documentation": "Deletes a list of connection definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteConnection",
      "responses": [
        {
          "uuid": "6abc554b-801a-42cb-800c-b9b321884a79",
          "body": "{\n  \"Succeeded\": [\n    \"\"\n  ],\n  \"Errors\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "db95db28-a309-45dd-8bc3-aae447b72113",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb2275dc-cc9c-4dec-be8a-c91272c94e0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c42df49a-b5f4-4632-a4c2-46ee36e05b18",
      "documentation": "Deletes one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeletePartition",
      "responses": [
        {
          "uuid": "e3089478-2396-458a-a3a4-097add9c65e1",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValues\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ccab14d-ec5d-4705-98f3-5d9e33a57510",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8df4a2f3-f439-49d9-a950-105bdec304d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c71a4cae-57b2-4b16-88a8-b6d2347cb9d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cea554ae-043f-4bd1-af5a-94a9419ae35e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8407f33e-4c9b-4a8f-8fb4-33c035243fb6",
      "documentation": "<p>Deletes multiple tables at once.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>BatchDeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteTable",
      "responses": [
        {
          "uuid": "c099ecfc-928a-4a0e-9e20-4f45b32ca008",
          "body": "{\n  \"Errors\": [\n    {\n      \"TableName\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f1062fcf-e8e7-470d-bec6-f4645339a54c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "990cfc2e-706d-48ce-a08a-b27784559622",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ca46bb5-2f95-4ba9-8c6a-9c292caa1881",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a00482d5-aabd-407a-a20e-35f573186dbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "36eb5488-75e4-415a-ba23-70713b43a121",
      "documentation": "Deletes a specified batch of versions of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteTableVersion",
      "responses": [
        {
          "uuid": "5eea3705-906d-4675-8969-eca82268e2d5",
          "body": "{\n  \"Errors\": [\n    {\n      \"TableName\": \"\",\n      \"VersionId\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5470a9be-2dcc-496f-9bd6-8978a7bd8fc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e13cce66-4027-41e2-87ef-2b57595c0226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7a6e89a-aa06-4535-bfa2-312ab7520562",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "56db763e-7cc2-425c-ac99-7c636172756d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "304ad65f-4cbe-4f91-931f-10218d3efc79",
      "documentation": "Retrieves information about a list of blueprints.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetBlueprints",
      "responses": [
        {
          "uuid": "97edc933-6f4f-4eb0-bc6d-c053a3c7587b",
          "body": "{\n  \"Blueprints\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ParameterSpec\": \"\",\n      \"BlueprintLocation\": \"\",\n      \"BlueprintServiceLocation\": \"\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LastActiveDefinition\": {\n        \"Description\": \"\",\n        \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n        \"ParameterSpec\": \"\",\n        \"BlueprintLocation\": \"\",\n        \"BlueprintServiceLocation\": \"\"\n      }\n    }\n  ],\n  \"MissingBlueprints\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2d773e95-d609-4b3b-b3a6-04776a18a2a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "79660bcd-1123-44a0-a885-fb4bacdf19cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8b99de4-0694-403d-9a32-b5e5eeabb673",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51701a28-6a79-4bf1-9714-be61ecf48d8b",
      "documentation": "Returns a list of resource metadata for a given list of crawler names. After calling the <code>ListCrawlers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetCrawlers",
      "responses": [
        {
          "uuid": "35f7e00d-0905-415e-b655-97a26733b52c",
          "body": "{\n  \"Crawlers\": [\n    {\n      \"Name\": \"\",\n      \"Role\": \"\",\n      \"Targets\": {\n        \"S3Targets\": [\n          {\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ],\n            \"ConnectionName\": \"\",\n            \"SampleSize\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"JdbcTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MongoDBTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"ScanAll\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"DynamoDBTargets\": [\n          {\n            \"Path\": \"\",\n            \"scanAll\": {{faker 'datatype.boolean'}},\n            \"scanRate\": {{faker 'datatype.float'}}\n          }\n        ],\n        \"CatalogTargets\": [\n          {\n            \"DatabaseName\": \"\",\n            \"Tables\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Classifiers\": [\n        \"\"\n      ],\n      \"RecrawlPolicy\": {\n        \"RecrawlBehavior\": \"\"\n      },\n      \"SchemaChangePolicy\": {\n        \"UpdateBehavior\": \"\",\n        \"DeleteBehavior\": \"\"\n      },\n      \"LineageConfiguration\": {\n        \"CrawlerLineageSettings\": \"\"\n      },\n      \"State\": \"\",\n      \"TablePrefix\": \"\",\n      \"Schedule\": {\n        \"ScheduleExpression\": \"\",\n        \"State\": \"\"\n      },\n      \"CrawlElapsedTime\": {{faker 'datatype.number'}},\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"LastCrawl\": {\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"LogGroup\": \"\",\n        \"LogStream\": \"\",\n        \"MessagePrefix\": \"\",\n        \"StartTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Version\": {{faker 'datatype.number'}},\n      \"Configuration\": \"\",\n      \"CrawlerSecurityConfiguration\": \"\"\n    }\n  ],\n  \"CrawlersNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4ee2bc18-4eca-4990-9ecc-55c98a292cc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "61899c46-3011-4788-9a02-b89fc426a42e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6642296f-57ca-45c0-9fc8-7db254cb94ee",
      "documentation": "Returns a list of resource metadata for a given list of development endpoint names. After calling the <code>ListDevEndpoints</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetDevEndpoints",
      "responses": [
        {
          "uuid": "c731f7ee-3a4a-4888-b193-2fc9f0b76121",
          "body": "{\n  \"DevEndpoints\": [\n    {\n      \"EndpointName\": \"\",\n      \"RoleArn\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"SubnetId\": \"\",\n      \"YarnEndpointAddress\": \"\",\n      \"PrivateAddress\": \"\",\n      \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'datatype.number'}},\n      \"PublicAddress\": \"\",\n      \"Status\": \"\",\n      \"WorkerType\": \"\",\n      \"GlueVersion\": \"\",\n      \"NumberOfWorkers\": {{faker 'datatype.number'}},\n      \"NumberOfNodes\": {{faker 'datatype.number'}},\n      \"AvailabilityZone\": \"\",\n      \"VpcId\": \"\",\n      \"ExtraPythonLibsS3Path\": \"\",\n      \"ExtraJarsS3Path\": \"\",\n      \"FailureReason\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"PublicKey\": \"\",\n      \"PublicKeys\": [\n        \"\"\n      ],\n      \"SecurityConfiguration\": \"\",\n      \"Arguments\": {}\n    }\n  ],\n  \"DevEndpointsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9f1099dc-4fd3-4759-963f-2dec6d05a5ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3c04bf6-8031-4621-adab-31b167030379",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2ed50745-6afd-4a92-8047-1dbbbd5d9b09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ede08bcc-1998-450b-8f64-542563e5cf5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9014be5b-700c-431e-b821-7dbc5b17d561",
      "documentation": "Returns a list of resource metadata for a given list of job names. After calling the <code>ListJobs</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetJobs",
      "responses": [
        {
          "uuid": "fd7fe853-e062-4a81-99ed-dca184c39ac8",
          "body": "{\n  \"Jobs\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LogUri\": \"\",\n      \"Role\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionProperty\": {\n        \"MaxConcurrentRuns\": {{faker 'datatype.number'}}\n      },\n      \"Command\": {\n        \"Name\": \"\",\n        \"ScriptLocation\": \"\",\n        \"PythonVersion\": \"\"\n      },\n      \"DefaultArguments\": {},\n      \"NonOverridableArguments\": {},\n      \"Connections\": {\n        \"Connections\": [\n          \"\"\n        ]\n      },\n      \"MaxRetries\": {{faker 'datatype.number'}},\n      \"AllocatedCapacity\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"MaxCapacity\": {{faker 'datatype.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'datatype.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"JobsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69533def-f1eb-4a09-ba48-83a523c60c82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cf715982-81f5-4334-bc29-261361e9fcab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2bb7df93-dac1-40cf-a4f9-f70de2b8f033",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9b776ea9-82d5-413f-b52c-8b0f6b237f7e",
      "documentation": "Retrieves partitions in a batch request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetPartition",
      "responses": [
        {
          "uuid": "4944e389-15ea-464e-968c-b56f4ee415c3",
          "body": "{\n  \"Partitions\": [\n    {\n      \"Values\": [\n        \"\"\n      ],\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'datatype.boolean'}},\n        \"NumberOfBuckets\": {{faker 'datatype.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'datatype.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'datatype.number'}}\n        }\n      },\n      \"Parameters\": {},\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"UnprocessedKeys\": [\n    {\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8185959f-0af3-4c64-848c-a29bd08880ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a3032c55-1cd4-43ca-bd75-009c238c10cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57c72558-5b28-49c0-be65-ca13aded53ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3aada857-4cf1-4670-b7d3-cdd4f3db20f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef462331-6cb1-4862-8bed-353a5e211635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb523665-8601-460f-b154-ac677314ff30",
      "documentation": "Returns a list of resource metadata for a given list of trigger names. After calling the <code>ListTriggers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetTriggers",
      "responses": [
        {
          "uuid": "bd4efae7-5bbf-4034-b03b-fd8d9d66d2ff",
          "body": "{\n  \"Triggers\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowName\": \"\",\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"State\": \"\",\n      \"Description\": \"\",\n      \"Schedule\": \"\",\n      \"Actions\": [\n        {\n          \"JobName\": \"\",\n          \"Arguments\": {},\n          \"Timeout\": {{faker 'datatype.number'}},\n          \"SecurityConfiguration\": \"\",\n          \"NotificationProperty\": {\n            \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n          },\n          \"CrawlerName\": \"\"\n        }\n      ],\n      \"Predicate\": {\n        \"Logical\": \"\",\n        \"Conditions\": [\n          {\n            \"LogicalOperator\": \"\",\n            \"JobName\": \"\",\n            \"State\": \"\",\n            \"CrawlerName\": \"\",\n            \"CrawlState\": \"\"\n          }\n        ]\n      },\n      \"EventBatchingCondition\": {\n        \"BatchSize\": {{faker 'datatype.number'}},\n        \"BatchWindow\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"TriggersNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c2905989-89e8-4791-bbac-6ecf9ae25254",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a89eb92-9815-406c-a370-0d80c6aedc28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc1d1484-fd9d-47f5-8f81-11e5dec7eb84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2d3582d-f647-456b-a2c4-394c4fc0dd56",
      "documentation": "Returns a list of resource metadata for a given list of workflow names. After calling the <code>ListWorkflows</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetWorkflows",
      "responses": [
        {
          "uuid": "d32c7b73-54b6-42b5-86b5-463595006a54",
          "body": "{\n  \"Workflows\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefaultRunProperties\": {},\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastRun\": {\n        \"Name\": \"\",\n        \"WorkflowRunId\": \"\",\n        \"PreviousRunId\": \"\",\n        \"WorkflowRunProperties\": {},\n        \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n        \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"Statistics\": {\n          \"TotalActions\": {{faker 'datatype.number'}},\n          \"TimeoutActions\": {{faker 'datatype.number'}},\n          \"FailedActions\": {{faker 'datatype.number'}},\n          \"StoppedActions\": {{faker 'datatype.number'}},\n          \"SucceededActions\": {{faker 'datatype.number'}},\n          \"RunningActions\": {{faker 'datatype.number'}}\n        },\n        \"Graph\": {\n          \"Nodes\": [\n            {\n              \"Type\": \"\",\n              \"Name\": \"\",\n              \"UniqueId\": \"\",\n              \"TriggerDetails\": {\n                \"Trigger\": {\n                  \"Name\": \"\",\n                  \"WorkflowName\": \"\",\n                  \"Id\": \"\",\n                  \"Type\": \"\",\n                  \"State\": \"\",\n                  \"Description\": \"\",\n                  \"Schedule\": \"\",\n                  \"Actions\": [\n                    {\n                      \"JobName\": \"\",\n                      \"Arguments\": {},\n                      \"Timeout\": {{faker 'datatype.number'}},\n                      \"SecurityConfiguration\": \"\",\n                      \"NotificationProperty\": {\n                        \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                      },\n                      \"CrawlerName\": \"\"\n                    }\n                  ],\n                  \"Predicate\": {\n                    \"Logical\": \"\",\n                    \"Conditions\": [\n                      {\n                        \"LogicalOperator\": \"\",\n                        \"JobName\": \"\",\n                        \"State\": \"\",\n                        \"CrawlerName\": \"\",\n                        \"CrawlState\": \"\"\n                      }\n                    ]\n                  },\n                  \"EventBatchingCondition\": {\n                    \"BatchSize\": {{faker 'datatype.number'}},\n                    \"BatchWindow\": {{faker 'datatype.number'}}\n                  }\n                }\n              },\n              \"JobDetails\": {\n                \"JobRuns\": [\n                  {\n                    \"Id\": \"\",\n                    \"Attempt\": {{faker 'datatype.number'}},\n                    \"PreviousRunId\": \"\",\n                    \"TriggerName\": \"\",\n                    \"JobName\": \"\",\n                    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"JobRunState\": \"\",\n                    \"Arguments\": {},\n                    \"ErrorMessage\": \"\",\n                    \"PredecessorRuns\": [\n                      {\n                        \"JobName\": \"\",\n                        \"RunId\": \"\"\n                      }\n                    ],\n                    \"AllocatedCapacity\": {{faker 'datatype.number'}},\n                    \"ExecutionTime\": {{faker 'datatype.number'}},\n                    \"Timeout\": {{faker 'datatype.number'}},\n                    \"MaxCapacity\": {{faker 'datatype.float'}},\n                    \"WorkerType\": \"\",\n                    \"NumberOfWorkers\": {{faker 'datatype.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"LogGroupName\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                    },\n                    \"GlueVersion\": \"\"\n                  }\n                ]\n              },\n              \"CrawlerDetails\": {\n                \"Crawls\": [\n                  {\n                    \"State\": \"\",\n                    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"ErrorMessage\": \"\",\n                    \"LogGroup\": \"\",\n                    \"LogStream\": \"\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"Edges\": [\n            {\n              \"SourceId\": \"\",\n              \"DestinationId\": \"\"\n            }\n          ]\n        },\n        \"StartingEventBatchCondition\": {\n          \"BatchSize\": {{faker 'datatype.number'}},\n          \"BatchWindow\": {{faker 'datatype.number'}}\n        }\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'datatype.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'datatype.number'}},\n                  \"BatchWindow\": {{faker 'datatype.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'datatype.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'datatype.number'}},\n                  \"ExecutionTime\": {{faker 'datatype.number'}},\n                  \"Timeout\": {{faker 'datatype.number'}},\n                  \"MaxCapacity\": {{faker 'datatype.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'datatype.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"MaxConcurrentRuns\": {{faker 'datatype.number'}},\n      \"BlueprintDetails\": {\n        \"BlueprintName\": \"\",\n        \"RunId\": \"\"\n      }\n    }\n  ],\n  \"MissingWorkflows\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3da8cc95-3aab-45d8-9510-9485996f6ceb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d1fdbe17-e284-43de-b764-21fe5dc8d626",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ad1b5c8d-b978-4210-9b19-c24dc7bf3b3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "247bd0b3-8355-45dd-b60b-8b8ff1d6761f",
      "documentation": "Stops one or more job runs for a specified job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchStopJobRun",
      "responses": [
        {
          "uuid": "b42db113-3d52-4a24-8126-f1138a4c6325",
          "body": "{\n  \"SuccessfulSubmissions\": [\n    {\n      \"JobName\": \"\",\n      \"JobRunId\": \"\"\n    }\n  ],\n  \"Errors\": [\n    {\n      \"JobName\": \"\",\n      \"JobRunId\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba5e42b9-f025-436b-a187-5b0aa69fc682",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df5cf283-474b-4277-b0f7-802b52873e4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c8869f53-2d22-4bbc-8d99-6e894e239853",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "14a5835b-5d8d-48d9-b2f4-d8c6e9b6e416",
      "documentation": "Updates one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchUpdatePartition",
      "responses": [
        {
          "uuid": "40242743-82df-4688-8b02-1884ea9efa2e",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValueList\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c73c6f7a-5349-4954-8bf7-c9052dcf3205",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "092904e9-3ca2-49fc-89dc-e59a63653e7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e333ccaa-387c-4850-94d0-36808759049d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12e3a959-52ec-4033-8128-3bdb10e71d24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c308db6-afb2-49d3-abe2-5504c98ebd31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e806e739-d75e-45a9-bde5-630ca96a6ebf",
      "documentation": "Cancels (stops) a task run. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can cancel a machine learning task run at any time by calling <code>CancelMLTaskRun</code> with a task run's parent transform's <code>TransformID</code> and the task run's <code>TaskRunId</code>. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CancelMLTaskRun",
      "responses": [
        {
          "uuid": "1accf0bd-331d-4cb0-80f6-b89617b1784c",
          "body": "{\n  \"TransformId\": \"\",\n  \"TaskRunId\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "618b9b88-e891-43a1-bfaa-139b8461eb89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3f087866-6371-40b5-8d10-ef33aaa67eef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dbe21e93-9f82-4ec0-953c-2223697c2465",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "950fe325-984c-4bca-8c9c-346a7e727910",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b7c3daa8-f83a-4936-960a-821eeb55d4dd",
      "documentation": "Validates the supplied schema. This call has no side effects, it simply validates using the supplied schema using <code>DataFormat</code> as the format. Since it does not take a schema set name, no compatibility checks are performed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CheckSchemaVersionValidity",
      "responses": [
        {
          "uuid": "aa7a6885-eaa0-4bfa-89ee-97f4f7dd77b0",
          "body": "{\n  \"Valid\": {{faker 'datatype.boolean'}},\n  \"Error\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f58c4e34-13bd-4563-8fd9-dbfa05c54b75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8af1837f-0d29-4f98-b94f-6f8d71e20460",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7573479-317c-4912-9074-7ce5fdca14c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "70f81757-1318-46ca-b6f3-e84874b947fe",
      "documentation": "Registers a blueprint with Glue.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateBlueprint",
      "responses": [
        {
          "uuid": "a7ac0e69-bc0f-419c-bd13-329b98c0083c",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f76ffe3a-6ed8-4d90-b664-c2d1c44688dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20802a61-82ba-4a53-a1da-c1361ee38e45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "945412f8-1391-4970-9ad5-9cd751f8d044",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b44fca4-73f6-44bc-8250-86765350ba3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c509b12a-e031-47af-b0db-e9a15ad92ddf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0ba7d0d7-2862-43bb-8da7-686d5267bd62",
      "documentation": "Creates a classifier in the user's account. This can be a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field of the request is present.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateClassifier",
      "responses": [
        {
          "uuid": "55d2cb0d-e6b9-40be-a9cc-53026314325a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "485aed38-bc15-402b-95eb-1b7f391c2847",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5c87fb3-b18f-4019-be4c-293e7da3b418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd381fa1-7bc2-4ee3-a344-ec3883860c44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a249dafd-55b7-419b-a2e4-9cfff22999af",
      "documentation": "Creates a connection definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateConnection",
      "responses": [
        {
          "uuid": "b5cc41cc-3caf-4acf-8318-56b7d2d1ff3f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7ae7467b-f9f9-4055-8aee-6bde61f195f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "690ca3ac-fe57-4b25-9f23-70da28b30921",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2ce6763-0966-423c-85e1-91f59b596477",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51a9ef16-a5ae-416e-a268-b845237fe281",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc0031ad-9651-4f6b-964e-702b96f37486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ba029fa8-2e29-4e55-adec-ca71a150bbd8",
      "documentation": "Creates a new crawler with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in the <code>s3Targets</code> field, the <code>jdbcTargets</code> field, or the <code>DynamoDBTargets</code> field.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateCrawler",
      "responses": [
        {
          "uuid": "abba9983-34f8-4df4-a986-a94a93ab1889",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fc06c5f3-20fd-4b89-a9a8-15080893c89d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d91e88d4-1387-4d78-af40-359eaaf59bb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b35f904c-9a15-4914-8ff2-e548866c91f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c17a9a5d-b08a-4ff8-b944-55cb6e52f6dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a13cb024-4021-400f-a77f-647adc62fe85",
      "documentation": "Creates a new database in a Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateDatabase",
      "responses": [
        {
          "uuid": "d7c2a7f7-6886-4aae-8d75-404768ea918b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5fd80638-24d6-4c03-bfdd-7a8e6e637cef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6314ae99-83f2-4b92-a475-d91d92db7dd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bb66955d-9d61-4976-bf3e-83349cada686",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d05d331-43bb-41f6-b3f0-48219304f437",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a4135d0b-4fd2-496c-ba49-03508c6bfcf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "632cdc78-cc43-44f6-a851-0361ec0642ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "273f0d0c-aac3-47b5-a797-eb3997765bf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "81153608-d0aa-48b5-a1d9-84ed128e41d8",
      "documentation": "Creates a new development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateDevEndpoint",
      "responses": [
        {
          "uuid": "b13f861a-da7d-42a3-82fe-117371033c4e",
          "body": "{\n  \"EndpointName\": \"\",\n  \"Status\": \"\",\n  \"SecurityGroupIds\": [\n    \"\"\n  ],\n  \"SubnetId\": \"\",\n  \"RoleArn\": \"\",\n  \"YarnEndpointAddress\": \"\",\n  \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'datatype.number'}},\n  \"NumberOfNodes\": {{faker 'datatype.number'}},\n  \"WorkerType\": \"\",\n  \"GlueVersion\": \"\",\n  \"NumberOfWorkers\": {{faker 'datatype.number'}},\n  \"AvailabilityZone\": \"\",\n  \"VpcId\": \"\",\n  \"ExtraPythonLibsS3Path\": \"\",\n  \"ExtraJarsS3Path\": \"\",\n  \"FailureReason\": \"\",\n  \"SecurityConfiguration\": \"\",\n  \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"Arguments\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cc816e9b-2130-4896-a1b0-a83dbaf464f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20f73463-7514-43f2-9503-dbbc29e20252",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9e15b9d2-93c6-41ad-9b8c-42c16b213764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f62625c0-444c-4df1-8d96-08f3c2d79a7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c16b6ce9-4193-4283-ae74-09b22e1d525e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f3ab726-b609-4bd6-b412-d1d41f2effee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93f8b199-b697-4d75-8dcd-43c2c7ec12c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a866a71-86a9-48a0-a6c3-279937efdf4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d15eb921-68a7-433d-b772-02aab57820ce",
      "documentation": "Creates a new job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateJob",
      "responses": [
        {
          "uuid": "05c73988-b1df-40c5-83a4-d9eb046225a8",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cd7a4c18-e975-4220-a92d-940f8fdaee4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "010932d8-9024-424b-aa16-fdd2eb9a4b97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a27e4407-c26c-418f-a24c-7d7fd28087a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48558017-224a-447d-9207-43add4473a23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "304806d7-b398-4655-94a6-5d65879e8340",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32694da4-83d0-4b82-bc4e-7b42a7853c29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36c8cde3-9df2-40d5-bf95-55e9c0dd7ec8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ff168238-f8c6-4bc5-ba9f-4e1be3281f68",
      "documentation": "<p>Creates an Glue machine learning transform. This operation creates the transform and all the necessary parameters to train it.</p> <p>Call this operation as the first step in the process of using a machine learning transform (such as the <code>FindMatches</code> transform) for deduplicating data. You can provide an optional <code>Description</code>, in addition to the parameters that you want to use for your algorithm.</p> <p>You must also specify certain parameters for the tasks that Glue runs on your behalf as part of learning from your data and creating a high-quality machine learning transform. These parameters include <code>Role</code>, and optionally, <code>AllocatedCapacity</code>, <code>Timeout</code>, and <code>MaxRetries</code>. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html\">Jobs</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateMLTransform",
      "responses": [
        {
          "uuid": "695480c0-b308-4eeb-a27b-3c920eff88a5",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8e247432-9dfe-46e4-9a32-c13d036ebec5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0007dac9-0676-466c-85b9-c863755a3b77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48d02461-2033-424b-8252-4c381fe0a342",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97661958-c3f9-4008-9bd0-ebb1a54abe05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16d9fac3-3acb-4477-81c2-e7a425312e1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd7a253b-b76c-48af-9ed2-18607f100e18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57e3bb66-13e5-46e8-a064-d14e10736e8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "394a9b77-375c-41f0-8074-045d63c3faf2",
      "documentation": "Creates a new partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreatePartition",
      "responses": [
        {
          "uuid": "374c683b-9793-4388-8a45-e7e4408ea11d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2517128d-be66-4431-87f1-4b52bfeac888",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc35bb0f-437b-4a9d-9637-442d1a20e41e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d2baa54-aead-42a5-b2b6-b1e2294096fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f2ddb59c-2c02-4dd1-a69a-f8e6a0804ff3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fbad8c94-338d-49c4-91c7-24ad0a7ae08f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4765701c-17e8-4178-8f19-239d24ce53cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "181b5b67-d279-4100-b9e4-29e24cd3eea2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a9881b61-0486-4be3-bac5-ded9da720384",
      "documentation": "Creates a specified partition index in an existing table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreatePartitionIndex",
      "responses": [
        {
          "uuid": "41446a0f-db70-474a-bdd9-9da278beaceb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "604968e7-1bcf-436d-9abd-a3973e4ada0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "156407b8-a222-43b3-8fab-85ab43f39211",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0879a873-033e-4040-bc2c-f163716fd629",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e441c412-3075-4bc5-a2eb-68949bf4bb4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a7742b8-fd4e-4f89-a151-8b563bc2dd6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e7e2e78f-270c-4dc2-9e12-a6bd7da36303",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c58cdd1b-e3bb-4a89-a49b-b9151c63de88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e80feefc-531b-47cd-a8d5-8b2054222f98",
      "documentation": "Creates a new registry which may be used to hold a collection of schemas.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateRegistry",
      "responses": [
        {
          "uuid": "05045dee-07ee-46e2-8f25-12003d2724f6",
          "body": "{\n  \"RegistryArn\": \"\",\n  \"RegistryName\": \"\",\n  \"Description\": \"\",\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0f0c0aec-e0d3-400e-aae3-9f240be950fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e364f09a-7335-406c-acd4-52e436c614da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dac06334-1dcc-41a1-a324-227e1ecac908",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8bdeefd2-d4b1-483d-a092-79901fa41196",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f71b4cd2-376f-4e14-b873-1cc06b822923",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1655d253-ae5d-42d8-ba11-a28935c443cf",
      "documentation": "<p>Creates a new schema set and registers the schema definition. Returns an error if the schema set already exists without actually registering the version.</p> <p>When the schema set is created, a version checkpoint will be set to the first version. Compatibility mode \"DISABLED\" restricts any additional schema versions from being added after the first schema version. For all other compatibility modes, validation of compatibility settings will be applied only from the second version onwards when the <code>RegisterSchemaVersion</code> API is used.</p> <p>When this API is called without a <code>RegistryId</code>, this will create an entry for a \"default-registry\" in the registry database tables, if it is not already present.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateSchema",
      "responses": [
        {
          "uuid": "5cea9504-2a3f-4eb6-adca-c8f5aa17de37",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"SchemaName\": \"\",\n  \"SchemaArn\": \"\",\n  \"Description\": \"\",\n  \"DataFormat\": \"\",\n  \"Compatibility\": \"\",\n  \"SchemaCheckpoint\": {{faker 'datatype.number'}},\n  \"LatestSchemaVersion\": {{faker 'datatype.number'}},\n  \"NextSchemaVersion\": {{faker 'datatype.number'}},\n  \"SchemaStatus\": \"\",\n  \"Tags\": {},\n  \"SchemaVersionId\": \"\",\n  \"SchemaVersionStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6254ce05-779c-442e-aee6-5c68d8172e99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ec45c88-0b7d-411c-8d9e-c9f34d5f8848",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f90de721-5a38-41b1-85a6-d8a1f2901479",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "43cbc319-6174-4b30-b99f-e88654307236",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0768ad78-ff9d-4d3e-949e-a101a6517163",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bbf794f6-c538-4779-baeb-5b25c43c34e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "55da70da-05b9-473d-8948-901fb86410e2",
      "documentation": "Transforms a directed acyclic graph (DAG) into code.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateScript",
      "responses": [
        {
          "uuid": "44ab832c-e7e3-4694-8f1c-507dcf7275c2",
          "body": "{\n  \"PythonScript\": \"\",\n  \"ScalaCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "88a44bf5-66fa-4f08-9db8-d816ab7b9a61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a8c145c4-c1e2-4e02-913b-2abadbc8edf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fb967b16-8ff2-447f-bd54-ae8d54dad02a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1c4f850b-d9bd-4eb2-8298-e3c00e669f48",
      "documentation": "Creates a new security configuration. A security configuration is a set of security properties that can be used by Glue. You can use a security configuration to encrypt data at rest. For information about using security configurations in Glue, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/encryption-security-configuration.html\">Encrypting Data Written by Crawlers, Jobs, and Development Endpoints</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateSecurityConfiguration",
      "responses": [
        {
          "uuid": "2304d9a3-f9b3-46d3-a7ce-1626cd855a1a",
          "body": "{\n  \"Name\": \"\",\n  \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8345ff8d-ab13-45f4-b471-289ee5243d9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0ae8212c-9dd7-42a6-8313-312a37a5e682",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f203c39e-a456-488f-b0c5-47f70693099f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cb136ba5-9d06-41c9-aab3-dacc1173b8c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f06f45b2-4271-430c-a92f-608c6a6a6247",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "053fb8e3-eeeb-4b0a-b519-f3a748f6f101",
      "documentation": "Creates a new table definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateTable",
      "responses": [
        {
          "uuid": "73bed56a-5711-4dc0-9086-8b4ea934eb74",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "15812f7b-7915-4323-ad23-8b206922580d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5086e3f5-ca6b-4adf-aa3c-c19b1c89857f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0488210b-f52e-4944-bda0-41f84e13f724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e814eca1-48be-47d9-b7f0-de4349628bc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6178eb9-b94e-4898-90cb-1853972b0cab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b404be46-09a0-4af6-9bad-55bcbfa4fdbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1f4b1c53-d7f0-4076-b3d0-06a7bb1ebcb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21742a93-0385-4b59-ae81-c11eb7567e34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d72c3f98-6ebf-4c98-a94e-35f97588e6fc",
      "documentation": "Creates a new trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateTrigger",
      "responses": [
        {
          "uuid": "c9a80e13-691f-4d8a-8318-cee2d8f8fabc",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d930722c-7004-42f5-b878-60cc59ef86e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "566c28ed-06bf-422c-8a3e-b517f35e66af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "585e31da-a228-4fcd-bfdc-a428cba33cfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4cd3f681-a0db-4464-a5a5-127fed197cb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "296de032-ebaa-497b-b4fe-8030b07acc97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc2987c4-af38-422e-90c6-82527fd20415",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49500287-39ac-43f6-a0f0-3a8aaab85249",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef3f5c86-7036-4134-bd4a-7cd0dc8fd28d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d236b820-47b7-4900-8d96-b1300e2fab10",
      "documentation": "Creates a new function definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateUserDefinedFunction",
      "responses": [
        {
          "uuid": "16b83e4f-5e40-4f30-add2-ec711bb9ae15",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ece72d62-f8d2-4007-b596-f3369d6d14c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94ce4366-48d8-473e-8801-77bbceb0a2d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6f14e93-8147-4694-b0f3-106e658f138f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d58e3782-f058-4808-be52-792c48c30e34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "251f7ac1-7b06-4587-947b-a0394b33a6d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5c8099e-d1ca-4f56-8f1a-c8def73acfff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eda9f4e9-ddd6-431c-9694-482fe58ef7b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d8d4c34-dda0-4939-a698-9a4cd50ab835",
      "documentation": "Creates a new workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateWorkflow",
      "responses": [
        {
          "uuid": "0284bd9b-253d-44a9-95d9-de68e3ba4386",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "62e91b57-4560-43e4-81b6-e0a813bc4fad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6c1c544b-c9a3-41b4-9e01-729ffc83bd0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de1ddd67-06bb-4b2e-ab86-67b9f259e9d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aae0eff5-a75d-49b2-968e-1a141f42890a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6630a5ef-274e-43f4-8603-b7c1da34fdcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6e0ecc5b-9827-46c5-9bdd-8724487754e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5165a807-e40f-48c0-bc22-d20d3661d44a",
      "documentation": "Deletes an existing blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteBlueprint",
      "responses": [
        {
          "uuid": "78fd6a59-6844-487f-bb63-e28da6ea449c",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "edef9a5e-999b-4c4c-ba43-10d912ec1a87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36cc5d65-6bcf-43cd-ad1a-132a9f67b220",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0472e341-74fa-4801-973a-a282e5e363cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "13bddd59-ea7c-49bb-b540-a63ff9bb4801",
      "documentation": "Removes a classifier from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteClassifier",
      "responses": [
        {
          "uuid": "d34a4e77-e374-47e6-90ed-0bf252663aea",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a277dc08-d7ca-46b1-ac70-67a0ca9cc8ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3783ce6c-16f6-43d8-b7e6-725d1181c526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b5109dc8-d5ba-4599-827a-d33667a4fafb",
      "documentation": "<p>Delete the partition column statistics of a column.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>DeletePartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "eb447de6-d143-4ac4-8eec-5c3794d21926",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9ffd3dd9-0d8c-4a10-8cc8-f81f4c41803d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80d9a3b0-68fc-4039-b9f6-d4bd542be1be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e0e54a73-cc8d-4854-aa57-239d6225fb34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf1ca303-0258-4690-9020-f72bf6c09cf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1dccaa7a-11ef-445d-b3a6-f88187319d00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dbb8b90a-649e-45bf-96fb-9257ff092993",
      "documentation": "<p>Retrieves table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>DeleteTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "35893327-efc4-4687-be6d-9206be781e97",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "333a8411-94b9-45ee-a499-692e0d011793",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "224257f3-a8e7-4f5a-a9a7-753365a03bbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c552fb4-f183-4ad1-9c30-f93640769c16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90d4302b-7932-4946-9087-c1e422a8152b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1bba69ba-e999-4204-abbe-18d3eedc91dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11370c51-a1e7-4738-8753-fc710c8efe54",
      "documentation": "Deletes a connection from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteConnection",
      "responses": [
        {
          "uuid": "c7e777e3-5012-401c-b21d-4a6cd2bf2137",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bde72064-e4e0-4c47-a38c-1fbc95b6764c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d9b2915-212e-4405-80f7-510ffb883115",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05b77719-e5b7-40a0-8fcd-7d8b93dc5a08",
      "documentation": "Removes a specified crawler from the Glue Data Catalog, unless the crawler state is <code>RUNNING</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteCrawler",
      "responses": [
        {
          "uuid": "1b224a9a-9f09-4e85-9a6b-112707d50c3d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0056cf1b-1c5d-40d3-9fab-136116ec2177",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f029fead-f91e-4b1f-aa85-ef5590134fb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a5dee9ec-607b-49ec-857a-e619bad0cec6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "283dd7cf-6b42-4503-af61-bec026054a6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1cba3525-a3bf-468b-97ad-1e2ce334f4fb",
      "documentation": "<p>Removes a specified database from a Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the tables (and all table versions and partitions that might belong to the tables) and the user-defined functions in the deleted database. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteDatabase</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code> or <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>, and <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete any resources that belong to the database.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteDatabase",
      "responses": [
        {
          "uuid": "13d3174b-d1a5-4b55-b75d-f615154a0b8b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11a34a1f-11f9-4c71-96c6-76cd2193f91b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0ce8eba-1ba6-4075-8cc5-15ffed890a95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "112b7536-b4ad-4e00-9eb0-8ecfbc6ed2a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fc29fb9e-93a7-40e6-b2ec-9b4a1cd4f7b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8ffb09f1-a8b9-478c-b1d2-2b067347027f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bcdd9f4b-ea50-4071-a48d-85ec7f874e96",
      "documentation": "Deletes a specified development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteDevEndpoint",
      "responses": [
        {
          "uuid": "a58d8dfc-a4f8-47fd-8b16-8a15bd031c06",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "215e9275-725c-4c82-a5a2-b35fea6692de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2caa1c3-2fa5-49db-b478-d9ae17a411de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2860e7bc-422c-446c-9143-4238319d7c5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "afd41c08-c250-4dcf-905b-453e7d904fbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c92744d-d4ce-4903-9298-89ab5c828bb0",
      "documentation": "Deletes a specified job definition. If the job definition is not found, no exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteJob",
      "responses": [
        {
          "uuid": "9c82d015-2d4c-429a-808d-4c25fcc95270",
          "body": "{\n  \"JobName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a7400fa6-29b6-4744-b875-107b00491fee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0e68aed5-d425-4120-8bb0-0b8e6b8f838c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4aeea64c-3365-4bcc-bab8-f1c79c0e3aa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ffcf6a0c-4692-4881-acf5-6f26dd17235a",
      "documentation": "Deletes an Glue machine learning transform. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. If you no longer need a transform, you can delete it by calling <code>DeleteMLTransforms</code>. However, any Glue jobs that still reference the deleted transform will no longer succeed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteMLTransform",
      "responses": [
        {
          "uuid": "2b5947b0-5c55-4082-96be-18efe60ae51d",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7c5bddb9-8b58-457f-bcc3-d47e1c133fa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d861343-da30-40f4-a8f4-5cda9ca39dd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6f8f969-2ab8-4ead-9ed4-23138c537406",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b097de35-9ffe-4927-9374-4f6573898d98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "80534a9d-29bd-4400-ad8a-35641dde6af6",
      "documentation": "Deletes a specified partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeletePartition",
      "responses": [
        {
          "uuid": "3884fb3a-4137-411c-b216-09a22485ad9a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b96738fc-a53c-430a-9e00-0856979910d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "712c7892-57b0-4930-b9e0-397a1965f847",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cadddd74-812d-478b-be8b-0b413bdd1515",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86edd27f-8e0a-4e89-9021-d9fdbf75c0ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8c218944-1a7c-4ae3-bac3-3ca6c9c4ec68",
      "documentation": "Deletes a specified partition index from an existing table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeletePartitionIndex",
      "responses": [
        {
          "uuid": "4c91868d-2083-432f-8613-7e2300c0cf60",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "84417ff2-9302-4560-912d-ff3bd6db49a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "837cdf45-25ef-41b9-b700-fab579bb7d46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0b7ef4e0-9dd7-4db0-a617-fdef602f6089",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3a93ea6b-a1b1-40f2-ada4-ffc345f6c724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84ca75f1-edd1-4809-a0f2-0f51780f2693",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52a99a12-c958-492b-942e-5125aeda3cce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83301171-fc52-40e2-958c-fb0f23905086",
      "documentation": "Delete the entire registry including schema and all of its versions. To get the status of the delete operation, you can call the <code>GetRegistry</code> API after the asynchronous call. Deleting a registry will deactivate all online operations for the registry such as the <code>UpdateRegistry</code>, <code>CreateSchema</code>, <code>UpdateSchema</code>, and <code>RegisterSchemaVersion</code> APIs. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteRegistry",
      "responses": [
        {
          "uuid": "e0861b23-4bab-49b7-94be-d21a5f4cf551",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a9a65f0a-f85c-4b55-b393-0a4805ebd407",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48e8ce39-c1c0-4627-87a3-ed006575b962",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "567545b2-c5db-46f6-a72f-bc2c194be84e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4670d895-0dca-412e-b399-aeacd50e1b6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7bb264ec-ed86-49a9-ab4e-8bae4fb7fb49",
      "documentation": "Deletes a specified policy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteResourcePolicy",
      "responses": [
        {
          "uuid": "990bc4e6-9a22-416a-8d7f-ed0f3de2624d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2b78d719-8056-4195-a20a-6848f7ae6bf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2fc3a7a2-f629-4898-afaa-fbea56614210",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8ec2ded-2259-493a-a6e1-1a396b017fc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ae4bcf7d-0ad0-4c9c-8077-2bd9d7917809",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a730f0da-b387-43b2-bc62-22b144d7018e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConditionCheckFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "86dda91d-c083-4c52-b110-14b8d83ff136",
      "documentation": "Deletes the entire schema set, including the schema set and all of its versions. To get the status of the delete operation, you can call <code>GetSchema</code> API after the asynchronous call. Deleting a registry will deactivate all online operations for the schema, such as the <code>GetSchemaByDefinition</code>, and <code>RegisterSchemaVersion</code> APIs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSchema",
      "responses": [
        {
          "uuid": "421f2324-9d27-4d5f-864a-ebedefe3a323",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fe98f9b4-69ce-4187-b321-358b8ede32db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7e08245d-c298-48aa-ad79-23e47c453b04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7eede349-1fa5-4d34-acb4-88d6f5203de9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2446bde-1ae1-4f87-8937-bd593fa57013",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d3ab2ba1-5c68-4ef2-ab1d-e59482b3de8c",
      "documentation": "<p>Remove versions from the specified schema. A version number or range may be supplied. If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned. Calling the <code>GetSchemaVersions</code> API after this call will list the status of the deleted versions.</p> <p>When the range of version numbers contain check pointed version, the API will return a 409 conflict and will not proceed with the deletion. You have to remove the checkpoint first using the <code>DeleteSchemaCheckpoint</code> API before using this API.</p> <p>You cannot use the <code>DeleteSchemaVersions</code> API to delete the first schema version in the schema set. The first schema version can only be deleted by the <code>DeleteSchema</code> API. This operation will also delete the attached <code>SchemaVersionMetadata</code> under the schema versions. Hard deletes will be enforced on the database.</p> <p>If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSchemaVersions",
      "responses": [
        {
          "uuid": "f1c97f65-b0e3-49f4-b7cc-4e29aca738e5",
          "body": "{\n  \"SchemaVersionErrors\": [\n    {\n      \"VersionNumber\": {{faker 'datatype.number'}},\n      \"ErrorDetails\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "09cc3824-0240-4356-b621-a3371e5394e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f78aaec-e541-4e0f-bf38-c4afa23ff6b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6ab516be-6168-46da-9b9f-e43c630a9073",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9518e0b0-6706-4103-aab1-689469db2053",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "97a94299-8583-4521-ab89-a1e11fcfbe98",
      "documentation": "Deletes a specified security configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSecurityConfiguration",
      "responses": [
        {
          "uuid": "8916d955-06d9-4c7f-ae7e-8fe1bf1d4aa3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bf9f9251-2450-447e-8aaf-f904e1bf5b87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "28c9766e-cbc0-48f4-8486-aaa415e95920",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ba48110-da50-4928-a5dd-e6c52853b17d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5991ab14-c9dd-4217-bc18-f5a7e31fafbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9353c103-a6e5-4b30-bfac-397bd0f42524",
      "documentation": "<p>Removes a table definition from the Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTable",
      "responses": [
        {
          "uuid": "60e12b0c-e68b-4f0d-aad9-9b30b69c66f1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8dd1e6b2-8da2-4e14-a5f3-7f03f5e73d11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c9089cd-6d01-4137-a8e1-abc9f467a2e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "be2b8ab3-5a9f-4072-a77d-2aa85dbf871a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cabd800d-ebb4-46e7-af8b-1f7a887351d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93fbceb6-aa25-4700-ad82-5094c12222cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e195fdb6-54c3-4de9-bf7d-daa72f6a5681",
      "documentation": "Deletes a specified version of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTableVersion",
      "responses": [
        {
          "uuid": "48ad0b06-b012-49eb-8daf-300e675082ab",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f9edda2f-9513-488b-b1e8-b2a1e47a26ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1c460024-6c73-4304-9dc7-746fb05b837e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "30fb6041-e4d2-44c3-8499-d5b2b7bc9e56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af338007-423a-4b23-856d-ccf8f706af75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cfcca804-6fce-4f8b-98f2-1689b74a3bc7",
      "documentation": "Deletes a specified trigger. If the trigger is not found, no exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTrigger",
      "responses": [
        {
          "uuid": "a0991dc1-a721-461b-a39c-228ce8ec837e",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f945e802-8fd0-4820-ac8f-a708735dcb7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aafaaa48-cb36-4483-baa9-86257151e097",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c3d8f9a-36cd-47f7-9b04-ea53ddf8820a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7eca813c-6418-4c46-b4a8-8f185a3bd7ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1968b3a0-c753-4534-99f1-e08b9fe9c183",
      "documentation": "Deletes an existing function definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteUserDefinedFunction",
      "responses": [
        {
          "uuid": "7691f3c8-e9f6-4dcc-8f45-08299b3f3591",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d4326593-c754-4c3e-a107-456dcada020d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c2d43b6-cc6a-49cc-81c7-29524008c9fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "14d53151-c1f9-4e65-b15c-b0e49be4de53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "92df520c-28ba-4fd7-a05f-6d12d37b36da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9dad5589-5539-43b2-877f-6ec5ab7d90ca",
      "documentation": "Deletes a workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteWorkflow",
      "responses": [
        {
          "uuid": "2a5122db-4ff7-4da0-ac34-4c12360442af",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a0d18b4c-3bbf-4546-84d9-e3932398f9cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d9d686d-42da-4ea2-926d-e5b4218be692",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8cf270f-649f-4871-956b-ff11779e4662",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "449a9b64-4609-4f62-8fe7-03d9d64ca290",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "05c843c5-cf1e-4544-aeb1-4e77bdf617ca",
      "documentation": "Retrieves the details of a blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprint",
      "responses": [
        {
          "uuid": "a090b212-5cd0-4655-89ae-bf016625d729",
          "body": "{\n  \"Blueprint\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ParameterSpec\": \"\",\n    \"BlueprintLocation\": \"\",\n    \"BlueprintServiceLocation\": \"\",\n    \"Status\": \"\",\n    \"ErrorMessage\": \"\",\n    \"LastActiveDefinition\": {\n      \"Description\": \"\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ParameterSpec\": \"\",\n      \"BlueprintLocation\": \"\",\n      \"BlueprintServiceLocation\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3456b546-52a5-4182-a89a-5d7986ab5b55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d4cd917-535f-4c41-adfe-fe378a3af032",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f95c72b-7294-48ce-8367-4df56d5ef256",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3fc48546-b64f-4c38-83c8-f2c844cf529a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5d08f91-7208-4141-a014-5a063e592e65",
      "documentation": "Retrieves the details of a blueprint run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprintRun",
      "responses": [
        {
          "uuid": "9c5ad259-b9db-4668-b0be-82e53abbf6bd",
          "body": "{\n  \"BlueprintRun\": {\n    \"BlueprintName\": \"\",\n    \"RunId\": \"\",\n    \"WorkflowName\": \"\",\n    \"State\": \"\",\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ErrorMessage\": \"\",\n    \"RollbackErrorMessage\": \"\",\n    \"Parameters\": \"\",\n    \"RoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "55dcb44d-6ba1-4440-91fe-729cd0ce8f8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9affdc5b-41d6-4411-8167-ad5c9074b56e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "46d2f068-7d4f-4f2f-a8b6-77809e871b46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9cdb2c8e-bc2b-4285-a8b0-12820357578c",
      "documentation": "Retrieves the details of blueprint runs for a specified blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprintRuns",
      "responses": [
        {
          "uuid": "3f7b2fe0-2ca2-4855-a7f7-4200ba9461d6",
          "body": "{\n  \"BlueprintRuns\": [\n    {\n      \"BlueprintName\": \"\",\n      \"RunId\": \"\",\n      \"WorkflowName\": \"\",\n      \"State\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ErrorMessage\": \"\",\n      \"RollbackErrorMessage\": \"\",\n      \"Parameters\": \"\",\n      \"RoleArn\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "fabd49e6-9c60-4ce8-ae91-b22d66a9fc1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7353c95b-ddd3-4b4b-bf12-e6b21d18f4c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3945823-dcef-4f70-996a-8b0ba2130a09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "febd5636-fa7c-4b23-baee-00b44f3981a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa7a795e-7701-40a3-8f9a-f22940f4c5fe",
      "documentation": "Retrieves the status of a migration operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCatalogImportStatus",
      "responses": [
        {
          "uuid": "11a3ca29-7e51-47d2-9e3c-b3a4f82a8d49",
          "body": "{\n  \"ImportStatus\": {\n    \"ImportCompleted\": {{faker 'datatype.boolean'}},\n    \"ImportTime\": \"{{faker 'date.recent' 365}}\",\n    \"ImportedBy\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "70b62685-00e7-4a56-8e6d-268910cb405c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "98bd8f51-9b85-416a-afaf-7a90c8b2995a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8994aa33-5ab5-4f09-bb2b-0fb5800597b6",
      "documentation": "Retrieve a classifier by name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetClassifier",
      "responses": [
        {
          "uuid": "95c8c8e2-f1dd-4e5c-87d0-25eeb001741f",
          "body": "{\n  \"Classifier\": {\n    \"GrokClassifier\": {\n      \"Name\": \"\",\n      \"Classification\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"GrokPattern\": \"\",\n      \"CustomPatterns\": \"\"\n    },\n    \"XMLClassifier\": {\n      \"Name\": \"\",\n      \"Classification\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"RowTag\": \"\"\n    },\n    \"JsonClassifier\": {\n      \"Name\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"JsonPath\": \"\"\n    },\n    \"CsvClassifier\": {\n      \"Name\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'datatype.number'}},\n      \"Delimiter\": \"\",\n      \"QuoteSymbol\": \"\",\n      \"ContainsHeader\": \"\",\n      \"Header\": [\n        \"\"\n      ],\n      \"DisableValueTrimming\": {{faker 'datatype.boolean'}},\n      \"AllowSingleColumn\": {{faker 'datatype.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12717e81-e62d-429c-b26c-6c96e127a111",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a4b8e0b-d112-4e0a-9b74-362781e84ef8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "459e859d-efc2-4b1a-a9a1-b81a694abafa",
      "documentation": "Lists all classifier objects in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetClassifiers",
      "responses": [
        {
          "uuid": "1b6d62e7-eeff-401d-8b10-081d7d0cecde",
          "body": "{\n  \"Classifiers\": [\n    {\n      \"GrokClassifier\": {\n        \"Name\": \"\",\n        \"Classification\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'datatype.number'}},\n        \"GrokPattern\": \"\",\n        \"CustomPatterns\": \"\"\n      },\n      \"XMLClassifier\": {\n        \"Name\": \"\",\n        \"Classification\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'datatype.number'}},\n        \"RowTag\": \"\"\n      },\n      \"JsonClassifier\": {\n        \"Name\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'datatype.number'}},\n        \"JsonPath\": \"\"\n      },\n      \"CsvClassifier\": {\n        \"Name\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'datatype.number'}},\n        \"Delimiter\": \"\",\n        \"QuoteSymbol\": \"\",\n        \"ContainsHeader\": \"\",\n        \"Header\": [\n          \"\"\n        ],\n        \"DisableValueTrimming\": {{faker 'datatype.boolean'}},\n        \"AllowSingleColumn\": {{faker 'datatype.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3cec2689-3512-4fcb-81ad-af6ea06b0dbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bbe190fe-119a-4d27-9e45-9773cfa71ae6",
      "documentation": "<p>Retrieves partition statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>GetPartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "4b664c4c-23a5-4efa-9f7f-99a23f2b7a7b",
          "body": "{\n  \"ColumnStatisticsList\": [\n    {\n      \"ColumnName\": \"\",\n      \"ColumnType\": \"\",\n      \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatisticsData\": {\n        \"Type\": \"\",\n        \"BooleanColumnStatisticsData\": {\n          \"NumberOfTrues\": {{faker 'datatype.number'}},\n          \"NumberOfFalses\": {{faker 'datatype.number'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}}\n        },\n        \"DateColumnStatisticsData\": {\n          \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n          \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"DecimalColumnStatisticsData\": {\n          \"MinimumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'datatype.number'}}\n          },\n          \"MaximumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'datatype.number'}}\n          },\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"DoubleColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'datatype.float'}},\n          \"MaximumValue\": {{faker 'datatype.float'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"LongColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'datatype.number'}},\n          \"MaximumValue\": {{faker 'datatype.number'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"StringColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'datatype.number'}},\n          \"AverageLength\": {{faker 'datatype.float'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"BinaryColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'datatype.number'}},\n          \"AverageLength\": {{faker 'datatype.float'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}}\n        }\n      }\n    }\n  ],\n  \"Errors\": [\n    {\n      \"ColumnName\": \"\",\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "29b4a10d-81bc-4184-9851-cd4baa72358c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "91542e8f-1198-4664-891d-4bd6c4f5ae00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "649bfde5-7410-48b5-bf3f-c4e631a919b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "924d837e-60cc-4be0-9c88-d94214b31b95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7f857ac9-6399-43ed-a67e-d590fee08289",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01f77160-1373-4bcb-9e03-b2ccddad2d80",
      "documentation": "<p>Retrieves table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>GetTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "e9b9d86e-787d-440b-b545-b0d2890534b7",
          "body": "{\n  \"ColumnStatisticsList\": [\n    {\n      \"ColumnName\": \"\",\n      \"ColumnType\": \"\",\n      \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatisticsData\": {\n        \"Type\": \"\",\n        \"BooleanColumnStatisticsData\": {\n          \"NumberOfTrues\": {{faker 'datatype.number'}},\n          \"NumberOfFalses\": {{faker 'datatype.number'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}}\n        },\n        \"DateColumnStatisticsData\": {\n          \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n          \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"DecimalColumnStatisticsData\": {\n          \"MinimumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'datatype.number'}}\n          },\n          \"MaximumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'datatype.number'}}\n          },\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"DoubleColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'datatype.float'}},\n          \"MaximumValue\": {{faker 'datatype.float'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"LongColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'datatype.number'}},\n          \"MaximumValue\": {{faker 'datatype.number'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"StringColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'datatype.number'}},\n          \"AverageLength\": {{faker 'datatype.float'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}},\n          \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n        },\n        \"BinaryColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'datatype.number'}},\n          \"AverageLength\": {{faker 'datatype.float'}},\n          \"NumberOfNulls\": {{faker 'datatype.number'}}\n        }\n      }\n    }\n  ],\n  \"Errors\": [\n    {\n      \"ColumnName\": \"\",\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e26e382e-ff99-47f3-8b45-58707f0d4ba4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0c73139f-34af-4702-b9d3-b95f0a9009c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "22997b75-8e44-49df-8ecc-20b3cc174a48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f118babb-52c5-47ef-8ee5-daa432157637",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d426d28-1920-410d-ac89-997d8bd7490c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96bce32a-96c2-482f-98f3-0e1215002b51",
      "documentation": "Retrieves a connection definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetConnection",
      "responses": [
        {
          "uuid": "41f3c49a-3fcc-4470-974b-ec4fd982ca07",
          "body": "{\n  \"Connection\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"ConnectionType\": \"\",\n    \"MatchCriteria\": [\n      \"\"\n    ],\n    \"ConnectionProperties\": {},\n    \"PhysicalConnectionRequirements\": {\n      \"SubnetId\": \"\",\n      \"SecurityGroupIdList\": [\n        \"\"\n      ],\n      \"AvailabilityZone\": \"\"\n    },\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedBy\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5116770d-b935-4a80-be0f-fc4beca71d27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ea0db0b8-fca9-4372-a84e-00bb3b670150",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "39535571-b7f4-48ca-a4d0-1dd9884c2d16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e00cbb08-50f5-45e1-bfa4-ea27d7316170",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dbd9d99b-1513-4bd1-926e-2d75056c7944",
      "documentation": "Retrieves a list of connection definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetConnections",
      "responses": [
        {
          "uuid": "01520c61-0a5e-4204-8d14-7c73f57f13e0",
          "body": "{\n  \"ConnectionList\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"ConnectionType\": \"\",\n      \"MatchCriteria\": [\n        \"\"\n      ],\n      \"ConnectionProperties\": {},\n      \"PhysicalConnectionRequirements\": {\n        \"SubnetId\": \"\",\n        \"SecurityGroupIdList\": [\n          \"\"\n        ],\n        \"AvailabilityZone\": \"\"\n      },\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedBy\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12fe9db2-011c-469b-98ef-96fe6acac5ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fa8aa9b6-6213-4949-b202-8f8333419b4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2cee2a0a-b3ce-4f29-8b6f-07782b5fbfeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "843e2e42-8090-4b08-964e-2c4fe41d17df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6f18cb5-d361-4bd3-9de7-4b9900c99b65",
      "documentation": "Retrieves metadata for a specified crawler.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawler",
      "responses": [
        {
          "uuid": "87b63b60-aa91-4a46-a5df-53995f6dec4d",
          "body": "{\n  \"Crawler\": {\n    \"Name\": \"\",\n    \"Role\": \"\",\n    \"Targets\": {\n      \"S3Targets\": [\n        {\n          \"Path\": \"\",\n          \"Exclusions\": [\n            \"\"\n          ],\n          \"ConnectionName\": \"\",\n          \"SampleSize\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"JdbcTargets\": [\n        {\n          \"ConnectionName\": \"\",\n          \"Path\": \"\",\n          \"Exclusions\": [\n            \"\"\n          ]\n        }\n      ],\n      \"MongoDBTargets\": [\n        {\n          \"ConnectionName\": \"\",\n          \"Path\": \"\",\n          \"ScanAll\": {{faker 'datatype.boolean'}}\n        }\n      ],\n      \"DynamoDBTargets\": [\n        {\n          \"Path\": \"\",\n          \"scanAll\": {{faker 'datatype.boolean'}},\n          \"scanRate\": {{faker 'datatype.float'}}\n        }\n      ],\n      \"CatalogTargets\": [\n        {\n          \"DatabaseName\": \"\",\n          \"Tables\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"DatabaseName\": \"\",\n    \"Description\": \"\",\n    \"Classifiers\": [\n      \"\"\n    ],\n    \"RecrawlPolicy\": {\n      \"RecrawlBehavior\": \"\"\n    },\n    \"SchemaChangePolicy\": {\n      \"UpdateBehavior\": \"\",\n      \"DeleteBehavior\": \"\"\n    },\n    \"LineageConfiguration\": {\n      \"CrawlerLineageSettings\": \"\"\n    },\n    \"State\": \"\",\n    \"TablePrefix\": \"\",\n    \"Schedule\": {\n      \"ScheduleExpression\": \"\",\n      \"State\": \"\"\n    },\n    \"CrawlElapsedTime\": {{faker 'datatype.number'}},\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n    \"LastCrawl\": {\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LogGroup\": \"\",\n      \"LogStream\": \"\",\n      \"MessagePrefix\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"Version\": {{faker 'datatype.number'}},\n    \"Configuration\": \"\",\n    \"CrawlerSecurityConfiguration\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "53751a1c-aedd-4853-8d6e-30c0864b8ea8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "590455cd-b1df-4f48-abd1-be11f3d5b9e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a5f857ab-6e9f-4bbc-8f03-76be2d8fb24a",
      "documentation": "Retrieves metrics about specified crawlers.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawlerMetrics",
      "responses": [
        {
          "uuid": "45447e67-3ed4-4d77-a94d-c3fe6130e652",
          "body": "{\n  \"CrawlerMetricsList\": [\n    {\n      \"CrawlerName\": \"\",\n      \"TimeLeftSeconds\": {{faker 'datatype.float'}},\n      \"StillEstimating\": {{faker 'datatype.boolean'}},\n      \"LastRuntimeSeconds\": {{faker 'datatype.float'}},\n      \"MedianRuntimeSeconds\": {{faker 'datatype.float'}},\n      \"TablesCreated\": {{faker 'datatype.number'}},\n      \"TablesUpdated\": {{faker 'datatype.number'}},\n      \"TablesDeleted\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6de7da2d-d15d-4bd6-8f95-e3ff03999963",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e411ff8d-d7d8-45f8-95d7-2fc32e3afa8f",
      "documentation": "Retrieves metadata for all crawlers defined in the customer account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawlers",
      "responses": [
        {
          "uuid": "1ad9b9ac-a32c-491c-aab8-cb1a92dc4eb4",
          "body": "{\n  \"Crawlers\": [\n    {\n      \"Name\": \"\",\n      \"Role\": \"\",\n      \"Targets\": {\n        \"S3Targets\": [\n          {\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ],\n            \"ConnectionName\": \"\",\n            \"SampleSize\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"JdbcTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MongoDBTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"ScanAll\": {{faker 'datatype.boolean'}}\n          }\n        ],\n        \"DynamoDBTargets\": [\n          {\n            \"Path\": \"\",\n            \"scanAll\": {{faker 'datatype.boolean'}},\n            \"scanRate\": {{faker 'datatype.float'}}\n          }\n        ],\n        \"CatalogTargets\": [\n          {\n            \"DatabaseName\": \"\",\n            \"Tables\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Classifiers\": [\n        \"\"\n      ],\n      \"RecrawlPolicy\": {\n        \"RecrawlBehavior\": \"\"\n      },\n      \"SchemaChangePolicy\": {\n        \"UpdateBehavior\": \"\",\n        \"DeleteBehavior\": \"\"\n      },\n      \"LineageConfiguration\": {\n        \"CrawlerLineageSettings\": \"\"\n      },\n      \"State\": \"\",\n      \"TablePrefix\": \"\",\n      \"Schedule\": {\n        \"ScheduleExpression\": \"\",\n        \"State\": \"\"\n      },\n      \"CrawlElapsedTime\": {{faker 'datatype.number'}},\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"LastCrawl\": {\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"LogGroup\": \"\",\n        \"LogStream\": \"\",\n        \"MessagePrefix\": \"\",\n        \"StartTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Version\": {{faker 'datatype.number'}},\n      \"Configuration\": \"\",\n      \"CrawlerSecurityConfiguration\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "95149d9a-d8c6-4ea5-976d-62a34421d9f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "01e50cca-6b23-40f2-abdd-d6d6ff15c649",
      "documentation": "Retrieves the security configuration for a specified catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDataCatalogEncryptionSettings",
      "responses": [
        {
          "uuid": "fb088bce-a377-4e8a-9690-01708e852102",
          "body": "{\n  \"DataCatalogEncryptionSettings\": {\n    \"EncryptionAtRest\": {\n      \"CatalogEncryptionMode\": \"\",\n      \"SseAwsKmsKeyId\": \"\"\n    },\n    \"ConnectionPasswordEncryption\": {\n      \"ReturnConnectionPasswordEncrypted\": {{faker 'datatype.boolean'}},\n      \"AwsKmsKeyId\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9762f20b-3051-4e54-812d-e5f40d86beed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d315db81-392a-48f6-8e17-a5c2108ca9cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "676fc2d5-ac22-42a4-b5f0-baa303c5eff0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5188c66b-841c-441d-9714-3ee2313abe49",
      "documentation": "Retrieves the definition of a specified database.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDatabase",
      "responses": [
        {
          "uuid": "59af7900-058e-4a9d-9c79-ba526239d4c1",
          "body": "{\n  \"Database\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"LocationUri\": \"\",\n    \"Parameters\": {},\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"CreateTableDefaultPermissions\": [\n      {\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS')}}\"\n        ]\n      }\n    ],\n    \"TargetDatabase\": {\n      \"CatalogId\": \"\",\n      \"DatabaseName\": \"\"\n    },\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3a4d72cd-5c8a-4ed0-8d49-6ad305714ad9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b7a1efb-5ef8-4357-8754-50b9baaeb64e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4789f1cb-5b4e-457b-aad5-2c3769e6a613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f33cfd01-0284-4cef-b2de-6eaffedc7b5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c677584-784a-4687-9aea-c91b97408a37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4693a923-10e0-4aa2-a2bb-7252eb1ab79e",
      "documentation": "Retrieves all databases defined in a given Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDatabases",
      "responses": [
        {
          "uuid": "db45811a-40d8-4bec-b883-5b730f989494",
          "body": "{\n  \"DatabaseList\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LocationUri\": \"\",\n      \"Parameters\": {},\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"CreateTableDefaultPermissions\": [\n        {\n          \"Principal\": {\n            \"DataLakePrincipalIdentifier\": \"\"\n          },\n          \"Permissions\": [\n            \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS')}}\"\n          ]\n        }\n      ],\n      \"TargetDatabase\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "82b1d060-9eae-4be7-9f4d-a0d0da642380",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1fba009-0cac-412d-bfec-d418fd318e95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "16b47b78-27fa-4097-87f1-9503ede8933e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "adb850bc-eed4-427e-ad1c-ce7d71e34b49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb9a4bb2-fadf-4be5-a919-8c4d461c577f",
      "documentation": "Transforms a Python script into a directed acyclic graph (DAG). ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDataflowGraph",
      "responses": [
        {
          "uuid": "29f122ed-b884-45ac-bcb9-659e405aed2b",
          "body": "{\n  \"DagNodes\": [\n    {\n      \"Id\": \"\",\n      \"NodeType\": \"\",\n      \"Args\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\",\n          \"Param\": {{faker 'datatype.boolean'}}\n        }\n      ],\n      \"LineNumber\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"DagEdges\": [\n    {\n      \"Source\": \"\",\n      \"Target\": \"\",\n      \"TargetParameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "22ddaf41-b8f3-4523-a7aa-f3fe48940a1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d580c39a-6f4c-469e-9e61-9fbf14fc226f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3d71c03e-5f1c-4c27-a8f6-37c7b67774e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "df1369d0-9735-46aa-a23b-b2a3054760d1",
      "documentation": "<p>Retrieves information about a specified development endpoint.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address, and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDevEndpoint",
      "responses": [
        {
          "uuid": "9477a0bb-27e1-41c0-b1fa-6e4c637b5718",
          "body": "{\n  \"DevEndpoint\": {\n    \"EndpointName\": \"\",\n    \"RoleArn\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"SubnetId\": \"\",\n    \"YarnEndpointAddress\": \"\",\n    \"PrivateAddress\": \"\",\n    \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'datatype.number'}},\n    \"PublicAddress\": \"\",\n    \"Status\": \"\",\n    \"WorkerType\": \"\",\n    \"GlueVersion\": \"\",\n    \"NumberOfWorkers\": {{faker 'datatype.number'}},\n    \"NumberOfNodes\": {{faker 'datatype.number'}},\n    \"AvailabilityZone\": \"\",\n    \"VpcId\": \"\",\n    \"ExtraPythonLibsS3Path\": \"\",\n    \"ExtraJarsS3Path\": \"\",\n    \"FailureReason\": \"\",\n    \"LastUpdateStatus\": \"\",\n    \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n    \"PublicKey\": \"\",\n    \"PublicKeys\": [\n      \"\"\n    ],\n    \"SecurityConfiguration\": \"\",\n    \"Arguments\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ae9c03db-ae70-4cbb-a278-ec66e8cf926d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3157debd-a85d-41fa-9420-f1a4010100ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1ffe6e8-86cd-4e90-ad33-d0d96979fdb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5258a3b4-a776-4c4f-8703-cd8f1323d23a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a68be5b-56d9-42af-afae-3ff25025ffee",
      "documentation": "<p>Retrieves all the development endpoints in this AWS account.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDevEndpoints",
      "responses": [
        {
          "uuid": "6a6bee57-cb83-4922-a0e1-e0fcd7127b53",
          "body": "{\n  \"DevEndpoints\": [\n    {\n      \"EndpointName\": \"\",\n      \"RoleArn\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"SubnetId\": \"\",\n      \"YarnEndpointAddress\": \"\",\n      \"PrivateAddress\": \"\",\n      \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'datatype.number'}},\n      \"PublicAddress\": \"\",\n      \"Status\": \"\",\n      \"WorkerType\": \"\",\n      \"GlueVersion\": \"\",\n      \"NumberOfWorkers\": {{faker 'datatype.number'}},\n      \"NumberOfNodes\": {{faker 'datatype.number'}},\n      \"AvailabilityZone\": \"\",\n      \"VpcId\": \"\",\n      \"ExtraPythonLibsS3Path\": \"\",\n      \"ExtraJarsS3Path\": \"\",\n      \"FailureReason\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"PublicKey\": \"\",\n      \"PublicKeys\": [\n        \"\"\n      ],\n      \"SecurityConfiguration\": \"\",\n      \"Arguments\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5f14de5e-0990-4ec6-a3a1-f19df132ee74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9c966ed3-2c77-4ced-a308-9e92ca655673",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f96ae350-3819-4d6f-92ff-1937dfb6fa0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80d016e2-1a2f-4fc4-a017-af229880941c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9090396c-8d90-4424-9d92-374c6b4901a4",
      "documentation": "Retrieves an existing job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJob",
      "responses": [
        {
          "uuid": "239b675f-478d-44c9-b892-eae0dbf36f62",
          "body": "{\n  \"Job\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"LogUri\": \"\",\n    \"Role\": \"\",\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ExecutionProperty\": {\n      \"MaxConcurrentRuns\": {{faker 'datatype.number'}}\n    },\n    \"Command\": {\n      \"Name\": \"\",\n      \"ScriptLocation\": \"\",\n      \"PythonVersion\": \"\"\n    },\n    \"DefaultArguments\": {},\n    \"NonOverridableArguments\": {},\n    \"Connections\": {\n      \"Connections\": [\n        \"\"\n      ]\n    },\n    \"MaxRetries\": {{faker 'datatype.number'}},\n    \"AllocatedCapacity\": {{faker 'datatype.number'}},\n    \"Timeout\": {{faker 'datatype.number'}},\n    \"MaxCapacity\": {{faker 'datatype.float'}},\n    \"WorkerType\": \"\",\n    \"NumberOfWorkers\": {{faker 'datatype.number'}},\n    \"SecurityConfiguration\": \"\",\n    \"NotificationProperty\": {\n      \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n    },\n    \"GlueVersion\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "443960d1-78b7-42c1-b61d-f9623ccd2492",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc98efbe-780f-4611-8599-9d78ca8c5686",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4c748675-6a0a-4c95-ad90-6e9777c75f65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2e14833-c020-46c7-b993-7f2c470fcb8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1fc6ce02-664e-4aa8-b9ca-35571a9a7729",
      "documentation": "Returns information on a job bookmark entry.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobBookmark",
      "responses": [
        {
          "uuid": "da5abc27-cf29-4039-9a27-69b27525626e",
          "body": "{\n  \"JobBookmarkEntry\": {\n    \"JobName\": \"\",\n    \"Version\": {{faker 'datatype.number'}},\n    \"Run\": {{faker 'datatype.number'}},\n    \"Attempt\": {{faker 'datatype.number'}},\n    \"PreviousRunId\": \"\",\n    \"RunId\": \"\",\n    \"JobBookmark\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0e0a70fe-1a25-4bfc-be6e-d39c059a1040",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e505293f-5eb3-475e-a854-f87c3b2af9f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e683d563-a20a-4c9f-a79c-45f66cd4f94b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dab10fcd-e660-4e3b-b96a-883022a816f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59215cc3-1b81-40d1-95bc-32180c06b4ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e00586ab-afda-4ecb-afa9-ca2dc3515036",
      "documentation": "Retrieves the metadata for a given job run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobRun",
      "responses": [
        {
          "uuid": "a183b0c0-2798-423b-a396-9827c7d92eef",
          "body": "{\n  \"JobRun\": {\n    \"Id\": \"\",\n    \"Attempt\": {{faker 'datatype.number'}},\n    \"PreviousRunId\": \"\",\n    \"TriggerName\": \"\",\n    \"JobName\": \"\",\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"JobRunState\": \"\",\n    \"Arguments\": {},\n    \"ErrorMessage\": \"\",\n    \"PredecessorRuns\": [\n      {\n        \"JobName\": \"\",\n        \"RunId\": \"\"\n      }\n    ],\n    \"AllocatedCapacity\": {{faker 'datatype.number'}},\n    \"ExecutionTime\": {{faker 'datatype.number'}},\n    \"Timeout\": {{faker 'datatype.number'}},\n    \"MaxCapacity\": {{faker 'datatype.float'}},\n    \"WorkerType\": \"\",\n    \"NumberOfWorkers\": {{faker 'datatype.number'}},\n    \"SecurityConfiguration\": \"\",\n    \"LogGroupName\": \"\",\n    \"NotificationProperty\": {\n      \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n    },\n    \"GlueVersion\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f54f8a66-cccd-4089-8354-9ea25bbdb1fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e82ab71d-0479-49ed-8179-562f524e3a11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b38dbbe-1247-4556-9666-19e7f98f5e4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c4b42e62-8709-4f26-9890-ceac901b26db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3d9ec914-3e8f-48f0-9378-1cf2470ec47c",
      "documentation": "Retrieves metadata for all runs of a given job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobRuns",
      "responses": [
        {
          "uuid": "60de380e-e963-41ba-a66e-330d2e6c9ed8",
          "body": "{\n  \"JobRuns\": [\n    {\n      \"Id\": \"\",\n      \"Attempt\": {{faker 'datatype.number'}},\n      \"PreviousRunId\": \"\",\n      \"TriggerName\": \"\",\n      \"JobName\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"JobRunState\": \"\",\n      \"Arguments\": {},\n      \"ErrorMessage\": \"\",\n      \"PredecessorRuns\": [\n        {\n          \"JobName\": \"\",\n          \"RunId\": \"\"\n        }\n      ],\n      \"AllocatedCapacity\": {{faker 'datatype.number'}},\n      \"ExecutionTime\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"MaxCapacity\": {{faker 'datatype.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'datatype.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"LogGroupName\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "94f4197a-3ffd-436d-bed3-2f49e7000226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "89fd2441-414f-4e30-8ec1-b71c35c0e351",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f7980c1-568d-4125-b8b9-02203895a8ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "659c7578-fe8c-4db2-bcb1-a1ad93629213",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f1135e1b-44d8-4f89-872b-9dbc00b781e4",
      "documentation": "Retrieves all current job definitions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobs",
      "responses": [
        {
          "uuid": "f71a6f84-cf25-436a-8345-a2625d8f2ee9",
          "body": "{\n  \"Jobs\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LogUri\": \"\",\n      \"Role\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionProperty\": {\n        \"MaxConcurrentRuns\": {{faker 'datatype.number'}}\n      },\n      \"Command\": {\n        \"Name\": \"\",\n        \"ScriptLocation\": \"\",\n        \"PythonVersion\": \"\"\n      },\n      \"DefaultArguments\": {},\n      \"NonOverridableArguments\": {},\n      \"Connections\": {\n        \"Connections\": [\n          \"\"\n        ]\n      },\n      \"MaxRetries\": {{faker 'datatype.number'}},\n      \"AllocatedCapacity\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"MaxCapacity\": {{faker 'datatype.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'datatype.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ceb4a015-4d79-4126-b8b6-ac564bbd6000",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eaaf53ab-6619-4bda-911d-de5fbf41b6da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a1b0886e-fa47-44e2-8750-40d95923a016",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f6fbce94-b7e5-4894-81d3-5dba7d0f7779",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16293024-3092-4a64-a472-877f1fedbfc6",
      "documentation": "Gets details for a specific task run on a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can check the stats of any task run by calling <code>GetMLTaskRun</code> with the <code>TaskRunID</code> and its parent transform's <code>TransformID</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTaskRun",
      "responses": [
        {
          "uuid": "9e6860b6-57a3-49ad-a338-cafcd5d833de",
          "body": "{\n  \"TransformId\": \"\",\n  \"TaskRunId\": \"\",\n  \"Status\": \"\",\n  \"LogGroupName\": \"\",\n  \"Properties\": {\n    \"TaskType\": \"\",\n    \"ImportLabelsTaskRunProperties\": {\n      \"InputS3Path\": \"\",\n      \"Replace\": {{faker 'datatype.boolean'}}\n    },\n    \"ExportLabelsTaskRunProperties\": {\n      \"OutputS3Path\": \"\"\n    },\n    \"LabelingSetGenerationTaskRunProperties\": {\n      \"OutputS3Path\": \"\"\n    },\n    \"FindMatchesTaskRunProperties\": {\n      \"JobId\": \"\",\n      \"JobName\": \"\",\n      \"JobRunId\": \"\"\n    }\n  },\n  \"ErrorString\": \"\",\n  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n  \"ExecutionTime\": {{faker 'datatype.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "cb5184f4-db7a-45b5-bfe5-d515935d7ee9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "137546ae-9ea0-4f57-8a07-d9acc819224b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "806edf3d-5230-4afd-b67b-a5d9fb2e5171",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "811e95c7-4938-4929-ac4a-c173a73ce6bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d8a3dc37-6154-4381-9eda-71128f4e8e7e",
      "documentation": "<p>Gets a list of runs for a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can get a sortable, filterable list of machine learning task runs by calling <code>GetMLTaskRuns</code> with their parent transform's <code>TransformID</code> and other optional parameters as documented in this section.</p> <p>This operation returns a list of historic runs and must be paginated.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTaskRuns",
      "responses": [
        {
          "uuid": "09f45d89-2281-4fe4-8947-a7b5869974f3",
          "body": "{\n  \"TaskRuns\": [\n    {\n      \"TransformId\": \"\",\n      \"TaskRunId\": \"\",\n      \"Status\": \"\",\n      \"LogGroupName\": \"\",\n      \"Properties\": {\n        \"TaskType\": \"\",\n        \"ImportLabelsTaskRunProperties\": {\n          \"InputS3Path\": \"\",\n          \"Replace\": {{faker 'datatype.boolean'}}\n        },\n        \"ExportLabelsTaskRunProperties\": {\n          \"OutputS3Path\": \"\"\n        },\n        \"LabelingSetGenerationTaskRunProperties\": {\n          \"OutputS3Path\": \"\"\n        },\n        \"FindMatchesTaskRunProperties\": {\n          \"JobId\": \"\",\n          \"JobName\": \"\",\n          \"JobRunId\": \"\"\n        }\n      },\n      \"ErrorString\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionTime\": {{faker 'datatype.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "82fba949-0636-4584-bf64-d573489fefda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9f7439f8-2f93-4c94-8e87-c0fc74636c2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2a2221a9-5e9a-4a4c-970e-548ce2dfdf2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af9d62f8-607b-44f4-b3b8-278ea35adad3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ccf2e4c-10ff-446e-8553-d1f3eb204fd4",
      "documentation": "Gets an Glue machine learning transform artifact and all its corresponding metadata. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. You can retrieve their metadata by calling <code>GetMLTransform</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTransform",
      "responses": [
        {
          "uuid": "5711bf4f-663c-4c87-ae4e-b3cc91f09236",
          "body": "{\n  \"TransformId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"Status\": \"\",\n  \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n  \"InputRecordTables\": [\n    {\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CatalogId\": \"\",\n      \"ConnectionName\": \"\"\n    }\n  ],\n  \"Parameters\": {\n    \"TransformType\": \"\",\n    \"FindMatchesParameters\": {\n      \"PrimaryKeyColumnName\": \"\",\n      \"PrecisionRecallTradeoff\": {{faker 'datatype.float'}},\n      \"AccuracyCostTradeoff\": {{faker 'datatype.float'}},\n      \"EnforceProvidedLabels\": {{faker 'datatype.boolean'}}\n    }\n  },\n  \"EvaluationMetrics\": {\n    \"TransformType\": \"\",\n    \"FindMatchesMetrics\": {\n      \"AreaUnderPRCurve\": {{faker 'datatype.float'}},\n      \"Precision\": {{faker 'datatype.float'}},\n      \"Recall\": {{faker 'datatype.float'}},\n      \"F1\": {{faker 'datatype.float'}},\n      \"ConfusionMatrix\": {\n        \"NumTruePositives\": {{faker 'datatype.number'}},\n        \"NumFalsePositives\": {{faker 'datatype.number'}},\n        \"NumTrueNegatives\": {{faker 'datatype.number'}},\n        \"NumFalseNegatives\": {{faker 'datatype.number'}}\n      },\n      \"ColumnImportances\": [\n        {\n          \"ColumnName\": \"\",\n          \"Importance\": {{faker 'datatype.float'}}\n        }\n      ]\n    }\n  },\n  \"LabelCount\": {{faker 'datatype.number'}},\n  \"Schema\": [\n    {\n      \"Name\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"Role\": \"\",\n  \"GlueVersion\": \"\",\n  \"MaxCapacity\": {{faker 'datatype.float'}},\n  \"WorkerType\": \"\",\n  \"NumberOfWorkers\": {{faker 'datatype.number'}},\n  \"Timeout\": {{faker 'datatype.number'}},\n  \"MaxRetries\": {{faker 'datatype.number'}},\n  \"TransformEncryption\": {\n    \"MlUserDataEncryption\": {\n      \"MlUserDataEncryptionMode\": \"\",\n      \"KmsKeyId\": \"\"\n    },\n    \"TaskRunSecurityConfigurationName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e89bbfa8-b5cc-43db-a021-f2b76d1d869a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d49cb94e-d4b7-4685-9da7-428db3a42878",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "af221432-1ed5-4c33-a988-0db7e07c3628",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aaa2f02f-30b1-4e41-8621-7a4a8193b55e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9efa65ae-11ff-46c8-b2e7-d2084cc89ede",
      "documentation": "Gets a sortable, filterable list of existing Glue machine learning transforms. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue, and you can retrieve their metadata by calling <code>GetMLTransforms</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTransforms",
      "responses": [
        {
          "uuid": "f371991d-4683-4eac-a33f-655f715132b2",
          "body": "{\n  \"Transforms\": [\n    {\n      \"TransformId\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Status\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"InputRecordTables\": [\n        {\n          \"DatabaseName\": \"\",\n          \"TableName\": \"\",\n          \"CatalogId\": \"\",\n          \"ConnectionName\": \"\"\n        }\n      ],\n      \"Parameters\": {\n        \"TransformType\": \"\",\n        \"FindMatchesParameters\": {\n          \"PrimaryKeyColumnName\": \"\",\n          \"PrecisionRecallTradeoff\": {{faker 'datatype.float'}},\n          \"AccuracyCostTradeoff\": {{faker 'datatype.float'}},\n          \"EnforceProvidedLabels\": {{faker 'datatype.boolean'}}\n        }\n      },\n      \"EvaluationMetrics\": {\n        \"TransformType\": \"\",\n        \"FindMatchesMetrics\": {\n          \"AreaUnderPRCurve\": {{faker 'datatype.float'}},\n          \"Precision\": {{faker 'datatype.float'}},\n          \"Recall\": {{faker 'datatype.float'}},\n          \"F1\": {{faker 'datatype.float'}},\n          \"ConfusionMatrix\": {\n            \"NumTruePositives\": {{faker 'datatype.number'}},\n            \"NumFalsePositives\": {{faker 'datatype.number'}},\n            \"NumTrueNegatives\": {{faker 'datatype.number'}},\n            \"NumFalseNegatives\": {{faker 'datatype.number'}}\n          },\n          \"ColumnImportances\": [\n            {\n              \"ColumnName\": \"\",\n              \"Importance\": {{faker 'datatype.float'}}\n            }\n          ]\n        }\n      },\n      \"LabelCount\": {{faker 'datatype.number'}},\n      \"Schema\": [\n        {\n          \"Name\": \"\",\n          \"DataType\": \"\"\n        }\n      ],\n      \"Role\": \"\",\n      \"GlueVersion\": \"\",\n      \"MaxCapacity\": {{faker 'datatype.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'datatype.number'}},\n      \"Timeout\": {{faker 'datatype.number'}},\n      \"MaxRetries\": {{faker 'datatype.number'}},\n      \"TransformEncryption\": {\n        \"MlUserDataEncryption\": {\n          \"MlUserDataEncryptionMode\": \"\",\n          \"KmsKeyId\": \"\"\n        },\n        \"TaskRunSecurityConfigurationName\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c7c957f9-0cd3-492c-a54b-b923ef4304aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "65542adc-1162-4e53-8491-bf0d7a79fddb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b8aea00f-504f-4f94-83f3-1f9df23a3e5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f681413f-cf3d-4028-832f-f5234bfd8569",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e73b006d-211b-4a1e-8646-1d11ec91197f",
      "documentation": "Creates mappings.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMapping",
      "responses": [
        {
          "uuid": "5d241d9a-01f5-46a6-be57-9aaf70d12740",
          "body": "{\n  \"Mapping\": [\n    {\n      \"SourceTable\": \"\",\n      \"SourcePath\": \"\",\n      \"SourceType\": \"\",\n      \"TargetTable\": \"\",\n      \"TargetPath\": \"\",\n      \"TargetType\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f05aa4f8-cabb-4f16-8a75-417f8a93d9e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1fe25fba-2b45-447b-a606-fff51dd8849a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e3e3f557-510f-446e-8e4e-c21263557c3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38d95744-c89d-4aea-9926-9c3d7b54a474",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e7166129-c5c4-4441-ab34-30b21b153dbd",
      "documentation": "Retrieves information about a specified partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartition",
      "responses": [
        {
          "uuid": "690843f0-20a2-497e-9cbd-c2a3b23f40c2",
          "body": "{\n  \"Partition\": {\n    \"Values\": [\n      \"\"\n    ],\n    \"DatabaseName\": \"\",\n    \"TableName\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n    \"StorageDescriptor\": {\n      \"Columns\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"Location\": \"\",\n      \"InputFormat\": \"\",\n      \"OutputFormat\": \"\",\n      \"Compressed\": {{faker 'datatype.boolean'}},\n      \"NumberOfBuckets\": {{faker 'datatype.number'}},\n      \"SerdeInfo\": {\n        \"Name\": \"\",\n        \"SerializationLibrary\": \"\",\n        \"Parameters\": {}\n      },\n      \"BucketColumns\": [\n        \"\"\n      ],\n      \"SortColumns\": [\n        {\n          \"Column\": \"\",\n          \"SortOrder\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"Parameters\": {},\n      \"SkewedInfo\": {\n        \"SkewedColumnNames\": [\n          \"\"\n        ],\n        \"SkewedColumnValues\": [\n          \"\"\n        ],\n        \"SkewedColumnValueLocationMaps\": {}\n      },\n      \"StoredAsSubDirectories\": {{faker 'datatype.boolean'}},\n      \"SchemaReference\": {\n        \"SchemaId\": {\n          \"SchemaArn\": \"\",\n          \"SchemaName\": \"\",\n          \"RegistryName\": \"\"\n        },\n        \"SchemaVersionId\": \"\",\n        \"SchemaVersionNumber\": {{faker 'datatype.number'}}\n      }\n    },\n    \"Parameters\": {},\n    \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "396d8777-e5ba-40a7-9415-68e54029eef6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "59c1fe5b-ad24-4403-845f-05b582e93e2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "657de876-f4cd-409d-9b6f-6351c57dbc70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3ce30b7-2afa-4807-8e0d-e00315fd51ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9fe631b-1077-495d-b1f2-bede21d13078",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4b7db49a-a135-401f-b3a2-ebd37ef108b2",
      "documentation": "Retrieves the partition indexes associated with a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartitionIndexes",
      "responses": [
        {
          "uuid": "517b65b7-ec81-45ed-a24d-d9fae8dc93ad",
          "body": "{\n  \"PartitionIndexDescriptorList\": [\n    {\n      \"IndexName\": \"\",\n      \"Keys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\"\n        }\n      ],\n      \"IndexStatus\": \"\",\n      \"BackfillErrors\": [\n        {\n          \"Code\": \"\",\n          \"Partitions\": [\n            {\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6ca317f6-d284-4b77-91d5-1edb6c7e5dda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a664969-798c-4f42-8902-8c29070cccff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2d0668cb-5849-4727-ba82-f88e2e6eb5e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8533008d-d00e-44b4-b24b-5dd5098c54ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2b6fd2e0-1a03-44f7-986d-ae40d8ae6b95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "16e9070d-0a30-4a0f-bccf-cc222436df7c",
      "documentation": "Retrieves information about the partitions in a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartitions",
      "responses": [
        {
          "uuid": "2997d666-7c9c-4d81-978e-6b372ffcc900",
          "body": "{\n  \"Partitions\": [\n    {\n      \"Values\": [\n        \"\"\n      ],\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'datatype.boolean'}},\n        \"NumberOfBuckets\": {{faker 'datatype.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'datatype.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'datatype.number'}}\n        }\n      },\n      \"Parameters\": {},\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5a3db363-c531-4c7f-a7b0-b643ce00278e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b1a2659c-bb6b-4c26-b92c-51f04577221c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4b36ba8-be88-458b-ae2e-69392bc03ad8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86127b99-07a9-48df-b94b-db01f762ad0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a14ddafb-db89-4925-ab11-1245a0e3f7f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3245c21a-92c7-4e38-aa10-aa324f535d91",
      "documentation": "Gets code to perform a specified mapping.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPlan",
      "responses": [
        {
          "uuid": "00228efd-3e7f-4a72-a47d-e88784fe8813",
          "body": "{\n  \"PythonScript\": \"\",\n  \"ScalaCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dfceca77-49d2-4efd-bb1b-8c3a2b45cc3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d264ed9b-5f42-4626-b473-18af8ce8e5ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "702c3e27-ef66-4089-83d7-4f469c04e498",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c46d34c-b0f3-4d2e-9500-fe4eac1d51c0",
      "documentation": "Describes the specified registry in detail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetRegistry",
      "responses": [
        {
          "uuid": "d904d95c-6251-4e78-9da2-67381eb8b1a7",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"Description\": \"\",\n  \"Status\": \"\",\n  \"CreatedTime\": \"\",\n  \"UpdatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a9ee5ac-ef0f-4d1b-b990-a544bfdbaa02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "71c8bfc2-d64e-4d56-ae9d-e480ea8217ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "48f069fa-87da-408e-a0ab-d2a6b0cdd4c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9768d97c-6b62-4607-bbd8-d4c31edad6d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "edc79086-24c5-42c2-bd63-ec6b77f8e479",
      "documentation": "<p>Retrieves the resource policies set on individual resources by Resource Access Manager during cross-account permission grants. Also retrieves the Data Catalog resource policy.</p> <p>If you enabled metadata encryption in Data Catalog settings, and you do not have permission on the KMS key, the operation can't return the Data Catalog resource policy.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetResourcePolicies",
      "responses": [
        {
          "uuid": "d98c4c86-8b71-4a36-a0f2-a5229604386e",
          "body": "{\n  \"GetResourcePoliciesResponseList\": [\n    {\n      \"PolicyInJson\": \"\",\n      \"PolicyHash\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "d4abb309-eb72-4756-9483-7d5ba0513a2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6fdf5304-a885-4e86-99e7-2c895545f956",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ddf054ef-782e-4073-acc5-a8479b576874",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca8bc72a-8759-4264-acd2-070d4e8398fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0152420c-a1a3-4e70-8d10-fab66ffe7d5a",
      "documentation": "Retrieves a specified resource policy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetResourcePolicy",
      "responses": [
        {
          "uuid": "c53184fb-4a45-46d2-987c-a697d050fda3",
          "body": "{\n  \"PolicyInJson\": \"\",\n  \"PolicyHash\": \"\",\n  \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n  \"UpdateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "03fa8023-4426-4219-b771-6da8c6ebaafc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3bbd2bd1-25e8-4f5d-bfa1-d3a7487c9e3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e1dd501d-b26b-4c23-a3d6-42a5d088a30f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1d0a429b-b992-4831-af7d-7299ba8270a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0c7a3715-44a4-4a87-916b-57d12946b72f",
      "documentation": "Describes the specified schema in detail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchema",
      "responses": [
        {
          "uuid": "fb11024b-67ec-46ac-9914-ced40e2d11e3",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"SchemaName\": \"\",\n  \"SchemaArn\": \"\",\n  \"Description\": \"\",\n  \"DataFormat\": \"\",\n  \"Compatibility\": \"\",\n  \"SchemaCheckpoint\": {{faker 'datatype.number'}},\n  \"LatestSchemaVersion\": {{faker 'datatype.number'}},\n  \"NextSchemaVersion\": {{faker 'datatype.number'}},\n  \"SchemaStatus\": \"\",\n  \"CreatedTime\": \"\",\n  \"UpdatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "38f7afe1-e1a7-463e-959f-77eab2ab0633",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "421ce7a7-8886-4832-88d4-b29d05503e1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1348fa1b-b56a-4398-93d6-125ed5bc9493",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f501b952-13ad-463c-bf76-a9147c9e2394",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7cc0377d-6f3a-46bf-8735-c2ff1317eec9",
      "documentation": "Retrieves a schema by the <code>SchemaDefinition</code>. The schema definition is sent to the Schema Registry, canonicalized, and hashed. If the hash is matched within the scope of the <code>SchemaName</code> or ARN (or the default registry, if none is supplied), that schema’s metadata is returned. Otherwise, a 404 or NotFound error is returned. Schema versions in <code>Deleted</code> statuses will not be included in the results.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaByDefinition",
      "responses": [
        {
          "uuid": "9779be39-66fc-4d33-b332-38a079ae5f39",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"SchemaArn\": \"\",\n  \"DataFormat\": \"\",\n  \"Status\": \"\",\n  \"CreatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "601e9049-06cc-46d4-932a-53f901834973",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "29ba2445-fd8f-4063-88e8-a808726d7ad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f28d628e-9d3b-4cf2-affd-dd3fa109227f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a27b79f5-6746-4ea9-8803-777d7c16227c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "283f19e1-219d-4a88-866d-03344e8fc05b",
      "documentation": "Get the specified schema by its unique ID assigned when a version of the schema is created or registered. Schema versions in Deleted status will not be included in the results.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaVersion",
      "responses": [
        {
          "uuid": "ba2edeb6-fd3f-43fc-bc73-d2e066d800ce",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"SchemaDefinition\": \"\",\n  \"DataFormat\": \"\",\n  \"SchemaArn\": \"\",\n  \"VersionNumber\": {{faker 'datatype.number'}},\n  \"Status\": \"\",\n  \"CreatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ac9ba310-8581-4473-974b-1bea381caeb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f1c6a42-9e21-4eeb-b873-e1de662d101d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "152266b2-057f-49c0-b225-767ac2363b4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "485cfcfe-ac90-405d-b6db-46b47787c3b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1594599a-21fa-4b8e-975f-e9afd297cb7d",
      "documentation": "<p>Fetches the schema version difference in the specified difference type between two stored schema versions in the Schema Registry.</p> <p>This API allows you to compare two schema versions between two schema definitions under the same schema.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaVersionsDiff",
      "responses": [
        {
          "uuid": "6c5599de-9d49-42cb-aa7e-dd596d72dacf",
          "body": "{\n  \"Diff\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e0330baf-6b94-47db-abe6-0cd52265f9f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0bda174e-fab5-412e-8d64-838770409b61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7457ec0d-3e64-4a96-8d91-ab39c3d61baf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4b01a49-fd7a-41d5-a882-139cc7aecaa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "077f7457-d014-46f4-8c1c-c27c9c5b814d",
      "documentation": "Retrieves a specified security configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSecurityConfiguration",
      "responses": [
        {
          "uuid": "e7bcb3b0-529c-4e51-b3f2-77b242743b1b",
          "body": "{\n  \"SecurityConfiguration\": {\n    \"Name\": \"\",\n    \"CreatedTimeStamp\": \"{{faker 'date.recent' 365}}\",\n    \"EncryptionConfiguration\": {\n      \"S3Encryption\": [\n        {\n          \"S3EncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        }\n      ],\n      \"CloudWatchEncryption\": {\n        \"CloudWatchEncryptionMode\": \"\",\n        \"KmsKeyArn\": \"\"\n      },\n      \"JobBookmarksEncryption\": {\n        \"JobBookmarksEncryptionMode\": \"\",\n        \"KmsKeyArn\": \"\"\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ac6a7d5a-cbac-46ab-8c49-ac6b88b93c88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "57295bf3-48d5-4831-ae88-431956d00e39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aba9a22a-edfd-4ac8-92f9-97525a444417",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52dfd3f2-f49b-47a0-b622-487614ca4e0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "224e04dc-c21c-4973-85ac-2e26944569ef",
      "documentation": "Retrieves a list of all security configurations.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSecurityConfigurations",
      "responses": [
        {
          "uuid": "f693ed34-6d30-4e25-85aa-1a136d9307c1",
          "body": "{\n  \"SecurityConfigurations\": [\n    {\n      \"Name\": \"\",\n      \"CreatedTimeStamp\": \"{{faker 'date.recent' 365}}\",\n      \"EncryptionConfiguration\": {\n        \"S3Encryption\": [\n          {\n            \"S3EncryptionMode\": \"\",\n            \"KmsKeyArn\": \"\"\n          }\n        ],\n        \"CloudWatchEncryption\": {\n          \"CloudWatchEncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        },\n        \"JobBookmarksEncryption\": {\n          \"JobBookmarksEncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2e4f394b-072e-40ef-8905-34e9ee8a4bb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6dc341e-90d2-47a4-897c-ab084d3f0f66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bdc5aef8-7315-469e-b422-b00fcfdcad43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e63b910e-b931-48bd-9e2f-e7c8abfbd6b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "180bf7e9-e92b-4013-9240-f15f1072236f",
      "documentation": "Retrieves the <code>Table</code> definition in a Data Catalog for a specified table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTable",
      "responses": [
        {
          "uuid": "c4e80f45-9525-4a23-a59f-d455adb1ed73",
          "body": "{\n  \"Table\": {\n    \"Name\": \"\",\n    \"DatabaseName\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Retention\": {{faker 'datatype.number'}},\n    \"StorageDescriptor\": {\n      \"Columns\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"Location\": \"\",\n      \"InputFormat\": \"\",\n      \"OutputFormat\": \"\",\n      \"Compressed\": {{faker 'datatype.boolean'}},\n      \"NumberOfBuckets\": {{faker 'datatype.number'}},\n      \"SerdeInfo\": {\n        \"Name\": \"\",\n        \"SerializationLibrary\": \"\",\n        \"Parameters\": {}\n      },\n      \"BucketColumns\": [\n        \"\"\n      ],\n      \"SortColumns\": [\n        {\n          \"Column\": \"\",\n          \"SortOrder\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"Parameters\": {},\n      \"SkewedInfo\": {\n        \"SkewedColumnNames\": [\n          \"\"\n        ],\n        \"SkewedColumnValues\": [\n          \"\"\n        ],\n        \"SkewedColumnValueLocationMaps\": {}\n      },\n      \"StoredAsSubDirectories\": {{faker 'datatype.boolean'}},\n      \"SchemaReference\": {\n        \"SchemaId\": {\n          \"SchemaArn\": \"\",\n          \"SchemaName\": \"\",\n          \"RegistryName\": \"\"\n        },\n        \"SchemaVersionId\": \"\",\n        \"SchemaVersionNumber\": {{faker 'datatype.number'}}\n      }\n    },\n    \"PartitionKeys\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Comment\": \"\",\n        \"Parameters\": {}\n      }\n    ],\n    \"ViewOriginalText\": \"\",\n    \"ViewExpandedText\": \"\",\n    \"TableType\": \"\",\n    \"Parameters\": {},\n    \"CreatedBy\": \"\",\n    \"IsRegisteredWithLakeFormation\": {{faker 'datatype.boolean'}},\n    \"TargetTable\": {\n      \"CatalogId\": \"\",\n      \"DatabaseName\": \"\",\n      \"Name\": \"\"\n    },\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7eb259aa-8451-4346-830f-3f6433121667",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9638cec1-d419-4dad-b077-aee162ef3a06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb6837c4-7e0c-4b24-96a4-ad7749ea6783",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "20a99de7-f9eb-42c1-a5b9-39b7c267d0b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eed00bdd-7a41-4338-9e60-579de220e1ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "390619d4-b03d-451e-aeda-4843d66099f2",
      "documentation": "Retrieves a specified version of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTableVersion",
      "responses": [
        {
          "uuid": "628f495d-bf09-45a5-9389-c1abe324dac0",
          "body": "{\n  \"TableVersion\": {\n    \"Table\": {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'datatype.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'datatype.boolean'}},\n        \"NumberOfBuckets\": {{faker 'datatype.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'datatype.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'datatype.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'datatype.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    },\n    \"VersionId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "11bd4ee6-5d86-4c7c-bffa-9adef71af74f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d32d8cda-5df5-42a9-87c5-1577b61d15f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5456d712-3420-4084-8e6f-12811bfe1739",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fef8d44-bf52-4eab-b26a-3afa5ed6c5dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "806f61d5-42ca-4c00-ab75-866a67d772c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "605f1a46-4544-40a3-94ad-8332140dd6a2",
      "documentation": "Retrieves a list of strings that identify available versions of a specified table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTableVersions",
      "responses": [
        {
          "uuid": "d42573e1-5e19-46ae-b5ff-4edb7ed79b05",
          "body": "{\n  \"TableVersions\": [\n    {\n      \"Table\": {\n        \"Name\": \"\",\n        \"DatabaseName\": \"\",\n        \"Description\": \"\",\n        \"Owner\": \"\",\n        \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n        \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Retention\": {{faker 'datatype.number'}},\n        \"StorageDescriptor\": {\n          \"Columns\": [\n            {\n              \"Name\": \"\",\n              \"Type\": \"\",\n              \"Comment\": \"\",\n              \"Parameters\": {}\n            }\n          ],\n          \"Location\": \"\",\n          \"InputFormat\": \"\",\n          \"OutputFormat\": \"\",\n          \"Compressed\": {{faker 'datatype.boolean'}},\n          \"NumberOfBuckets\": {{faker 'datatype.number'}},\n          \"SerdeInfo\": {\n            \"Name\": \"\",\n            \"SerializationLibrary\": \"\",\n            \"Parameters\": {}\n          },\n          \"BucketColumns\": [\n            \"\"\n          ],\n          \"SortColumns\": [\n            {\n              \"Column\": \"\",\n              \"SortOrder\": {{faker 'datatype.number'}}\n            }\n          ],\n          \"Parameters\": {},\n          \"SkewedInfo\": {\n            \"SkewedColumnNames\": [\n              \"\"\n            ],\n            \"SkewedColumnValues\": [\n              \"\"\n            ],\n            \"SkewedColumnValueLocationMaps\": {}\n          },\n          \"StoredAsSubDirectories\": {{faker 'datatype.boolean'}},\n          \"SchemaReference\": {\n            \"SchemaId\": {\n              \"SchemaArn\": \"\",\n              \"SchemaName\": \"\",\n              \"RegistryName\": \"\"\n            },\n            \"SchemaVersionId\": \"\",\n            \"SchemaVersionNumber\": {{faker 'datatype.number'}}\n          }\n        },\n        \"PartitionKeys\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"ViewOriginalText\": \"\",\n        \"ViewExpandedText\": \"\",\n        \"TableType\": \"\",\n        \"Parameters\": {},\n        \"CreatedBy\": \"\",\n        \"IsRegisteredWithLakeFormation\": {{faker 'datatype.boolean'}},\n        \"TargetTable\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\"\n        },\n        \"CatalogId\": \"\"\n      },\n      \"VersionId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c7a22514-db35-4531-a1d5-baba42878058",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e41c15d-88b8-488c-8420-922bdf5b7954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8fa3fe8d-c491-4bdc-874b-449b480ffc62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f75019c-ec8d-417f-8433-bc442e624418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "52b00f9c-52c2-4903-bbfe-8c27a78af767",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f139ea63-49de-43af-b49d-ad1667f3137c",
      "documentation": "Retrieves the definitions of some or all of the tables in a given <code>Database</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTables",
      "responses": [
        {
          "uuid": "269c214d-e498-4205-a692-76d8b42885c1",
          "body": "{\n  \"TableList\": [\n    {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'datatype.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'datatype.boolean'}},\n        \"NumberOfBuckets\": {{faker 'datatype.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'datatype.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'datatype.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'datatype.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6b09866f-5db7-4d0e-ba5b-6c20d1f36fdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ced4658-7277-4c1c-917c-b0022b2a7f34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "08a21952-bafa-4d7b-9a86-8ffcbac426c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "801822f8-b14d-46ce-999a-76dec8efbcb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4280d16-52f2-4d19-aeac-7e975e82273d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ce96960d-d50c-410b-ae66-1f4e761a97b1",
      "documentation": "Retrieves a list of tags associated with a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTags",
      "responses": [
        {
          "uuid": "ebc46eaf-5593-47fc-80a7-41f756a6e79a",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "13d36278-31d7-4a0f-b481-e2473fe0a232",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c2955ff4-b824-42aa-80ae-ee9b087d68d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e002aae1-0bdb-4ad8-a569-742f8496f982",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0416c914-8e8b-4243-8370-3256dd8c7a22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "11798d6b-df07-45b5-9163-454ada937712",
      "documentation": "Retrieves the definition of a trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTrigger",
      "responses": [
        {
          "uuid": "2ff72dd0-8ad6-4fe7-8f5f-a584c7c7dd94",
          "body": "{\n  \"Trigger\": {\n    \"Name\": \"\",\n    \"WorkflowName\": \"\",\n    \"Id\": \"\",\n    \"Type\": \"\",\n    \"State\": \"\",\n    \"Description\": \"\",\n    \"Schedule\": \"\",\n    \"Actions\": [\n      {\n        \"JobName\": \"\",\n        \"Arguments\": {},\n        \"Timeout\": {{faker 'datatype.number'}},\n        \"SecurityConfiguration\": \"\",\n        \"NotificationProperty\": {\n          \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n        },\n        \"CrawlerName\": \"\"\n      }\n    ],\n    \"Predicate\": {\n      \"Logical\": \"\",\n      \"Conditions\": [\n        {\n          \"LogicalOperator\": \"\",\n          \"JobName\": \"\",\n          \"State\": \"\",\n          \"CrawlerName\": \"\",\n          \"CrawlState\": \"\"\n        }\n      ]\n    },\n    \"EventBatchingCondition\": {\n      \"BatchSize\": {{faker 'datatype.number'}},\n      \"BatchWindow\": {{faker 'datatype.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "35dc7538-b6ec-4592-8e2e-36444eeb8b37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "50002664-9e17-44d2-a125-16900f43f154",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b2544e0-ce26-4778-86da-07ec90d3ab67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c76a5a8-7e40-49c6-8ddd-89f46e6731db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5c340503-9815-4a1f-bab6-62701bb761da",
      "documentation": "Gets all the triggers associated with a job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTriggers",
      "responses": [
        {
          "uuid": "6fe2c1a6-85a5-4db9-8627-d3c7d8189bdb",
          "body": "{\n  \"Triggers\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowName\": \"\",\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"State\": \"\",\n      \"Description\": \"\",\n      \"Schedule\": \"\",\n      \"Actions\": [\n        {\n          \"JobName\": \"\",\n          \"Arguments\": {},\n          \"Timeout\": {{faker 'datatype.number'}},\n          \"SecurityConfiguration\": \"\",\n          \"NotificationProperty\": {\n            \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n          },\n          \"CrawlerName\": \"\"\n        }\n      ],\n      \"Predicate\": {\n        \"Logical\": \"\",\n        \"Conditions\": [\n          {\n            \"LogicalOperator\": \"\",\n            \"JobName\": \"\",\n            \"State\": \"\",\n            \"CrawlerName\": \"\",\n            \"CrawlState\": \"\"\n          }\n        ]\n      },\n      \"EventBatchingCondition\": {\n        \"BatchSize\": {{faker 'datatype.number'}},\n        \"BatchWindow\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "04297105-23da-4bcd-8c12-1ce6ba57e852",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a09d005e-6244-4abf-951d-2ed9e2196d9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "254cfe4e-4f07-4a85-80dc-9f220763b070",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a69727f-6132-41f6-9e75-7b04298d8255",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5fc79e7c-6377-4deb-beda-24527a2f8abb",
      "documentation": "Retrieves a specified function definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetUserDefinedFunction",
      "responses": [
        {
          "uuid": "2ab4a4e6-d776-4aea-ae57-6576da277f42",
          "body": "{\n  \"UserDefinedFunction\": {\n    \"FunctionName\": \"\",\n    \"DatabaseName\": \"\",\n    \"ClassName\": \"\",\n    \"OwnerName\": \"\",\n    \"OwnerType\": \"\",\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"ResourceUris\": [\n      {\n        \"ResourceType\": \"\",\n        \"Uri\": \"\"\n      }\n    ],\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ae32fdc3-03df-461f-aef0-2b3fefe970ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90aec4f5-74da-4406-a1dd-9faa9a1b3109",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eefb4e6b-5922-40c4-a670-4b4cded1ac76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f9a21f2b-7014-44ea-928e-7b76351be4ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "697f3431-d3ee-4773-bf79-78940f9c7fbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "184441cc-7b3a-4ae7-a2ea-09aba30c9259",
      "documentation": "Retrieves multiple function definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetUserDefinedFunctions",
      "responses": [
        {
          "uuid": "c3280964-162a-4cf3-af34-26693c857773",
          "body": "{\n  \"UserDefinedFunctions\": [\n    {\n      \"FunctionName\": \"\",\n      \"DatabaseName\": \"\",\n      \"ClassName\": \"\",\n      \"OwnerName\": \"\",\n      \"OwnerType\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceUris\": [\n        {\n          \"ResourceType\": \"\",\n          \"Uri\": \"\"\n        }\n      ],\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "42f1f01e-85f6-457e-ba22-6f0ef835584d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0da6c92d-51cd-42d5-8949-f5047ba67812",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53f7266e-04dc-4160-81c2-007071dec706",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f2f97e2-b159-468b-a72e-2d05258dca05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4b6e6e6f-0fb1-401c-884d-a1aff5834119",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "6eba2c34-b86b-48ba-8330-9b8795f3bc71",
      "documentation": "Retrieves resource metadata for a workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflow",
      "responses": [
        {
          "uuid": "f9bc9585-f0ae-45bb-9a84-21f5e9f9b751",
          "body": "{\n  \"Workflow\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"DefaultRunProperties\": {},\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastRun\": {\n      \"Name\": \"\",\n      \"WorkflowRunId\": \"\",\n      \"PreviousRunId\": \"\",\n      \"WorkflowRunProperties\": {},\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"Statistics\": {\n        \"TotalActions\": {{faker 'datatype.number'}},\n        \"TimeoutActions\": {{faker 'datatype.number'}},\n        \"FailedActions\": {{faker 'datatype.number'}},\n        \"StoppedActions\": {{faker 'datatype.number'}},\n        \"SucceededActions\": {{faker 'datatype.number'}},\n        \"RunningActions\": {{faker 'datatype.number'}}\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'datatype.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'datatype.number'}},\n                  \"BatchWindow\": {{faker 'datatype.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'datatype.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'datatype.number'}},\n                  \"ExecutionTime\": {{faker 'datatype.number'}},\n                  \"Timeout\": {{faker 'datatype.number'}},\n                  \"MaxCapacity\": {{faker 'datatype.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'datatype.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"StartingEventBatchCondition\": {\n        \"BatchSize\": {{faker 'datatype.number'}},\n        \"BatchWindow\": {{faker 'datatype.number'}}\n      }\n    },\n    \"Graph\": {\n      \"Nodes\": [\n        {\n          \"Type\": \"\",\n          \"Name\": \"\",\n          \"UniqueId\": \"\",\n          \"TriggerDetails\": {\n            \"Trigger\": {\n              \"Name\": \"\",\n              \"WorkflowName\": \"\",\n              \"Id\": \"\",\n              \"Type\": \"\",\n              \"State\": \"\",\n              \"Description\": \"\",\n              \"Schedule\": \"\",\n              \"Actions\": [\n                {\n                  \"JobName\": \"\",\n                  \"Arguments\": {},\n                  \"Timeout\": {{faker 'datatype.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                  },\n                  \"CrawlerName\": \"\"\n                }\n              ],\n              \"Predicate\": {\n                \"Logical\": \"\",\n                \"Conditions\": [\n                  {\n                    \"LogicalOperator\": \"\",\n                    \"JobName\": \"\",\n                    \"State\": \"\",\n                    \"CrawlerName\": \"\",\n                    \"CrawlState\": \"\"\n                  }\n                ]\n              },\n              \"EventBatchingCondition\": {\n                \"BatchSize\": {{faker 'datatype.number'}},\n                \"BatchWindow\": {{faker 'datatype.number'}}\n              }\n            }\n          },\n          \"JobDetails\": {\n            \"JobRuns\": [\n              {\n                \"Id\": \"\",\n                \"Attempt\": {{faker 'datatype.number'}},\n                \"PreviousRunId\": \"\",\n                \"TriggerName\": \"\",\n                \"JobName\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"JobRunState\": \"\",\n                \"Arguments\": {},\n                \"ErrorMessage\": \"\",\n                \"PredecessorRuns\": [\n                  {\n                    \"JobName\": \"\",\n                    \"RunId\": \"\"\n                  }\n                ],\n                \"AllocatedCapacity\": {{faker 'datatype.number'}},\n                \"ExecutionTime\": {{faker 'datatype.number'}},\n                \"Timeout\": {{faker 'datatype.number'}},\n                \"MaxCapacity\": {{faker 'datatype.float'}},\n                \"WorkerType\": \"\",\n                \"NumberOfWorkers\": {{faker 'datatype.number'}},\n                \"SecurityConfiguration\": \"\",\n                \"LogGroupName\": \"\",\n                \"NotificationProperty\": {\n                  \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                },\n                \"GlueVersion\": \"\"\n              }\n            ]\n          },\n          \"CrawlerDetails\": {\n            \"Crawls\": [\n              {\n                \"State\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"ErrorMessage\": \"\",\n                \"LogGroup\": \"\",\n                \"LogStream\": \"\"\n              }\n            ]\n          }\n        }\n      ],\n      \"Edges\": [\n        {\n          \"SourceId\": \"\",\n          \"DestinationId\": \"\"\n        }\n      ]\n    },\n    \"MaxConcurrentRuns\": {{faker 'datatype.number'}},\n    \"BlueprintDetails\": {\n      \"BlueprintName\": \"\",\n      \"RunId\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "999a6780-585e-4a21-89ee-efbaed772d59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "38eb36fe-47a8-4c09-9c3f-34a76fa18ec8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "737b89df-c18c-4e49-b189-4313d2dfe367",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66276dae-b578-4fcf-9615-65346d53d99f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7e5386e-e9bd-460a-981b-81ef958a2613",
      "documentation": "Retrieves the metadata for a given workflow run. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRun",
      "responses": [
        {
          "uuid": "c1d8b246-6a11-4590-8e72-0969c994f118",
          "body": "{\n  \"Run\": {\n    \"Name\": \"\",\n    \"WorkflowRunId\": \"\",\n    \"PreviousRunId\": \"\",\n    \"WorkflowRunProperties\": {},\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"ErrorMessage\": \"\",\n    \"Statistics\": {\n      \"TotalActions\": {{faker 'datatype.number'}},\n      \"TimeoutActions\": {{faker 'datatype.number'}},\n      \"FailedActions\": {{faker 'datatype.number'}},\n      \"StoppedActions\": {{faker 'datatype.number'}},\n      \"SucceededActions\": {{faker 'datatype.number'}},\n      \"RunningActions\": {{faker 'datatype.number'}}\n    },\n    \"Graph\": {\n      \"Nodes\": [\n        {\n          \"Type\": \"\",\n          \"Name\": \"\",\n          \"UniqueId\": \"\",\n          \"TriggerDetails\": {\n            \"Trigger\": {\n              \"Name\": \"\",\n              \"WorkflowName\": \"\",\n              \"Id\": \"\",\n              \"Type\": \"\",\n              \"State\": \"\",\n              \"Description\": \"\",\n              \"Schedule\": \"\",\n              \"Actions\": [\n                {\n                  \"JobName\": \"\",\n                  \"Arguments\": {},\n                  \"Timeout\": {{faker 'datatype.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                  },\n                  \"CrawlerName\": \"\"\n                }\n              ],\n              \"Predicate\": {\n                \"Logical\": \"\",\n                \"Conditions\": [\n                  {\n                    \"LogicalOperator\": \"\",\n                    \"JobName\": \"\",\n                    \"State\": \"\",\n                    \"CrawlerName\": \"\",\n                    \"CrawlState\": \"\"\n                  }\n                ]\n              },\n              \"EventBatchingCondition\": {\n                \"BatchSize\": {{faker 'datatype.number'}},\n                \"BatchWindow\": {{faker 'datatype.number'}}\n              }\n            }\n          },\n          \"JobDetails\": {\n            \"JobRuns\": [\n              {\n                \"Id\": \"\",\n                \"Attempt\": {{faker 'datatype.number'}},\n                \"PreviousRunId\": \"\",\n                \"TriggerName\": \"\",\n                \"JobName\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"JobRunState\": \"\",\n                \"Arguments\": {},\n                \"ErrorMessage\": \"\",\n                \"PredecessorRuns\": [\n                  {\n                    \"JobName\": \"\",\n                    \"RunId\": \"\"\n                  }\n                ],\n                \"AllocatedCapacity\": {{faker 'datatype.number'}},\n                \"ExecutionTime\": {{faker 'datatype.number'}},\n                \"Timeout\": {{faker 'datatype.number'}},\n                \"MaxCapacity\": {{faker 'datatype.float'}},\n                \"WorkerType\": \"\",\n                \"NumberOfWorkers\": {{faker 'datatype.number'}},\n                \"SecurityConfiguration\": \"\",\n                \"LogGroupName\": \"\",\n                \"NotificationProperty\": {\n                  \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                },\n                \"GlueVersion\": \"\"\n              }\n            ]\n          },\n          \"CrawlerDetails\": {\n            \"Crawls\": [\n              {\n                \"State\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"ErrorMessage\": \"\",\n                \"LogGroup\": \"\",\n                \"LogStream\": \"\"\n              }\n            ]\n          }\n        }\n      ],\n      \"Edges\": [\n        {\n          \"SourceId\": \"\",\n          \"DestinationId\": \"\"\n        }\n      ]\n    },\n    \"StartingEventBatchCondition\": {\n      \"BatchSize\": {{faker 'datatype.number'}},\n      \"BatchWindow\": {{faker 'datatype.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f5352e48-3bd5-44b1-97cd-ab2f2e78ab69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ef48fc78-510b-4c91-9587-c1ff5ec33e77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2005f0a1-0a01-4ddc-8957-92d4d06285b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "455c7b18-e069-465f-8645-e0d18c8be610",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2c27987c-21aa-4f83-b43a-7b83e131d560",
      "documentation": "Retrieves the workflow run properties which were set during the run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRunProperties",
      "responses": [
        {
          "uuid": "3a78a488-d886-4238-b050-d24178c6f7b5",
          "body": "{\n  \"RunProperties\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ae1f7bbc-ed3b-4a81-b64c-bad1123119e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f709f873-5961-41cf-af2f-8cb2bb452c85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d21b5926-7fa2-46e0-92d1-48aac39ab15b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f3587cff-d07e-40bc-88e3-117d4bc17257",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e2c731c3-f650-4430-9ea5-3be6e237ff21",
      "documentation": "Retrieves metadata for all runs of a given workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRuns",
      "responses": [
        {
          "uuid": "c7ea3f27-87e1-45cd-a78c-28c7be71cda4",
          "body": "{\n  \"Runs\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowRunId\": \"\",\n      \"PreviousRunId\": \"\",\n      \"WorkflowRunProperties\": {},\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"Statistics\": {\n        \"TotalActions\": {{faker 'datatype.number'}},\n        \"TimeoutActions\": {{faker 'datatype.number'}},\n        \"FailedActions\": {{faker 'datatype.number'}},\n        \"StoppedActions\": {{faker 'datatype.number'}},\n        \"SucceededActions\": {{faker 'datatype.number'}},\n        \"RunningActions\": {{faker 'datatype.number'}}\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'datatype.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'datatype.number'}},\n                  \"BatchWindow\": {{faker 'datatype.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'datatype.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'datatype.number'}},\n                  \"ExecutionTime\": {{faker 'datatype.number'}},\n                  \"Timeout\": {{faker 'datatype.number'}},\n                  \"MaxCapacity\": {{faker 'datatype.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'datatype.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"StartingEventBatchCondition\": {\n        \"BatchSize\": {{faker 'datatype.number'}},\n        \"BatchWindow\": {{faker 'datatype.number'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bcc2590f-087a-4d5a-846d-0ef4dd46100a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "116b35e8-2d45-4994-814e-e2ae62377b9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a50a162e-0288-40aa-94bf-892074d7b4a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3ece192b-b54b-4022-a2c3-073724f265d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "38abcf5c-16c4-4cf2-8e2b-c2b903dbadd0",
      "documentation": "Imports an existing Amazon Athena Data Catalog to Glue.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ImportCatalogToGlue",
      "responses": [
        {
          "uuid": "ad31093e-7ee2-46e7-ae41-44eb8b7239ea",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3d132c9c-3155-4f21-8d9f-01331ddb07c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a163a1de-221a-4ae3-b17d-034a73e26e71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9366cd56-e104-42b6-bc3f-184f991e7c4b",
      "documentation": "Lists all the blueprint names in an account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListBlueprints",
      "responses": [
        {
          "uuid": "5fac1d60-74f4-4109-91bc-389746369105",
          "body": "{\n  \"Blueprints\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3c3872ea-f685-4354-a034-b93e490db8bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c717881-8cd1-465d-ad54-dabfab72c69c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a912bc4-bf5e-480d-938a-76501ea5d0d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "27e7c792-5efd-4d9c-a7e1-a507b415350d",
      "documentation": "<p>Retrieves the names of all crawler resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListCrawlers",
      "responses": [
        {
          "uuid": "60c0d3b6-343c-4be2-be5f-a9544d93f6ff",
          "body": "{\n  \"CrawlerNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "85d28dad-0fd7-4ae4-82fa-f4a0fb3ec6cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f8f07e2-27bf-4c4b-b544-2ab4a6182c53",
      "documentation": "<p>Retrieves the names of all <code>DevEndpoint</code> resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListDevEndpoints",
      "responses": [
        {
          "uuid": "69e5f941-f834-4caa-9bec-b35d164421df",
          "body": "{\n  \"DevEndpointNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b61e71a5-8cba-42c1-afb0-22423a0b7cf5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e46e512d-b9f4-4037-b827-4e61112f53dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8b94b135-29aa-4e27-85a9-0f4d944996ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5ea9c2b-ec69-48f7-9a35-03741fb2003b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bd128aab-98ea-4d3c-9518-781fbfb1be32",
      "documentation": "<p>Retrieves the names of all job resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListJobs",
      "responses": [
        {
          "uuid": "e2ad71a2-bb6d-42d2-b371-c0b008f94c3d",
          "body": "{\n  \"JobNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e886819c-b13e-45c3-ae89-2c376cc438cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8dd5b8d9-97bd-4eae-b4dc-2428e2619a22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5e51629e-5f67-49de-b3f1-0498e44a5274",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "05098fc5-d92c-4af3-941d-e0c996ca98e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ce7894f-66bd-450a-b2c9-d48ab3d212bf",
      "documentation": " Retrieves a sortable, filterable list of existing Glue machine learning transforms in this Amazon Web Services account, or the resources with the specified tag. This operation takes the optional <code>Tags</code> field, which you can use as a filter of the responses so that tagged resources can be retrieved as a group. If you choose to use tag filtering, only resources with the tags are retrieved. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListMLTransforms",
      "responses": [
        {
          "uuid": "b85ead8b-c348-4d0e-ac43-453d69bc7da4",
          "body": "{\n  \"TransformIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4d0bc403-0a3a-421c-bea1-492b0bac3b4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "272c27be-ce59-46c0-9954-665a61067c44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a7dede3-94c5-4514-a0c5-12d073165c90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "79800e9a-8253-4a6f-b526-022a4dde0b2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "308367de-57ff-4ba8-878e-12bda99f8445",
      "documentation": "Returns a list of registries that you have created, with minimal registry information. Registries in the <code>Deleting</code> status will not be included in the results. Empty results will be returned if there are no registries available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListRegistries",
      "responses": [
        {
          "uuid": "5496d810-f7c9-4991-8315-f882d0f35cae",
          "body": "{\n  \"Registries\": [\n    {\n      \"RegistryName\": \"\",\n      \"RegistryArn\": \"\",\n      \"Description\": \"\",\n      \"Status\": \"\",\n      \"CreatedTime\": \"\",\n      \"UpdatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "07bac1c6-0e61-4864-8423-ccca4790613f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4516525e-643e-4a03-a559-fc8010660c4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c10b10eb-1053-4462-908f-7bb0de8e9022",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4256c884-ec2c-499f-b5e1-d1ebea00adb6",
      "documentation": "Returns a list of schema versions that you have created, with minimal information. Schema versions in Deleted status will not be included in the results. Empty results will be returned if there are no schema versions available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListSchemaVersions",
      "responses": [
        {
          "uuid": "4241c0b2-38b0-4f9f-8c94-3afbd2c542a9",
          "body": "{\n  \"Schemas\": [\n    {\n      \"SchemaArn\": \"\",\n      \"SchemaVersionId\": \"\",\n      \"VersionNumber\": {{faker 'datatype.number'}},\n      \"Status\": \"\",\n      \"CreatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dd88f4e7-70d8-4bb5-9398-4bd7e55cb169",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "43c99636-cd1b-42c2-a083-bc10c4873708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63e74f92-338e-4f0f-89c9-190a92cf9a6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d97b65a-ea7e-49b5-9a5e-7100799c4e4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0443b430-c13f-4d46-95a8-6da19938dd24",
      "documentation": "<p>Returns a list of schemas with minimal details. Schemas in Deleting status will not be included in the results. Empty results will be returned if there are no schemas available.</p> <p>When the <code>RegistryId</code> is not provided, all the schemas across registries will be part of the API response.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListSchemas",
      "responses": [
        {
          "uuid": "0d138976-bf95-4218-8278-1adf9d2c6fda",
          "body": "{\n  \"Schemas\": [\n    {\n      \"RegistryName\": \"\",\n      \"SchemaName\": \"\",\n      \"SchemaArn\": \"\",\n      \"Description\": \"\",\n      \"SchemaStatus\": \"\",\n      \"CreatedTime\": \"\",\n      \"UpdatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a96cd0a1-f309-4812-b14f-ac5eaf85a183",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "43ceea72-e4cc-4a9a-ace0-8d5c29c31f55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5a50c3f7-09f4-4ff4-937c-f0cffd5759ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "10405c51-d7c6-4213-9d0a-49d90277beb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3777a7c9-30fe-4337-aa7b-5162d111fe50",
      "documentation": "<p>Retrieves the names of all trigger resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListTriggers",
      "responses": [
        {
          "uuid": "87e8c8b4-9ff8-4561-8882-ddc36b6464d6",
          "body": "{\n  \"TriggerNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9c1ff91d-9c42-4743-b5ac-7f1bb14d1c71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7626dcd6-644c-4ab3-8616-e1e9278ff7c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "774187ca-2588-45f6-9d08-304fe40a0d1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "95c4ab6a-67c5-4b1b-872c-4a2858789eb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a00d2250-6ad2-490e-91da-c903d148b45a",
      "documentation": "Lists names of workflows created in the account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListWorkflows",
      "responses": [
        {
          "uuid": "2c1fe252-542e-4a93-8da8-177e553f506b",
          "body": "{\n  \"Workflows\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "520a39b2-eb72-4d7c-ad73-d9f8135c2697",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3fe1519c-a050-46d1-884c-c59fed5be16a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f21574fa-631b-48d0-837c-a2738e5b7e6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e5dd7930-12f5-4a42-b357-734ac452d02f",
      "documentation": "Sets the security configuration for a specified catalog. After the configuration has been set, the specified encryption is applied to every catalog write thereafter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutDataCatalogEncryptionSettings",
      "responses": [
        {
          "uuid": "b9604b63-2ab1-47a9-a4ce-409b54ad5c38",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1dca5615-7104-4ca8-9dec-a045e45a0ef9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "080c9250-3bea-483d-8d25-aa03722fb67a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9cb8fa3b-fab7-4990-ad12-1bcfd5810f5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e77d6140-e07b-4241-b485-d2a09099a0b1",
      "documentation": "Sets the Data Catalog resource policy for access control.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutResourcePolicy",
      "responses": [
        {
          "uuid": "c3562950-5d5c-4f77-8559-3fadbfb1f223",
          "body": "{\n  \"PolicyHash\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ab73e91-fc08-4b80-a369-20f9bd651a4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7ca5b84a-c202-40f0-9118-94871feac371",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e2593968-b0ec-4ad1-ae3c-fbdf18839201",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6bad462-8685-429d-a16b-1a1ba8c600f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee9806ad-f9ac-4d1c-b1c6-942605e7e141",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConditionCheckFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0a41ab3e-a76d-4f8f-9729-8f690f942e46",
      "documentation": "Puts the metadata key value pair for a specified schema version ID. A maximum of 10 key value pairs will be allowed per schema version. They can be added over one or more calls.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutSchemaVersionMetadata",
      "responses": [
        {
          "uuid": "ac93b6e8-62e4-4898-bc61-5285b374c22b",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\",\n  \"LatestVersion\": {{faker 'datatype.boolean'}},\n  \"VersionNumber\": {{faker 'datatype.number'}},\n  \"SchemaVersionId\": \"\",\n  \"MetadataKey\": \"\",\n  \"MetadataValue\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4c27f78d-3ab7-467d-8424-78cf7c9ce6b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3effc8eb-aecf-488a-abc9-b46b5bbed49e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d83dda8-7f32-4488-80da-2d0a85cab382",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c9bfc066-53d0-43eb-91ac-8e37bdfad528",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ec2ec32d-42f0-4740-a4ab-cbf4a6e064ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7fd61f1f-5482-4bc6-86ca-9cbe17f5f721",
      "documentation": "Puts the specified workflow run properties for the given workflow run. If a property already exists for the specified run, then it overrides the value otherwise adds the property to existing properties.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutWorkflowRunProperties",
      "responses": [
        {
          "uuid": "780cc963-4784-48a2-81d5-6bd5a2685070",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9cab64a4-38a7-4450-8618-aa997e0a8307",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b80ce72-248b-42ad-a8bd-fca123161f69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a2c154ac-c85f-4e43-9ca6-031e69a6ace1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "238aa327-20cb-45b3-b54c-6a62e724e20c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ce977fbc-6c16-4eb2-aa78-1f06d0b984e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "882a7eb8-6e7d-47d0-b5a0-4c65b3c820cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e17d40f-6f63-4857-ae83-b80e28be2333",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9c02cf7b-4523-4cf0-a897-9cbaa9f92428",
      "documentation": "Queries for the schema version metadata information. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.QuerySchemaVersionMetadata",
      "responses": [
        {
          "uuid": "0ebec85b-7974-4d05-aa49-860e9a696b5c",
          "body": "{\n  \"MetadataInfoMap\": {},\n  \"SchemaVersionId\": \"\",\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "41c1c4b5-7137-46dd-a480-68e1c7a484c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8aca1627-46ec-491f-80fb-0f9bc1c1ab28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "03d0ac05-cfbb-4182-9f8f-31be22f2a531",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ef098cd-1297-4f02-a8b2-c9b753b3348c",
      "documentation": "<p>Adds a new version to the existing schema. Returns an error if new version of schema does not meet the compatibility requirements of the schema set. This API will not create a new schema set and will return a 404 error if the schema set is not already present in the Schema Registry.</p> <p>If this is the first schema definition to be registered in the Schema Registry, this API will store the schema version and return immediately. Otherwise, this call has the potential to run longer than other operations due to compatibility modes. You can call the <code>GetSchemaVersion</code> API with the <code>SchemaVersionId</code> to check compatibility modes.</p> <p>If the same schema definition is already stored in Schema Registry as a version, the schema ID of the existing schema is returned to the caller.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.RegisterSchemaVersion",
      "responses": [
        {
          "uuid": "c315e861-a36c-4a01-bd7f-5034c9d6ab37",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"VersionNumber\": {{faker 'datatype.number'}},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "402cfc88-e8bc-4248-9829-52046c7268b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04ac9e4c-8f0d-459b-98eb-06c1a29e0099",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "49e1fb39-00bc-4668-904c-cb1995bcc6fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6b269df3-552e-4a26-b7b0-b7661477faac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8bda8234-f339-451c-8958-fe513bf9565b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "955a2440-1a14-41ba-8ac7-6d35ea11bd17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "83e553d4-833b-402d-aa55-73a9a82a5456",
      "documentation": "Removes a key value pair from the schema version metadata for the specified schema version ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.RemoveSchemaVersionMetadata",
      "responses": [
        {
          "uuid": "71ba9fd3-1fe1-4c8c-b7c3-a03b93f8b644",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\",\n  \"LatestVersion\": {{faker 'datatype.boolean'}},\n  \"VersionNumber\": {{faker 'datatype.number'}},\n  \"SchemaVersionId\": \"\",\n  \"MetadataKey\": \"\",\n  \"MetadataValue\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b8f73fc1-4680-4b94-9b4c-73122fb96170",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8680904a-b1f0-48bd-b1f9-555378e035f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "307a5373-24dc-40e3-8c74-92cd40c14207",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "49e61698-e5b0-4a9e-9174-3b0b09c5d0b6",
      "documentation": "Resets a bookmark entry.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ResetJobBookmark",
      "responses": [
        {
          "uuid": "cafb9c00-df1a-477f-a9c1-05adbc0a745f",
          "body": "{\n  \"JobBookmarkEntry\": {\n    \"JobName\": \"\",\n    \"Version\": {{faker 'datatype.number'}},\n    \"Run\": {{faker 'datatype.number'}},\n    \"Attempt\": {{faker 'datatype.number'}},\n    \"PreviousRunId\": \"\",\n    \"RunId\": \"\",\n    \"JobBookmark\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e431e871-b7eb-47ad-bf38-e4c688b34b56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5fbcf1ea-1220-4715-8161-d509a0c54e04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0f06df55-601a-49f9-9d1d-6806e198bb4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0a9c3ed2-4e47-428d-818d-50b69208098d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c89ae805-0cbb-4aba-b9c8-1a0e146a6f06",
      "documentation": "Restarts selected nodes of a previous partially completed workflow run and resumes the workflow run. The selected nodes and all nodes that are downstream from the selected nodes are run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ResumeWorkflowRun",
      "responses": [
        {
          "uuid": "8362ddf3-df34-41c7-8266-f2539ae0b580",
          "body": "{\n  \"RunId\": \"\",\n  \"NodeIds\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "08e41be8-d9f1-4e14-8735-1a7e9b1667b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "442443c9-be06-4a17-9f8e-5d6c9e19679f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04e63bba-5018-48a8-88dc-53f4704f3942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e63999f0-353c-4065-84db-492835fd6e0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7877f7c0-d0d8-46b3-bc22-5b42dbc13d8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d2cbe1f-a0e0-45f7-a90d-c3be71855597",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalWorkflowStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9b18b9d1-87fe-4e98-9e9d-1a02a003ddd8",
      "documentation": "<p>Searches a set of tables based on properties in the table metadata as well as on the parent database. You can search against text or filter conditions. </p> <p>You can only get tables that you have access to based on the security policies defined in Lake Formation. You need at least a read-only access to the table for it to be returned. If you do not have access to all the columns in the table, these columns will not be searched against when returning the list of tables back to you. If you have access to the columns but not the data in the columns, those columns and the associated metadata for those columns will be included in the search. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.SearchTables",
      "responses": [
        {
          "uuid": "60dc675a-0741-4e13-a444-b3439a2ebe0f",
          "body": "{\n  \"NextToken\": \"\",\n  \"TableList\": [\n    {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'datatype.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'datatype.boolean'}},\n        \"NumberOfBuckets\": {{faker 'datatype.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'datatype.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'datatype.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'datatype.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'datatype.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "73b96710-9aca-4b13-a0f4-a57e5f90166c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "00a65223-29d9-4876-8098-5a712c6b998b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cc999b7e-c8a2-4685-9e73-f211c6e0c8e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3ca7a9b0-1fd0-45db-b5ff-43b900db14fb",
      "documentation": "Starts a new run of the specified blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartBlueprintRun",
      "responses": [
        {
          "uuid": "a9144aaf-5dbb-4135-a434-c2fb09c7bbb1",
          "body": "{\n  \"RunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "09266b12-1892-4bb9-9c34-03ddfba2218a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "270625d2-c895-43af-9780-69da4920e239",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "40196cff-da6a-49da-ace9-3a3ad6c2e5d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "cec7fe28-6de6-41a6-8cf5-da86962ee6c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8d253108-ecec-44ca-9bcb-5a474a25d5de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a977e1ea-e93c-46fc-84fd-a534d6520c51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalBlueprintStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8f7cacf8-4e10-4a00-aaa2-ce777212a441",
      "documentation": "Starts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException\">CrawlerRunningException</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartCrawler",
      "responses": [
        {
          "uuid": "90edc7fa-a450-4194-a20b-1930ea2e2969",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8440e267-57bc-49b0-8fa6-6eb87be08f83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73c96388-2d84-4ae2-a471-341b9c8bae34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "82b90f6b-64d1-488d-8f21-218bd5cf9e17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "06771768-eb78-4783-ac38-51cadf1889cd",
      "documentation": "Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartCrawlerSchedule",
      "responses": [
        {
          "uuid": "8f8db35f-3279-47e8-9251-c32922f6dee7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c8d6c36a-477e-4cb5-b08d-85101895143c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d448b716-6bb9-44af-b692-bbb841022562",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "SchedulerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c87d65d3-fee5-48bf-a68d-87d16574c43d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a6bbabc8-c5a4-4f63-a708-1acf9d1e7636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoScheduleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "97766a9c-f475-491f-96b5-eff1a1f2bee4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fe488e14-ebf5-48a4-a517-ecfdbb7cb1dd",
      "documentation": "Begins an asynchronous task to export all labeled data for a particular transform. This task is the only label-related API call that is not part of the typical active learning workflow. You typically use <code>StartExportLabelsTaskRun</code> when you want to work with all of your existing labels at the same time, such as when you want to remove or change labels that were previously submitted as truth. This API operation accepts the <code>TransformId</code> whose labels you want to export and an Amazon Simple Storage Service (Amazon S3) path to export the labels to. The operation returns a <code>TaskRunId</code>. You can check on the status of your task run by calling the <code>GetMLTaskRun</code> API.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartExportLabelsTaskRun",
      "responses": [
        {
          "uuid": "a83c132b-9919-4427-851f-d676a2d7121b",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5460bd75-8172-4fa1-ba73-ccd063c79478",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2e1af905-2646-4354-8ea1-500140eddecf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb84684c-b1ed-43f3-8f05-47ce6ad8fa3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ed87ef1-d5c0-4f99-a367-85a1d3f82653",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9a971271-2b62-4437-9c1d-2f6f8d171686",
      "documentation": "<p>Enables you to provide additional labels (examples of truth) to be used to teach the machine learning transform and improve its quality. This API operation is generally used as part of the active learning workflow that starts with the <code>StartMLLabelingSetGenerationTaskRun</code> call and that ultimately results in improving the quality of your machine learning transform. </p> <p>After the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue machine learning will have generated a series of questions for humans to answer. (Answering these questions is often called 'labeling' in the machine learning workflows). In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” After the labeling process is finished, users upload their answers/labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform use the new and improved labels and perform a higher-quality transformation.</p> <p>By default, <code>StartMLLabelingSetGenerationTaskRun</code> continually learns from and combines all labels that you upload unless you set <code>Replace</code> to true. If you set <code>Replace</code> to true, <code>StartImportLabelsTaskRun</code> deletes and forgets all previously uploaded labels and learns only from the exact set that you upload. Replacing labels can be helpful if you realize that you previously uploaded incorrect labels, and you believe that they are having a negative effect on your transform quality.</p> <p>You can check on the status of your task run by calling the <code>GetMLTaskRun</code> operation. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartImportLabelsTaskRun",
      "responses": [
        {
          "uuid": "f4250d1a-76d1-4177-9005-12a2865b87d8",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8a828a6c-473e-4d86-ba71-687292f611ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "630d2cda-99e3-4ba7-85ca-4735ccebae49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "a206a1c2-0015-44d9-b771-b5c034ea4715",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "34d9dfc1-4f71-4ec2-bab0-d531ee6950f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "aaf68399-2be9-4645-8919-4b7086a2a147",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "52743c5b-8415-4835-89ce-9cb404ea6c6c",
      "documentation": "Starts a job run using a job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartJobRun",
      "responses": [
        {
          "uuid": "4e6daee0-7942-4d49-9952-5093309ebbb6",
          "body": "{\n  \"JobRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5ffd6964-1ba0-4bfd-a8a2-35e0ec632581",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8eb8d41f-869e-4660-bd72-9dca122520e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "acedcffc-2fd2-4844-b64d-bce129c0d31c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "346044f3-77d0-4f0a-8c04-bed4350dbaca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "60c00a38-7b33-46f1-8f3f-0f272239ad8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8646dfb-333b-4784-b7b2-f8590680789a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ceeee3ce-9ed8-4fbb-817a-5dcfead248e7",
      "documentation": "<p>Starts a task to estimate the quality of the transform. </p> <p>When you provide label sets as examples of truth, Glue machine learning uses some of those examples to learn from them. The rest of the labels are used as a test to estimate quality.</p> <p>Returns a unique identifier for the run. You can call <code>GetMLTaskRun</code> to get more information about the stats of the <code>EvaluationTaskRun</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartMLEvaluationTaskRun",
      "responses": [
        {
          "uuid": "32cdc07b-8683-493e-a7c4-e679753107dc",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5e906253-b1bc-48ab-b317-fee76c1d0ccb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e52fc6d4-faa9-4485-ba94-3a5b2e55dae3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63df3f9a-3498-4fff-8b16-0afb0ee656c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e5289c65-a621-4ed8-935c-5be02b3636ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd4ff7bf-7460-48a1-84d4-a8d74f442cf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "21749ac9-d93b-4a37-975f-0213af5492be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "MLTransformNotReadyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d5af6177-0102-47bf-888e-f2a2d4b1d7bc",
      "documentation": "<p>Starts the active learning workflow for your machine learning transform to improve the transform's quality by generating label sets and adding labels.</p> <p>When the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue will have generated a \"labeling set\" or a set of questions for humans to answer.</p> <p>In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” </p> <p>After the labeling process is finished, you can upload your labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform will use the new and improved labels and perform a higher-quality transformation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartMLLabelingSetGenerationTaskRun",
      "responses": [
        {
          "uuid": "ada8d0ad-0a54-4984-b821-c67ed5ba609c",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "74139d6e-399e-4035-bee1-c7baecd97c3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0449b911-aeee-46b6-8eb0-2a0e04980bf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "50b1aad6-a050-4ab8-9b5e-e05223107cfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9267f6d2-49e9-42c8-aa7d-f336312181ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11a6d310-f02b-4df3-a2ae-33e1789a7a34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dba4ba80-cac5-4f79-a4cd-3d37e4c66594",
      "documentation": "Starts an existing trigger. See <a href=\"https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html\">Triggering Jobs</a> for information about how different types of trigger are started.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartTrigger",
      "responses": [
        {
          "uuid": "327f5b54-f2d9-44ef-bc0f-75846e753c4b",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "dd964092-72f0-418f-b69f-35e580b9dac9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5c56faa1-76fc-4d8b-84b5-96e7f4beba63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12c9a0e7-5a2f-422b-a1dc-81b3a3718627",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "04860f43-f23a-441d-8f4d-5942bd578e34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8618dee7-31cb-4710-9b1e-6b3cadbbab27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2224515a-0d26-4161-a780-32edfdde166f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "95ed5387-9579-4ca2-9955-8c95f0608586",
      "documentation": "Starts a new run of the specified workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartWorkflowRun",
      "responses": [
        {
          "uuid": "094dda43-a1a5-4280-992b-02c7c1aa2d16",
          "body": "{\n  \"RunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "69823c5a-695e-47b6-8d85-811cacb62ad2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "68115e83-88ef-45df-a144-4505c5941518",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3a677803-5015-4625-a20c-b5929ee8dd3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "605a4ee3-5a6f-48f7-9fd0-5948ce7ce192",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d9475a8-d7b7-4aa4-b9a5-dab7bd12e428",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f136426d-1c85-43c4-af2e-9a32036c7ad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f96b0092-88db-4432-aa56-a94a70f5f09e",
      "documentation": "If the specified crawler is running, stops the crawl.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopCrawler",
      "responses": [
        {
          "uuid": "e1196ef9-6dc6-4877-ace6-8e165e0a55d4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2c0a7f34-4573-4063-b8ae-4f552791c399",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "879dcce1-520c-4338-b4f8-f1fcd89184f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerNotRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5345ec6-4fe4-4e92-86bd-c8c8a20cbf63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CrawlerStoppingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c5b44cb7-a088-407c-a78b-6775b8e45ef1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5105edbc-dbb8-4e40-b185-1aaef29e978a",
      "documentation": "Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but does not stop the crawler if it is already running.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopCrawlerSchedule",
      "responses": [
        {
          "uuid": "1cb01d81-b013-4021-88ec-d4f72900aff1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4aaace5c-7a21-483f-9a2a-b2659c377d04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1cab310a-559b-4624-945a-0ec6f97a0259",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "SchedulerNotRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "448b2a1f-04b0-4619-8507-2cd53cb13124",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f5b3645a-a9ba-46ca-ba20-673454311a4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8567f638-a59e-4048-8ab6-5bc2b1d48a8c",
      "documentation": "Stops a specified trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopTrigger",
      "responses": [
        {
          "uuid": "938cb2a9-7117-4758-88f9-702526845e04",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c3f57e2b-4a2b-464b-9ddd-c99bec350f08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fd80be14-dc41-48b2-ad21-ae958a7a20ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "baa19eda-9128-4f29-adfe-6326dd7a76e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f12b8c1c-b0cb-4e4f-acfd-e44f925f1f0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d4c66bb7-bfe3-46f9-8f52-a3ef7e642700",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c36c9b31-e41b-40dc-ab44-503458f5e94b",
      "documentation": "Stops the execution of the specified workflow run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopWorkflowRun",
      "responses": [
        {
          "uuid": "b088d3b8-db51-4828-b8ea-320a50d59faf",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "46879f37-c738-4b0a-a733-b081d634b9b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a26047c-309d-473d-acaf-9e0b2516931d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d7e14198-5283-4111-abfb-ffaae7b87b2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dd21572c-77e5-4286-a599-482ae37d992a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "eb27cc58-5bf4-4921-9966-ee6bbbb08657",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IllegalWorkflowStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "84da0710-84e4-440c-ab53-811ec5f9e92e",
      "documentation": "Adds tags to a resource. A tag is a label you can assign to an Amazon Web Services resource. In Glue, you can tag only certain resources. For information about what resources you can tag, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\">Amazon Web Services Tags in Glue</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.TagResource",
      "responses": [
        {
          "uuid": "f5801aaa-e6ac-451d-a3b7-54f45c32eb7c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "654bc40b-8069-4e19-ab7a-38cdb7bf1f5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1b3c26ab-1c56-4b7c-a844-d3c618569ab2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "140315ae-7ccb-4b83-937d-f222a4169405",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "11e13c57-0ef5-4e04-b827-abfa23df79aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "66753aac-1ae9-4471-88e1-73d93f45d492",
      "documentation": "Removes tags from a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UntagResource",
      "responses": [
        {
          "uuid": "9cc915f4-beb5-4248-a65a-f9ddf76b2864",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "4a8670c7-5b04-4498-bee5-366751be9b0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "55e2c3d5-324d-49ac-8f80-f65b5d66c941",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "574eb576-1c8d-41ee-a6b1-b99fa1c99f5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "206cd7af-fa44-444c-8aeb-226a55dc1d00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f2ac8983-5768-437a-ae74-1bde0dfa4f2a",
      "documentation": "Updates a registered blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateBlueprint",
      "responses": [
        {
          "uuid": "d1822795-e11c-4a34-8566-aca9d58b8083",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7afc285b-fbfa-4ad8-970d-912c2a670d60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "afef1a6c-ad46-4c3c-86cc-5371d0c4a752",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f7148d21-a1f5-4dc5-a9df-1e566e91a051",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6cb26ec0-9ca3-4eee-97c2-4de3fa31f37d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84ced2a4-a1d5-4178-8a79-ac070d6c400f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "84241049-d174-431a-8462-bf9c34ec8603",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalBlueprintStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9dcc18c1-15ce-47eb-a3a5-0f17a167f583",
      "documentation": "Modifies an existing classifier (a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field is present).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateClassifier",
      "responses": [
        {
          "uuid": "661c3871-862d-4a19-a8bd-7fb72d9794b9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ca22868a-99ef-4bda-88e9-a2b36e4e86f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12f13fff-212c-4286-aae4-a09b51663e7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b4592e8-0fd1-40fd-8d72-e737f4aa52cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1e7c0f66-5544-4769-a6bc-50f2f34b4aac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c9299fdc-b1f9-4491-bed0-be62dbf55302",
      "documentation": "<p>Creates or updates partition statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>UpdatePartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "805e0dd0-7763-42ef-9419-61cb737f0cfd",
          "body": "{\n  \"Errors\": [\n    {\n      \"ColumnStatistics\": {\n        \"ColumnName\": \"\",\n        \"ColumnType\": \"\",\n        \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"StatisticsData\": {\n          \"Type\": \"\",\n          \"BooleanColumnStatisticsData\": {\n            \"NumberOfTrues\": {{faker 'datatype.number'}},\n            \"NumberOfFalses\": {{faker 'datatype.number'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}}\n          },\n          \"DateColumnStatisticsData\": {\n            \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n            \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"DecimalColumnStatisticsData\": {\n            \"MinimumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'datatype.number'}}\n            },\n            \"MaximumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'datatype.number'}}\n            },\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"DoubleColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'datatype.float'}},\n            \"MaximumValue\": {{faker 'datatype.float'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"LongColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'datatype.number'}},\n            \"MaximumValue\": {{faker 'datatype.number'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"StringColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'datatype.number'}},\n            \"AverageLength\": {{faker 'datatype.float'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"BinaryColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'datatype.number'}},\n            \"AverageLength\": {{faker 'datatype.float'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1d865e4d-4a3a-4c22-ab98-580997bd17ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bc3669f7-c326-4a38-917d-42bdb074a02f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "344c12f4-d7a1-4671-a999-f5a5dfcab627",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ec222b5-6ce8-4a72-a706-7ad78db3b0b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "32b63ada-b749-4460-bc38-73e34b93f9ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dafa502a-ddb4-4be3-97dd-b26d83c72fb2",
      "documentation": "<p>Creates or updates table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>UpdateTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "c057456d-f808-4654-893a-f78ba1873b19",
          "body": "{\n  \"Errors\": [\n    {\n      \"ColumnStatistics\": {\n        \"ColumnName\": \"\",\n        \"ColumnType\": \"\",\n        \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"StatisticsData\": {\n          \"Type\": \"\",\n          \"BooleanColumnStatisticsData\": {\n            \"NumberOfTrues\": {{faker 'datatype.number'}},\n            \"NumberOfFalses\": {{faker 'datatype.number'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}}\n          },\n          \"DateColumnStatisticsData\": {\n            \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n            \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"DecimalColumnStatisticsData\": {\n            \"MinimumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'datatype.number'}}\n            },\n            \"MaximumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'datatype.number'}}\n            },\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"DoubleColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'datatype.float'}},\n            \"MaximumValue\": {{faker 'datatype.float'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"LongColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'datatype.number'}},\n            \"MaximumValue\": {{faker 'datatype.number'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"StringColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'datatype.number'}},\n            \"AverageLength\": {{faker 'datatype.float'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}},\n            \"NumberOfDistinctValues\": {{faker 'datatype.number'}}\n          },\n          \"BinaryColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'datatype.number'}},\n            \"AverageLength\": {{faker 'datatype.float'}},\n            \"NumberOfNulls\": {{faker 'datatype.number'}}\n          }\n        }\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "20183533-d31b-4ce9-ba85-f4c281b3354c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6d1a6ea7-7f97-4a4a-9607-440df4ef6d30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6f7a3ef2-2f80-4a79-852b-2bc731e614eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "238007d7-e576-44de-a7a7-039fa5068429",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "975b8cf1-d3f8-45de-a728-6796fd467d70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5f51d03d-df72-452a-b571-79cfeebdba7e",
      "documentation": "Updates a connection definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateConnection",
      "responses": [
        {
          "uuid": "bb490f31-6a07-4a59-b6f0-36a4b6728b20",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "96e1e282-9f84-4838-afd4-9a30f08db416",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "2f68afcf-6a48-48cc-b127-b104beb5db83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "42250d48-a401-44c9-a721-42ddf20be7d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7534e733-71da-4694-a385-e9b4cc08aee3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9ef7c03a-b6d6-4272-8df6-f41a5ed69f8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a10197b0-1505-49d1-87fe-010e6b7b9369",
      "documentation": "Updates a crawler. If a crawler is running, you must stop it using <code>StopCrawler</code> before updating it.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateCrawler",
      "responses": [
        {
          "uuid": "c74a65e3-86f6-45e3-b1be-f17fc913acd5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "38354d4c-18d2-41e2-bb15-0f34de12572b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "fdb751f8-5951-4397-9fbd-0a3ddb09cf00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da55e461-6df4-4277-a4a3-ec12e7cd0cf8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bed1f872-6cb9-4e65-b33f-4e47e94a82ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5757ad79-0458-4cdc-a61a-ef42010d7376",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c6ec8313-8089-42cd-b744-705bacfd590d",
      "documentation": "Updates the schedule of a crawler using a <code>cron</code> expression. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateCrawlerSchedule",
      "responses": [
        {
          "uuid": "a4bd5d39-e6f7-4437-b162-e9808d449a62",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5aad27d2-f9a2-44a8-923b-8a48d83c4853",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df928724-e94e-42b3-a0d9-707ecfe26283",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "013614a0-48e7-4724-9d18-27cdb135d85f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a940b16-b9a5-4396-ace6-7ca2675d9846",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "095ef27e-bf2c-40af-b807-1257979c0476",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "376a2190-6e99-4200-a6f8-cda3125d5eb0",
      "documentation": "Updates an existing database definition in a Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateDatabase",
      "responses": [
        {
          "uuid": "58817b96-bc69-4bfc-b24d-1b05b9882c97",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "52860667-e58b-41ae-a61c-0caf6e3abeda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "80b63d6a-c62f-4b9a-9806-315d685b6c5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "93f9fed1-2de7-4dc6-9477-4ff46bf08c0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ca9f0804-0b4d-44da-b455-b6f424f19f69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f8e62f0f-4400-485a-a065-56a833e65cf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4f1794ec-6c38-4c26-bdfb-a1f0f4e2340e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7eb03c6e-73f3-48e1-ae6a-029ebb972e9e",
      "documentation": "Updates a specified development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateDevEndpoint",
      "responses": [
        {
          "uuid": "a7714b75-7b90-4761-b50e-8d485ba68bf3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a57a1fb5-beb8-4899-b858-f3395a6f8768",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d9e1c14c-4560-4026-aa5f-d342a32147cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36449b59-b58a-4a9c-bc80-251aa11c7dfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ecde0101-a3e6-485f-b431-518207720233",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "73722664-d9eb-42b5-b7b2-8feb11516054",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22cc9b33-680a-4a0c-a86f-ed4b2bd6c38f",
      "documentation": "Updates an existing job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateJob",
      "responses": [
        {
          "uuid": "8a80c33d-36a5-45e4-a42c-c221bb8f36ee",
          "body": "{\n  \"JobName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "75edad69-192b-4856-a2f7-e2605b8f61d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bfa45371-c91c-4d73-b2fc-b9d3b425fc6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3c1f0d43-e0b8-4945-b93e-5e2ad26d84c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f16cf2fa-16b0-43f5-963e-87310c2c0849",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e800e886-24ca-4edc-9dc6-c68689072bfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "96c65084-5df8-42a2-919c-94b0b04e7495",
      "documentation": "<p>Updates an existing machine learning transform. Call this operation to tune the algorithm parameters to achieve better results.</p> <p>After calling this operation, you can call the <code>StartMLEvaluationTaskRun</code> operation to assess how well your new parameters achieved your goals (such as improving the quality of your machine learning transform, or making it more cost-effective).</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateMLTransform",
      "responses": [
        {
          "uuid": "523bf122-1294-4cc2-bfec-f3d859e123a5",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "86881115-bed6-42a6-a2f6-93b8fa80505c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9da9b108-2768-47f2-a2a4-6fe5676c5274",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "db9820cb-9757-4288-b2b4-d2c30116ef9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53ffc113-974f-4ecd-8753-b0a05b82978d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9b31c7d5-6364-486d-a499-ad7b160307c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aac93796-cef5-4ddd-91f3-06dbffb92449",
      "documentation": "Updates a partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdatePartition",
      "responses": [
        {
          "uuid": "422ea46f-aae3-467f-8924-58fd68a22619",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "54ac74c2-0a49-443d-bf9f-b46dad87b13b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7488ac10-ea59-43d9-ae26-4666b8403e6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "dbf1b3e1-5485-48f9-8339-021cb3f7968a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "486fdfb4-589f-417d-9be5-8c14a8138cd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e9d4201d-76fb-476f-bea2-b0aa5c889276",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c5d393ae-dca7-4f61-a537-9ea5d0e12bfd",
      "documentation": "Updates an existing registry which is used to hold a collection of schemas. The updated properties relate to the registry, and do not modify any of the schemas within the registry. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateRegistry",
      "responses": [
        {
          "uuid": "e250cc23-64c9-418a-ae13-1be5a3390dde",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ba3121c3-8b96-40d2-8c3f-1bb62b3c16dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "741a8a92-e3d9-4599-a926-eeb406f3ffd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c3934cc8-7018-46df-8a07-4c8e064697fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1a2fb163-827c-4ea7-8b39-7ee83fc42be3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b0e7148-c940-4b71-ad95-36b978b54002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a7f0c904-26cf-41fe-b805-d6b03b879f09",
      "documentation": "<p>Updates the description, compatibility setting, or version checkpoint for a schema set.</p> <p>For updating the compatibility setting, the call will not validate compatibility for the entire set of schema versions with the new compatibility setting. If the value for <code>Compatibility</code> is provided, the <code>VersionNumber</code> (a checkpoint) is also required. The API will validate the checkpoint version number for consistency.</p> <p>If the value for the <code>VersionNumber</code> (checkpoint) is provided, <code>Compatibility</code> is optional and this can be used to set/reset a checkpoint for the schema.</p> <p>This update will happen only if the schema is in the AVAILABLE state.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateSchema",
      "responses": [
        {
          "uuid": "28f37e7b-d0ca-4ccc-85dc-30c402dc5a10",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "354766a9-3dbf-4f5c-bc12-4b2b04db5c9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7240269b-deae-4ae0-803f-53b0b91ad130",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7547af15-95e0-47c0-9e99-779d22a33b1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "51c00fb3-43ab-49a1-8e9a-f637b098405c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f1abb70d-c904-48cd-9727-a6e084bc033f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d30c3a47-a5c6-4cd1-95a1-2906e95375e8",
      "documentation": "Updates a metadata table in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateTable",
      "responses": [
        {
          "uuid": "9673c29b-1f73-4c3b-93fb-b91f41305f23",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1df0c0d7-b819-4d89-a3ce-1cde2c2cdd2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "549883b2-1644-494c-83a4-cf248e1c3058",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5143f050-c7b8-4ab6-a941-f2ec18cf48ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c6e26291-957d-4306-97ee-62addb4499cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3715858f-cbf7-412f-acf2-76e4fb597efa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f67cf496-4868-429a-bcad-7b5f8fbabf66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ee5c51ec-19bc-4d7f-a07d-3b7370e29016",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1d4d9976-5586-4264-861d-65c9ce2d919d",
      "documentation": "Updates a trigger definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateTrigger",
      "responses": [
        {
          "uuid": "be0228b5-2596-403e-a0af-ae0532be678f",
          "body": "{\n  \"Trigger\": {\n    \"Name\": \"\",\n    \"WorkflowName\": \"\",\n    \"Id\": \"\",\n    \"Type\": \"\",\n    \"State\": \"\",\n    \"Description\": \"\",\n    \"Schedule\": \"\",\n    \"Actions\": [\n      {\n        \"JobName\": \"\",\n        \"Arguments\": {},\n        \"Timeout\": {{faker 'datatype.number'}},\n        \"SecurityConfiguration\": \"\",\n        \"NotificationProperty\": {\n          \"NotifyDelayAfter\": {{faker 'datatype.number'}}\n        },\n        \"CrawlerName\": \"\"\n      }\n    ],\n    \"Predicate\": {\n      \"Logical\": \"\",\n      \"Conditions\": [\n        {\n          \"LogicalOperator\": \"\",\n          \"JobName\": \"\",\n          \"State\": \"\",\n          \"CrawlerName\": \"\",\n          \"CrawlState\": \"\"\n        }\n      ]\n    },\n    \"EventBatchingCondition\": {\n      \"BatchSize\": {{faker 'datatype.number'}},\n      \"BatchWindow\": {{faker 'datatype.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f347d7ed-0d7f-47eb-b473-28574ded2575",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7c68f6f0-f802-43d4-8195-e2add0cb6c9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "df3d28ab-71c7-44c2-b4d6-d6bcbe7a00b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7feff17d-37ed-49d1-bbe0-079cb1f59b6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0008df05-eeea-4e4f-9336-520221fb6674",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "75dac175-1d2f-4f19-b8a1-db2fbd82827a",
      "documentation": "Updates an existing function definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateUserDefinedFunction",
      "responses": [
        {
          "uuid": "178589ba-a3ad-4290-b612-f3a6e5645f71",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "16e7973a-67aa-41b3-b39a-45d872dcd5ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d10e0b9-e56f-457f-b054-641f3eaa93d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4781ba7f-8bab-47f7-81c9-0ca1c72afd8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "656557db-41d7-48d5-888f-42458b2dc89c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "94cc1d81-96e3-4bf2-bf03-1e79e78ef7e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "22c9b9be-eb4d-4a45-a59d-d57ace2d8e23",
      "documentation": "Updates an existing workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateWorkflow",
      "responses": [
        {
          "uuid": "b9bca56c-66c1-4f74-9840-996e4f17f284",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "650e9b6f-c63c-4c93-b815-b7377334c8c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e575a876-ff98-460a-a31b-c6c267958111",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "380b4037-0a47-4f40-8824-77f6358ae2e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "455bbacf-29b1-4aa9-9173-974a449cb3dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "47884411-7bd8-42c4-a1b2-f5821db9ff43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}