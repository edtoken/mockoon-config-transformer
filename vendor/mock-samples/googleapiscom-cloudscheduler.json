{
  "uuid": "a6598cea-9563-4a77-b789-df317447bd82",
  "lastMigration": 24,
  "name": "Cloud Scheduler API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "abc5e279-aed2-49cc-9cfe-542f61f2410b",
      "documentation": "Deletes a job.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "3ae5a461-bdd8-49a6-b85e-20cc79f59365",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d824acf8-b391-41c6-8762-45d9ac84b9d5",
      "documentation": "Gets a job.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "d2816dd9-edae-477e-a125-cef61b2b655a",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"legacyAppEngineCron\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'datatype.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'datatype.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8fed98af-7ecb-4b90-8ad8-545576da8a29",
      "documentation": "Updates a job. If successful, the updated Job is returned. If the job does not exist, `NOT_FOUND` is returned. If UpdateJob does not successfully return, it is possible for the job to be in an Job.State.UPDATE_FAILED state. A job in this state may not be executed. If this happens, retry the UpdateJob request until a successful response is received.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "4e51221e-7d6e-4b8c-a965-6ed4a2ae093a",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"legacyAppEngineCron\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'datatype.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'datatype.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d721161a-7d0b-4cbf-81ce-d74ce0c41c64",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta1/:name/locations",
      "responses": [
        {
          "uuid": "e7157ebc-2d96-44d4-9550-ee4cebfe22b0",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cc558853-c1fa-4bad-8a6a-f7020395267c",
      "documentation": "Pauses a job. If a job is paused then the system will stop executing the job until it is re-enabled via ResumeJob. The state of the job is stored in state; if paused it will be set to Job.State.PAUSED. A job must be in Job.State.ENABLED to be paused.",
      "method": "post",
      "endpoint": "v1beta1/:name:pause",
      "responses": [
        {
          "uuid": "0a822c67-716c-4d17-878a-127b6102f6a4",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"legacyAppEngineCron\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'datatype.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'datatype.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f5955723-93f5-42ab-94ed-c141a33cda75",
      "documentation": "Resume a job. This method reenables a job after it has been Job.State.PAUSED. The state of a job is stored in Job.state; after calling this method it will be set to Job.State.ENABLED. A job must be in Job.State.PAUSED to be resumed.",
      "method": "post",
      "endpoint": "v1beta1/:name:resume",
      "responses": [
        {
          "uuid": "82225244-9e30-4c28-a8f6-a82e5e015f89",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"legacyAppEngineCron\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'datatype.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'datatype.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1f0f3ed2-a255-4ff2-9df3-37c0097e8284",
      "documentation": "Forces a job to run now. When this method is called, Cloud Scheduler will dispatch the job, even if the job is already running.",
      "method": "post",
      "endpoint": "v1beta1/:name:run",
      "responses": [
        {
          "uuid": "9d694428-3c61-4446-9b1e-4f2ff21af9a8",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"legacyAppEngineCron\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'datatype.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'datatype.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4119d570-8b15-4ecb-8d1d-785050fdaa9f",
      "documentation": "Lists jobs.",
      "method": "get",
      "endpoint": "v1beta1/:parent/jobs",
      "responses": [
        {
          "uuid": "8060444f-0da8-4ef6-beec-09ab5fd04f61",
          "body": "{\n  \"jobs\": [\n    {\n      \"appEngineHttpTarget\": {\n        \"appEngineRouting\": {\n          \"host\": \"\",\n          \"instance\": \"\",\n          \"service\": \"\",\n          \"version\": \"\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n        \"relativeUri\": \"\"\n      },\n      \"attemptDeadline\": \"\",\n      \"description\": \"\",\n      \"httpTarget\": {\n        \"body\": \"\",\n        \"headers\": {},\n        \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n        \"oauthToken\": {\n          \"scope\": \"\",\n          \"serviceAccountEmail\": \"\"\n        },\n        \"oidcToken\": {\n          \"audience\": \"\",\n          \"serviceAccountEmail\": \"\"\n        },\n        \"uri\": \"\"\n      },\n      \"lastAttemptTime\": \"\",\n      \"legacyAppEngineCron\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"pubsubTarget\": {\n        \"attributes\": {},\n        \"data\": \"\",\n        \"topicName\": \"\"\n      },\n      \"retryConfig\": {\n        \"maxBackoffDuration\": \"\",\n        \"maxDoublings\": {{faker 'datatype.number'}},\n        \"maxRetryDuration\": \"\",\n        \"minBackoffDuration\": \"\",\n        \"retryCount\": {{faker 'datatype.number'}}\n      },\n      \"schedule\": \"\",\n      \"scheduleTime\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n      \"status\": {\n        \"code\": {{faker 'datatype.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"timeZone\": \"\",\n      \"userUpdateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3e8c12b1-934a-4f2d-8c24-2d5575741da4",
      "documentation": "Creates a job.",
      "method": "post",
      "endpoint": "v1beta1/:parent/jobs",
      "responses": [
        {
          "uuid": "9b459079-b794-4c81-8213-13475568903c",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"legacyAppEngineCron\": {{faker 'datatype.boolean'}},\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'datatype.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'datatype.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'datatype.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}