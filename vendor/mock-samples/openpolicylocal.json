{
  "uuid": "61f2c4e4-8dca-447b-b6c2-b4348e81f393",
  "lastMigration": 24,
  "name": "Open Policy Agent (OPA) REST API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "880b5efd-02f1-43ed-8f3e-833fe8ad3365",
      "documentation": "Execute a simple query",
      "method": "post",
      "endpoint": "",
      "responses": [
        {
          "uuid": "2d0be25a-7919-4e1d-875e-ae6a32665b22",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8fefa638-ff06-4bca-b0f3-dee4bf58b122",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "da674c9f-370a-41a9-8c90-64c33bdb404b",
          "body": "{\n  \"code\": \"resource_not_found\",\n  \"message\": \"storage_not_found_error: policy id \\\\\\\"partial\\\\\\\"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found (for example, a requested policy module or document does not exist)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "4d9c96ff-6370-4301-bbdf-1a3b2a945a27",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4a89cdb8-61ee-4c4a-96dd-fcac5d7553de",
      "documentation": "Health",
      "method": "get",
      "endpoint": "health",
      "responses": [
        {
          "uuid": "fb443bbb-2a9b-4e15-899f-054fcd3a15f6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OPA service is healthy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "e92d7930-e538-4806-ae73-c66f5cf61d0d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "OPA service is not healthy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5e020cd8-cf1f-42de-9db4-0264ea986cd5",
      "documentation": "Get a document (with webhook)",
      "method": "post",
      "endpoint": "v0/data/:path",
      "responses": [
        {
          "uuid": "77a53155-ccc6-4f61-ac94-a69c17b9f178",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "a5be9718-0ae7-4bfd-9bcf-6656451aa0d2",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "09a9c100-ba77-4b32-bc15-867b02057811",
          "body": "{\n  \"code\": \"resource_not_found\",\n  \"message\": \"storage_not_found_error: policy id \\\\\\\"partial\\\\\\\"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found (for example, a requested policy module or document does not exist)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d09bef68-ec33-4b53-aedf-8a916ad5e1b1",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "8d4974ef-4394-45b6-9b65-f277d7dd09a8",
      "documentation": "Compile",
      "method": "post",
      "endpoint": "v1/compile",
      "responses": [
        {
          "uuid": "cabf6ed9-621e-48f9-b787-b2beec8028cd",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5c00eaee-714c-4dcf-80e0-503b56aa7855",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "66ab35ce-3aa6-4197-8a3a-a2f586b3e504",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "52ae71ba-9a9e-406c-bfbf-697b650830bf",
      "documentation": "Delete a document",
      "method": "delete",
      "endpoint": "v1/data/:path",
      "responses": [
        {
          "uuid": "0951cb99-5f39-4b17-bccb-390e69ca53d4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "2307a402-f61b-46e4-971a-448f9b13ca1d",
          "body": "{\n  \"code\": \"resource_not_found\",\n  \"message\": \"storage_not_found_error: policy id \\\\\\\"partial\\\\\\\"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found (for example, a requested policy module or document does not exist)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3678dad9-37c7-443d-a8c8-ef62fae8e36e",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5de241e5-245d-401d-8c3c-3ef445057654",
      "documentation": "Get a document",
      "method": "get",
      "endpoint": "v1/data/:path",
      "responses": [
        {
          "uuid": "eeb0b69d-47b7-489f-a417-cc577da3bf05",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f904d024-99c2-43a0-b451-f9fc9c406100",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53400af8-eec2-4ef7-9970-5ad745a86db0",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "abe06c34-8c50-4979-8bae-2dcb8bc38297",
      "documentation": "Update a document",
      "method": "patch",
      "endpoint": "v1/data/:path",
      "responses": [
        {
          "uuid": "f71e3840-446f-4480-9a9f-a21bb9a488b4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "9a4be032-7c48-41b0-8b8c-331e9428f7d2",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "54fbbced-fb9e-4749-b483-6168873525c3",
          "body": "{\n  \"code\": \"resource_not_found\",\n  \"message\": \"storage_not_found_error: policy id \\\\\\\"partial\\\\\\\"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found (for example, a requested policy module or document does not exist)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "90e7b25e-7b3d-4ab1-bbbc-f147adc60edb",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "48895848-e09c-4bb7-9137-19bc7cc55fe3",
      "documentation": "Get a document (with input)",
      "method": "post",
      "endpoint": "v1/data/:path",
      "responses": [
        {
          "uuid": "bc12420f-8c15-4fd8-9653-5101b9f86eef",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c1876bda-ca39-4b24-8e0c-8fb59b353613",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d8b35ba9-6931-4f69-92aa-4023775a3f1d",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2481466f-4c09-4574-9573-01625b9237fd",
      "documentation": "Create or overwrite a document",
      "method": "put",
      "endpoint": "v1/data/:path",
      "responses": [
        {
          "uuid": "a2cffc03-e106-4513-b4e8-a29bbb4bc19a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "7058c275-0e7b-448a-8b80-0c3de3013876",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "Document was not modified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d602cfe0-0d44-4e1a-be59-bb0d11c72cae",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "27811646-3c03-4dda-8f0e-6bfb2768e9b3",
          "body": "{\n  \"code\": \"resource_not_found\",\n  \"message\": \"storage_not_found_error: policy id \\\\\\\"partial\\\\\\\"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found (for example, a requested policy module or document does not exist)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "8a6c7bd5-1f71-4ab0-bfc6-6c82d5b655e6",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa333c1b-b5a9-4fd1-a895-cc259ab2eb0a",
      "documentation": "List policies",
      "method": "get",
      "endpoint": "v1/policies",
      "responses": [
        {
          "uuid": "b4f92097-663b-4414-be87-d0be7213af4d",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5f8fc5b2-5e37-4368-bc16-4e406226f827",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "399122df-ec34-46d9-93c4-06127d798cce",
      "documentation": "Delete a policy module",
      "method": "delete",
      "endpoint": "v1/policies/:id",
      "responses": [
        {
          "uuid": "9e97fd25-0777-411b-8025-ee7eba927641",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "8be26833-40b2-4a72-ac9f-d4ccb1d82216",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "07f6ba76-a06b-400f-8615-62f2fe9fae86",
          "body": "{\n  \"code\": \"resource_not_found\",\n  \"message\": \"storage_not_found_error: policy id \\\\\\\"partial\\\\\\\"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found (for example, a requested policy module or document does not exist)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "3b764eaf-5ec4-4444-839b-96d009ef5d21",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "bf171a4a-13e7-4e32-9b73-a893181fd3fe",
      "documentation": "Get a policy module",
      "method": "get",
      "endpoint": "v1/policies/:id",
      "responses": [
        {
          "uuid": "d8779c35-3ab9-4fb0-9add-fc969b6d8ede",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "1cb00455-a8dc-408f-b4c9-1a3418de9fbf",
          "body": "{\n  \"code\": \"resource_not_found\",\n  \"message\": \"storage_not_found_error: policy id \\\\\\\"partial\\\\\\\"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found (for example, a requested policy module or document does not exist)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "53d397f6-08e6-459d-a18a-9dee2857dfd1",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "925dfa56-923c-4707-ac66-a034da0cfa9f",
      "documentation": "Create or update a policy module",
      "method": "put",
      "endpoint": "v1/policies/:id",
      "responses": [
        {
          "uuid": "20c0b9ca-2163-41d4-982a-f383bd172188",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "f2773b95-e833-4339-a387-ebe2fc578e1d",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "17564bd0-086c-459b-9500-b2ac3b8b88e9",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "affd5cc0-3e93-49ed-8758-bb43b1c95f0f",
      "documentation": "Execute an ad-hoc query (simple)",
      "method": "get",
      "endpoint": "v1/query",
      "responses": [
        {
          "uuid": "a26779bf-5ede-4f9e-a66f-5445d1029480",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "6e36a428-0b81-41b5-9d38-2069914bac34",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "999501dd-a67d-4f04-8ec2-33939d32468d",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0e8719a7-48fb-48ab-aaf7-0717a4362567",
      "documentation": "Execute an ad-hoc query (complex)",
      "method": "post",
      "endpoint": "v1/query",
      "responses": [
        {
          "uuid": "19f97551-0e44-43b1-a578-c022efaae09b",
          "body": "{\n  \"result\": [\n    {\n      \"ast\": {\n        \"package\": {\n          \"path\": [\n            {\n              \"type\": \"{{oneOf (array 'import' 'package')}}\",\n              \"value\": \"data.opa.example\"\n            }\n          ]\n        },\n        \"rules\": [\n          {\n            \"body\": [\n              {\n                \"index\": 1,\n                \"terms\": [\n                  {\n                    \"type\": \"var\",\n                    \"value\": [\n                      {\n                        \"type\": \"\",\n                        \"value\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ],\n            \"head\": {\n              \"key\": {\n                \"type\": \"var\",\n                \"value\": \"$0\"\n              },\n              \"name\": \"violations\"\n            }\n          }\n        ]\n      },\n      \"id\": \"example2\",\n      \"raw\": \"package opa.examples\\\\n\\\\nimport data.servers\\\\n\\\\nviolations[server] {\\\\n\\\\tserver = servers[_]\\\\n\\\\tserver.protocols[_] = \\\\\\\"http\\\\\\\"\\\\n\\\\tpublic_servers[server]\\\\n}\\\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5a3c5068-2df7-41f9-97f9-4bfa03d5ebc9",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1584ca54-d0bb-49b3-8a3a-4c77d24ba483",
          "body": "{\n  \"code\": \"invalid_parameter\",\n  \"errors\": [\n    {\n      \"code\": \"rego_unsafe_var_error\",\n      \"location\": {\n        \"col\": 1,\n        \"file\": \"example1\",\n        \"row\": 3\n      },\n      \"message\": \"var x is unsafe\"\n    }\n  ],\n  \"message\": \"error(s) occurred while compiling module(s)\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7a5e36e5-dc1b-42b5-9840-5c47975bc623",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "Streaming not implemented",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}